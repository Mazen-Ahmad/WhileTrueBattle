{
  "contestId": 2074,
  "index": "G",
  "name": "Game With Triangles: Season 2",
  "rating": 2100,
  "tags": [
    "implementation"
  ],
  "statement": "The Frontman greets you to this final round of the survival game. There is a regular polygon with $$$n$$$ sides ($$$n \\ge 3$$$). The vertices are indexed as $$$1,2,\\ldots,n$$$ in clockwise order. On each vertex $$$i$$$, the pink soldiers have written a positive integer $$$a_i$$$. With this regular polygon, you will play a game defined as follows. Initially, your score is $$$0$$$. Then, you perform the following operation any number of times to increase your score. Select $$$3$$$ different vertices $$$i$$$, $$$j$$$, $$$k$$$ that you have not chosen before, and draw the triangle formed by the three vertices. Then, your score increases by $$$a_i \\cdot a_j \\cdot a_k$$$. However, you can not perform this operation if the triangle shares a positive common area with any of the triangles drawn previously. An example of a state after two operations is on the left. The state on the right is impossible as the two triangles share a positive common area. Your objective is to maximize the score. Please find the maximum score you can get from this game.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ — the number of vertices ($$$3 \\le n \\le 400$$$). The second line of each test case contains $$$a_1,a_2,\\ldots,a_n$$$ — the integers written on vertices ($$$1 \\le a_i \\le 1000$$$). It is guaranteed that the sum of $$$n^3$$$ over all test cases does not exceed $$$400^3$$$.",
  "outputFormat": "For each test case, output the maximum score you can get on a separate line.",
  "sampleTests": [
    {
      "input": "6\n3\n1 2 3\n4\n2 1 3 4\n6\n2 1 2 1 1 1\n6\n1 2 1 3 1 5\n9\n9 9 8 2 4 4 3 5 3\n9\n9 9 3 2 4 4 8 5 3",
      "output": "6\n24\n5\n30\n732\n696"
    }
  ],
  "timeLimit": 4000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/2074/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}