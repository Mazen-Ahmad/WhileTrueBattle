{
  "contestId": 1827,
  "index": "B1",
  "name": "Range Sorting (Easy Version)",
  "rating": 2000,
  "tags": [
    "implementation"
  ],
  "statement": "The only difference between this problem and the hard version is the constraints on $$$t$$$ and $$$n$$$. You are given an array $$$a$$$, consisting of $$$n$$$ distinct integers $$$a_1, a_2, \\ldots, a_n$$$. Define the beauty of an array $$$p_1, p_2, \\ldots p_k$$$ as the minimum amount of time needed to sort this array using an arbitrary number of range-sort operations. In each range-sort operation, you will do the following: Choose two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l < r \\le k$$$). Sort the subarray $$$p_l, p_{l + 1}, \\ldots, p_r$$$ in $$$r - l$$$ seconds. Please calculate the sum of beauty over all subarrays of array $$$a$$$. A subarray of an array is defined as a sequence of consecutive elements of the array.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 5 \\cdot 10^3$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 5 \\cdot 10^3$$$) â€” the length of the array $$$a$$$. The second line of each test case consists of $$$n$$$ integers $$$a_1,a_2,\\ldots, a_n$$$ ($$$1\\le a_i\\le 10^9$$$). It is guaranteed that all elements of $$$a$$$ are pairwise distinct. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5 \\cdot 10^3$$$.",
  "outputFormat": "For each test case, output the sum of beauty over all subarrays of array $$$a$$$.",
  "sampleTests": [
    {
      "input": "5\n2\n6 4\n3\n3 10 6\n4\n4 8 7 2\n5\n9 8 2 4 6\n12\n2 6 13 3 15 5 10 8 16 9 11 18",
      "output": "1\n2\n8\n16\n232"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1827/B1",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}