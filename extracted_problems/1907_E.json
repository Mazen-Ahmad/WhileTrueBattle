{
  "contestId": 1907,
  "index": "E",
  "name": "Good Triples",
  "rating": 1600,
  "tags": [
    "implementation"
  ],
  "statement": "Given a non-negative integer number $$$n$$$ ($$$n \\ge 0$$$). Let's say a triple of non-negative integers $$$(a, b, c)$$$ is good if $$$a + b + c = n$$$, and $$$digsum(a) + digsum(b) + digsum(c) = digsum(n)$$$, where $$$digsum(x)$$$ is the sum of digits of number $$$x$$$. For example, if $$$n = 26$$$, then the pair $$$(4, 12, 10)$$$ is good, because $$$4 + 12 + 10 = 26$$$, and $$$(4) + (1 + 2) + (1 + 0) = (2 + 6)$$$. Your task is to find the number of good triples for the given number $$$n$$$. The order of the numbers in a triple matters. For example, the triples $$$(4, 12, 10)$$$ and $$$(10, 12, 4)$$$ are two different triples.",
  "inputFormat": "The first line of input contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) â€” the number of test cases. Descriptions of test cases follow. The first and only line of the test case contains one integer $$$n$$$ ($$$0 \\le n \\le 10^7$$$).",
  "outputFormat": "For each test case output one integer, the number of good triples for the given integer $$$n$$$. Order of integers in a triple matters.",
  "sampleTests": [
    {
      "input": "12\n11\n0\n1\n2\n3\n4\n5\n3141\n999\n2718\n9999999\n10000000",
      "output": "9\n1\n3\n6\n10\n15\n21\n1350\n166375\n29160\n1522435234375\n3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1907/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}