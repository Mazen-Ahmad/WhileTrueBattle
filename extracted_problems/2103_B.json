{
  "contestId": 2103,
  "index": "B",
  "name": "Binary Typewriter",
  "rating": 1100,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a binary string $$$s$$$ of length $$$n$$$ and a typewriter with two buttons: 0 and 1 . Initially, your finger is on the button 0 . You can do the following two operations: Press the button your finger is currently on. This will type out the character that is on the button. Move your finger to the other button. If your finger is on button 0 , move it to button 1 , and vice versa. The cost of a binary string is defined as the minimum number of operations needed to type the entire string. Before typing, you may reverse at most one substring$$$^{\\text{∗}}$$$ of $$$s$$$. More formally, you can choose two indices $$$1\\le l\\le r\\le n$$$, and reverse the substring $$$s_{l\\ldots r}$$$, resulting in the new string $$$s_1s_2\\ldots s_{l-1}s_rs_{r-1}\\ldots s_ls_{r+1}\\ldots s_n$$$. Your task is to find the minimum possible cost among all strings obtainable by performing at most one substring reversal on $$$s$$$. $$$^{\\text{∗}}$$$A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1\\le n\\le 2\\cdot 10^5$$$) — the length of the binary string $$$s$$$. The second line of each test case contains a binary string $$$s_1s_2\\ldots s_n$$$ ($$$s_i = \\mathtt{0}$$$ or $$$s_i = \\mathtt{1}$$$) — the characters of the binary string $$$s$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output the minimum cost of string $$$s$$$ after performing at most one substring reversal.",
  "sampleTests": [
    {
      "input": "6\n3\n000\n3\n111\n3\n011\n3\n100\n5\n10101\n19\n1101010010011011100",
      "output": "3\n4\n4\n4\n8\n29"
    }
  ],
  "timeLimit": 1500,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2103/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}