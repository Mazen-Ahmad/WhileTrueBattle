{
  "contestId": 2011,
  "index": "G",
  "name": "Removal of a Permutation",
  "rating": null,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a permutation $$$p$$$ of length $$$n$$$. You can perform operations of two types: mark all positions $$$i$$$ such that $$$1 \\le i < n$$$ and $$$p_i < p_{i + 1}$$$, and simultaneously remove the elements at these positions; mark all positions $$$i$$$ such that $$$2 \\le i \\le n$$$ and $$$p_{i - 1} > p_i$$$, and simultaneously remove the elements at these positions. For each integer from $$$1$$$ to $$$(n-1)$$$, calculate the minimum number of operations required to remove that integer from the permutation.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) â€” the number of test cases. The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 250\\,000$$$). The second line of each test case contains $$$n$$$ integers $$$p_1, p_2, \\dots, p_n$$$ ($$$1 \\le p_i \\le n$$$). The array $$$p$$$ is a permutation. Additional constraints on the input: the sum of $$$n$$$ over all test cases does not exceed $$$250\\,000$$$.",
  "outputFormat": "For each test case, print $$$(n-1)$$$ integers. The $$$i$$$-th of them should be equal to the minimum number of operations required to remove $$$i$$$ from the permutation.",
  "sampleTests": [
    {
      "input": "5\n4\n4 2 1 3\n2\n1 2\n6\n5 4 1 3 2 6\n7\n5 6 1 3 7 2 4\n5\n3 1 2 5 4",
      "output": "1 1 2\n1\n1 1 2 1 3\n1 1 1 2 1 2\n1 1 2 1"
    }
  ],
  "timeLimit": 5000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/2011/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}