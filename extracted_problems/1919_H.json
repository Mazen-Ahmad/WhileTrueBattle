{
  "contestId": 1919,
  "index": "H",
  "name": "Tree Diameter",
  "rating": 2000,
  "tags": [
    "implementation"
  ],
  "statement": "There is a hidden tree with $$$n$$$ vertices. The $$$n-1$$$ edges of the tree are numbered from $$$1$$$ to $$$n-1$$$. You can ask the following queries of two types: Give the grader an array $$$a$$$ with $$$n - 1$$$ positive integers. For each edge from $$$1$$$ to $$$n - 1$$$, the weight of edge $$$i$$$ is set to $$$a_i$$$. Then, the grader will return the length of the diameter$$$^\\dagger$$$. Give the grader two indices $$$1 \\le a, b \\le n - 1$$$. The grader will return the number of edges between edges $$$a$$$ and $$$b$$$. In other words, if edge $$$a$$$ connects $$$u_a$$$ and $$$v_a$$$ while edge $$$b$$$ connects $$$u_b$$$ and $$$v_b$$$, the grader will return $$$\\min(\\text{dist}(u_a, u_b), \\text{dist}(v_a, u_b), \\text{dist}(u_a, v_b), \\text{dist}(v_a, v_b))$$$, where $$$\\text{dist}(u, v)$$$ represents the number of edges on the path between vertices $$$u$$$ and $$$v$$$. Find any tree isomorphic$$$^\\ddagger$$$ to the hidden tree after at most $$$n$$$ queries of type 1 and $$$n$$$ queries of type 2 in any order. $$$^\\dagger$$$ The distance between two vertices is the sum of the weights on the unique simple path that connects them. The diameter is the largest of all those distances. $$$^\\ddagger$$$ Two trees, consisting of $$$n$$$ vertices each, are called isomorphic if there exists a permutation $$$p$$$ containing integers from $$$1$$$ to $$$n$$$ such that edge ($$$u$$$, $$$v$$$) is present in the first tree if and only if the edge ($$$p_u$$$, $$$p_v$$$) is present in the second tree.",
  "inputFormat": "The first and only line of input contains a single integer $$$n$$$ ($$$3 \\le n \\le 1000$$$) â€” the number of vertices in the tree.",
  "outputFormat": "Output specification not found",
  "sampleTests": [
    {
      "input": "5\n\n3\n\n1\n\n9\n\n0",
      "output": "? 1 1 1 1 1\n\n? 2 1 3\n\n? 1 4 3 2 1\n\n? 2 4 2\n\n!\n3 1\n4 2\n1 2\n2 5"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1919/H",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}