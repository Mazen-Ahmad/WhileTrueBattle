{
  "contestId": 1779,
  "index": "E",
  "name": "Anya's Simultaneous Exhibition",
  "rating": 2400,
  "tags": [
    "implementation"
  ],
  "statement": "This is an interactive problem . Anya has gathered $$$n$$$ chess experts numbered from $$$1$$$ to $$$n$$$ for which the following properties hold: For any pair of players one of the players wins every game against the other (and no draws ever occur); Transitivity does not necessarily hold â€” it might happen that $$$A$$$ always beats $$$B$$$, $$$B$$$ always beats $$$C$$$ and $$$C$$$ always beats $$$A$$$. Anya does not know, for each pair, who is the player who beats the other. To organize a tournament, Anya hosts $$$n-1$$$ games. In each game, she chooses two players. One of them wins and stays, while the other one is disqualified. After all the games are hosted only one player will remain. A player is said to be a candidate master if they can win a tournament (notice that the winner of a tournament may depend on the players selected by Anya in the $$$n-1$$$ games). Since Anya is a curious girl, she is interested in finding the candidate masters . Unfortunately, she does not have much time. To speed up the process, she will organize up to $$$2n$$$ simuls (short for \"simultaneous exhibition\", in which one player plays against many). In one simul, Anya chooses exactly one player who will play against some (at least one) of the other players. The chosen player wins all games they would win in a regular game, and the same holds for losses. After the simul finishes, Anya is only told the total number of games won by the chosen player (but not which ones). Nobody is disqualified during a simul. Can you help Anya host simuls and determine the candidate masters ? The winning players in each pair could be changed between the simuls, but only in a way that preserves the results of all previous simuls. These changes may depend on your queries.",
  "inputFormat": "Input specification not found",
  "outputFormat": "Output specification not found",
  "sampleTests": [
    {
      "input": "3\n\n1\n\n1\n\n1",
      "output": "? 1 010\n\n? 2 001\n\n? 3 100\n\n! 111"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1779/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}