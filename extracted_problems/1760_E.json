{
  "contestId": 1760,
  "index": "E",
  "name": "Binary Inversions",
  "rating": 1100,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a binary array$$$^{\\dagger}$$$ of length $$$n$$$. You are allowed to perform one operation on it at most once . In an operation, you can choose any element and flip it: turn a $$$0$$$ into a $$$1$$$ or vice-versa. What is the maximum number of inversions$$$^{\\ddagger}$$$ the array can have after performing at most one operation? $$$^\\dagger$$$ A binary array is an array that contains only zeroes and ones. $$$^\\ddagger$$$ The number of inversions in an array is the number of pairs of indices $$$i,j$$$ such that $$$i<j$$$ and $$$a_i > a_j$$$.",
  "inputFormat": "The input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains an integer $$$n$$$ ($$$1 \\leq n \\leq 2\\cdot10^5$$$) — the length of the array. The following line contains $$$n$$$ space-separated positive integers $$$a_1$$$, $$$a_2$$$,..., $$$a_n$$$ ($$$0 \\leq a_i \\leq 1$$$) — the elements of the array. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\cdot10^5$$$.",
  "outputFormat": "For each test case, output a single integer — the maximum number of inversions the array can have after performing at most one operation.",
  "sampleTests": [
    {
      "input": "5\n4\n1 0 1 0\n6\n0 1 0 0 1 0\n2\n0 0\n8\n1 0 1 1 0 0 0 1\n3\n1 1 1",
      "output": "3\n7\n1\n13\n2"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1760/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}