{
  "contestId": 1762,
  "index": "A",
  "name": "Divide and Conquer",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "An array $$$b$$$ is good if the sum of elements of $$$b$$$ is even. You are given an array $$$a$$$ consisting of $$$n$$$ positive integers. In one operation, you can select an index $$$i$$$ and change $$$a_i := \\lfloor \\frac{a_i}{2} \\rfloor$$$. $$$^\\dagger$$$ Find the minimum number of operations (possibly $$$0$$$) needed to make $$$a$$$ good. It can be proven that it is always possible to make $$$a$$$ good. $$$^\\dagger$$$ $$$\\lfloor x \\rfloor$$$ denotes the floor function — the largest integer less than or equal to $$$x$$$. For example, $$$\\lfloor 2.7 \\rfloor = 2$$$, $$$\\lfloor \\pi \\rfloor = 3$$$ and $$$\\lfloor 5 \\rfloor =5$$$.",
  "inputFormat": "Each test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 50$$$) — the length of the array $$$a$$$. The second line of each test case contains $$$n$$$ space-separated integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$1 \\leq a_i \\leq 10^6$$$) — representing the array $$$a$$$. Do note that the sum of $$$n$$$ over all test cases is not bounded.",
  "outputFormat": "For each test case, output the minimum number of operations needed to make $$$a$$$ good.",
  "sampleTests": [
    {
      "input": "4\n4\n1 1 1 1\n2\n7 4\n3\n1 2 4\n1\n15",
      "output": "0\n2\n1\n4"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1762/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}