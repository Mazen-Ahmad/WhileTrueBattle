{
  "contestId": 1621,
  "index": "C",
  "name": "Hidden Permutations",
  "rating": 1700,
  "tags": [
    "implementation"
  ],
  "statement": "This is an interactive problem. The jury has a permutation $$$p$$$ of length $$$n$$$ and wants you to guess it. For this, the jury created another permutation $$$q$$$ of length $$$n$$$. Initially, $$$q$$$ is an identity permutation ($$$q_i = i$$$ for all $$$i$$$). You can ask queries to get $$$q_i$$$ for any $$$i$$$ you want. After each query, the jury will change $$$q$$$ in the following way: At first, the jury will create a new permutation $$$q'$$$ of length $$$n$$$ such that $$$q'_i = q_{p_i}$$$ for all $$$i$$$. Then the jury will replace permutation $$$q$$$ with pemutation $$$q'$$$. You can make no more than $$$2n$$$ queries in order to quess $$$p$$$.",
  "inputFormat": "The first line of input contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) â€” the number of test cases.",
  "outputFormat": "Output specification not found",
  "sampleTests": [
    {
      "input": "2\n4\n\n3\n\n2\n\n1\n\n4\n\n2\n\n4\n\n4",
      "output": "? 3\n\n? 2\n\n? 4\n\n! 4 2 1 3\n\n? 2\n\n? 3\n\n? 2\n\n! 1 3 4 2"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1621/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}