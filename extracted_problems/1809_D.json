{
  "contestId": 1809,
  "index": "D",
  "name": "Binary String Sorting",
  "rating": 1800,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a binary string $$$s$$$ consisting of only characters 0 and/or 1 . You can perform several operations on this string (possibly zero). There are two types of operations: choose two consecutive elements and swap them. In order to perform this operation, you pay $$$10^{12}$$$ coins; choose any element from the string and remove it. In order to perform this operation, you pay $$$10^{12}+1$$$ coins. Your task is to calculate the minimum number of coins required to sort the string $$$s$$$ in non-decreasing order (i. e. transform $$$s$$$ so that $$$s_1 \\le s_2 \\le \\dots \\le s_m$$$, where $$$m$$$ is the length of the string after applying all operations). An empty string is also considered sorted in non-decreasing order.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The only line of each test case contains the string $$$s$$$ ($$$1 \\le |s| \\le 3 \\cdot 10^5$$$), consisting of only characters 0 and/or 1 . The sum of lengths of all given strings doesn't exceed $$$3 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print a single integer — the minimum number of coins required to sort the string $$$s$$$ in non-decreasing order.",
  "sampleTests": [
    {
      "input": "6\n100\n0\n0101\n00101101\n1001101\n11111",
      "output": "1000000000001\n0\n1000000000000\n2000000000001\n2000000000002\n0"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1809/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}