{
  "contestId": 1920,
  "index": "D",
  "name": "Array Repetition",
  "rating": 1900,
  "tags": [
    "implementation"
  ],
  "statement": "Jayden has an array $$$a$$$ which is initially empty. There are $$$n$$$ operations of two types he must perform in the given order. Jayden appends an integer $$$x$$$ ($$$1 \\leq x \\leq n$$$) to the end of array $$$a$$$. Jayden appends $$$x$$$ copies of array $$$a$$$ to the end of array $$$a$$$. In other words, array $$$a$$$ becomes $$$[a,\\underbrace{a,\\ldots,a}_{x}]$$$. It is guaranteed that he has done at least one operation of the first type before this. Jayden has $$$q$$$ queries. For each query, you must tell him the $$$k$$$-th element of array $$$a$$$. The elements of the array are numbered from $$$1$$$.",
  "inputFormat": "Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 5000$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$q$$$ ($$$1 \\leq n, q \\leq 10^5$$$) — the number of operations and the number of queries. The following $$$n$$$ lines describe the operations. Each line contains two integers $$$b$$$ and $$$x$$$ ($$$b \\in \\{1, 2\\}$$$), where $$$b$$$ denotes the type of operation. If $$$b=1$$$, then $$$x$$$ ($$$1 \\leq x \\leq n$$$) is the integer Jayden appends to the end of the array. If $$$b=2$$$, then $$$x$$$ ($$$1 \\leq x \\leq 10^9$$$) is the number of copies Jayden appends to the end of the array. The next line of each test case contains $$$q$$$ integers $$$k_1, k_2, \\ldots, k_q$$$ ($$$1 \\leq k_i \\leq \\min(10^{18}, c)$$$), which denote the queries, where $$$c$$$ is the size of the array after finishing all $$$n$$$ operations. It is guaranteed that the sum of $$$n$$$ and the sum of $$$q$$$ over all test cases does not exceed $$$10^5$$$.",
  "outputFormat": "For each test case, output $$$q$$$ integers — answers to Jayden's queries.",
  "sampleTests": [
    {
      "input": "4\n5 10\n1 1\n1 2\n2 1\n1 3\n2 3\n1 2 3 4 5 6 14 15 16 20\n10 10\n1 3\n1 8\n2 15\n1 6\n1 9\n1 1\n2 6\n1 1\n2 12\n2 10\n32752 25178 3198 3199 2460 2461 31450 33260 9016 4996\n12 5\n1 6\n1 11\n2 392130334\n1 4\n2 744811750\n1 10\n1 5\n2 209373780\n2 178928984\n1 3\n2 658326464\n2 1000000000\n914576963034536490 640707385283752918 636773368365261971 584126563607944922 1000000000000000000\n2 2\n1 1\n1 2\n1 2",
      "output": "1 2 1 2 3 1 2 3 1 3\n9 8 1 3 1 3 6 3 8 8\n11 11 11 10 11\n1 2"
    }
  ],
  "timeLimit": 4000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1920/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}