{
  "contestId": 1883,
  "index": "E",
  "name": "Look Back",
  "rating": 1700,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an array of integers $$$a_1, a_2, \\ldots, a_n$$$. You need to make it non-decreasing with the minimum number of operations. In one operation, you do the following: Choose an index $$$1 \\leq i \\leq n$$$, Set $$$a_i = a_i \\cdot 2$$$. An array $$$b_1, b_2, \\ldots, b_n$$$ is non-decreasing if $$$b_i \\leq b_{i+1}$$$ for all $$$1 \\leq i < n$$$.",
  "inputFormat": "Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$) — the number of test cases. This is followed by their description. The first line of each test case contains an integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$) — the size of the array $$$a$$$. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output the minimum number of operations needed to make the array non-decreasing.",
  "sampleTests": [
    {
      "input": "9\n1\n1\n2\n2 1\n3\n3 2 1\n4\n7 1 5 3\n5\n11 2 15 7 10\n6\n1 8 2 16 8 16\n2\n624323799 708290323\n12\n2 1 1 3 3 11 12 22 45 777 777 1500\n12\n12 11 10 9 8 7 6 5 4 3 2 1",
      "output": "0\n1\n3\n6\n10\n3\n0\n2\n66"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1883/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}