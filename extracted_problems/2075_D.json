{
  "contestId": 2075,
  "index": "D",
  "name": "Equalization",
  "rating": 2000,
  "tags": [
    "implementation"
  ],
  "statement": "You are given two non-negative integers $$$x$$$ and $$$y$$$. You can perform the following operation any number of times (possibly zero): choose a positive integer $$$k$$$ and divide either $$$x$$$ or $$$y$$$ by $$$2^k$$$ rounding down. The cost of this operation is $$$2^k$$$. However, there is an additional constraint: you cannot select the same value of $$$k$$$ more than once. Your task is to calculate the minimum possible cost in order to make $$$x$$$ equal to $$$y$$$.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^5$$$) — the number of test cases. The only line of each test case contains two integers $$$x$$$ and $$$y$$$ ($$$0 \\le x, y \\le 10^{17}$$$).",
  "outputFormat": "For each test case, print a single integer — the minimum possible cost in order to make $$$x$$$ equal to $$$y$$$.",
  "sampleTests": [
    {
      "input": "5\n0 1\n6 2\n3 3\n13 37\n4238659325782394 12983091057341925",
      "output": "2\n6\n0\n26\n32764"
    }
  ],
  "timeLimit": 3500,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2075/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}