{
  "contestId": 1637,
  "index": "H",
  "name": "Minimize Inversions Number",
  "rating": 3500,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a permutation $$$p$$$ of length $$$n$$$. You can choose any subsequence, remove it from the permutation, and insert it at the beginning of the permutation keeping the same order. For every $$$k$$$ from $$$0$$$ to $$$n$$$, find the minimal possible number of inversions in the permutation after you choose a subsequence of length exactly $$$k$$$.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 50\\,000$$$) — the number of test cases. The first line of each test case contains one integer $$$n$$$ ($$$1 \\le n \\le 5 \\cdot 10^5$$$) — the length of the permutation. The second line of each test case contains the permutation $$$p_1, p_2, \\ldots, p_n$$$ ($$$1 \\le p_i \\le n$$$). It is guaranteed that the total sum of $$$n$$$ doesn't exceed $$$5 \\cdot 10^5$$$.",
  "outputFormat": "For each test case output $$$n + 1$$$ integers. The $$$i$$$-th of them must be the answer for the subsequence length of $$$i - 1$$$.",
  "sampleTests": [
    {
      "input": "3\n1\n1\n4\n4 2 1 3\n5\n5 1 3 2 4",
      "output": "0 0\n4 2 2 1 4\n5 4 2 2 1 5"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1637/H",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}