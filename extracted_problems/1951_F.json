{
  "contestId": 1951,
  "index": "F",
  "name": "Inversion Composition",
  "rating": 2500,
  "tags": [
    "implementation"
  ],
  "statement": "My Chemical Romance - Disenchanted ඞ You are given a permutation $$$p$$$ of size $$$n$$$, as well as a non-negative integer $$$k$$$. You need to construct a permutation $$$q$$$ of size $$$n$$$ such that $$$\\operatorname{inv}(q) + \\operatorname{inv}(q \\cdot p) = k {}^\\dagger {}^\\ddagger$$$, or determine if it is impossible to do so. $$${}^\\dagger$$$ For two permutations $$$p$$$ and $$$q$$$ of the same size $$$n$$$, the permutation $$$w = q \\cdot p$$$ is such that $$$w_i = q_{p_i}$$$ for all $$$1 \\le i \\le n$$$. $$${}^\\ddagger$$$ For a permutation $$$p$$$ of size $$$n$$$, the function $$$\\operatorname{inv}(p)$$$ returns the number of inversions of $$$p$$$, i.e. the number of pairs of indices $$$1 \\le i < j \\le n$$$ such that $$$p_i > p_j$$$.",
  "inputFormat": "Each test contains multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 3 \\cdot 10^5, 0 \\le k \\le n(n - 1)$$$) — the size of $$$p$$$ and the target number of inversions. The second line of each test case contains $$$n$$$ integers $$$p_1, p_2, \\ldots, p_n$$$ ($$$1 \\le p_i \\le n$$$, $$$p_i$$$'s are pairwise distinct) — the given permutation $$$p$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$3 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print on one line \"YES\" if there exists a permutation $$$q$$$ that satisfies the given condition, or \"NO\" if there is no such permutation. If the answer is \"YES\" , on the second line, print $$$n$$$ integers $$$q_1, q_2, \\ldots, q_n$$$ that represent such a satisfactory permutation $$$q$$$. If there are multiple such $$$q$$$'s, print any of them.",
  "sampleTests": [
    {
      "input": "5\n3 4\n2 3 1\n5 5\n2 3 5 1 4\n6 11\n5 1 2 3 4 6\n9 51\n3 1 4 2 5 6 7 8 9\n1 0\n1",
      "output": "YES\n3 2 1\nNO\nNO\nYES\n1 5 9 8 7 6 4 3 2\nYES\n1"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1951/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}