{
  "contestId": 1796,
  "index": "B",
  "name": "Asterisk-Minor Template",
  "rating": 1000,
  "tags": [
    "implementation"
  ],
  "statement": "You are given two strings $$$a$$$ and $$$b$$$, consisting of lowercase Latin letters. A template $$$t$$$ is string, consisting of lowercase Latin letters and asterisks (character '*'). A template is called asterisk-minor if the number of asterisks in it is less than or equal to the number of letters in it. A string $$$s$$$ is said to be matching a template $$$t$$$ if you can replace each asterisk in $$$t$$$ with a string of lowercase Latin letters (possibly, an empty string) so that it becomes equal to $$$s$$$. Find an asterisk-minor template such that both $$$a$$$ and $$$b$$$ match it, or report that such a template doesn't exist. If there are multiple answers, print any of them.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) â€” the number of testcases. The first line of each testcase contains a string $$$a$$$ ($$$1 \\le |a| \\le 50$$$, where $$$|a|$$$ is the length of $$$a$$$), consisting of lowercase Latin letters. The second line contains a string $$$b$$$ ($$$1 \\le |b| \\le 50$$$), consisting of lowercase Latin letters.",
  "outputFormat": "For each testcase, output \" NO \", if there doesn't exist an asterisk-minor template that both $$$a$$$ and $$$b$$$ match. Otherwise, print \" YES \" in the first line and the template in the second line. If there are multiple answers, print any of them. A template should consist only of lowercase Latin letters and asterisks (character '*'). The number of asterisks should be less than or equal to the number of letters.",
  "sampleTests": [
    {
      "input": "6\naaab\nzzzb\ncodeforces\natcoder\ncodeforces\ntokitlx\naaaa\naaaaaa\nabcd\nabcd\nc\nf",
      "output": "YES\n*b\nYES\n*co*\nNO\nYES\na*a*a*a\nYES\nabcd\nNO"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1796/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}