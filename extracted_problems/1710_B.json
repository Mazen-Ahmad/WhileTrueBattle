{
  "contestId": 1710,
  "index": "B",
  "name": "Rain",
  "rating": 2100,
  "tags": [
    "implementation"
  ],
  "statement": "You are the owner of a harvesting field which can be modeled as an infinite line, whose positions are identified by integers. It will rain for the next $$$n$$$ days. On the $$$i$$$-th day, the rain will be centered at position $$$x_i$$$ and it will have intensity $$$p_i$$$. Due to these rains, some rainfall will accumulate; let $$$a_j$$$ be the amount of rainfall accumulated at integer position $$$j$$$. Initially $$$a_j$$$ is $$$0$$$, and it will increase by $$$\\max(0,p_i-|x_i-j|)$$$ after the $$$i$$$-th day's rain. A flood will hit your field if, at any moment, there is a position $$$j$$$ with accumulated rainfall $$$a_j>m$$$. You can use a magical spell to erase exactly one day's rain, i.e., setting $$$p_i=0$$$. For each $$$i$$$ from $$$1$$$ to $$$n$$$, check whether in case of erasing the $$$i$$$-th day's rain there is no flood.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$). The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$, $$$1 \\leq m \\leq 10^9$$$) — the number of rainy days and the maximal accumulated rainfall with no flood occurring. Then $$$n$$$ lines follow. The $$$i$$$-th of these lines contains two integers $$$x_i$$$ and $$$p_i$$$ ($$$1 \\leq x_i,p_i \\leq 10^9$$$) — the position and intensity of the $$$i$$$-th day's rain. The sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output a binary string $$$s$$$ length of $$$n$$$. The $$$i$$$-th character of $$$s$$$ is 1 if after erasing the $$$i$$$-th day's rain there is no flood, while it is 0 , if after erasing the $$$i$$$-th day's rain the flood still happens.",
  "sampleTests": [
    {
      "input": "4\n3 6\n1 5\n5 5\n3 4\n2 3\n1 3\n5 2\n2 5\n1 6\n10 6\n6 12\n4 5\n1 6\n12 5\n5 5\n9 7\n8 3",
      "output": "001\n11\n00\n100110"
    }
  ],
  "timeLimit": 4000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1710/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}