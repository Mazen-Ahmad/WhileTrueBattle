{
  "contestId": 1632,
  "index": "E2",
  "name": "Distance Tree (hard version)",
  "rating": 2700,
  "tags": [
    "implementation"
  ],
  "statement": "This version of the problem differs from the previous one only in the constraint on $$$n$$$ . A tree is a connected undirected graph without cycles. A weighted tree has a weight assigned to each edge. The distance between two vertices is the minimum sum of weights on the path connecting them. You are given a weighted tree with $$$n$$$ vertices, each edge has a weight of $$$1$$$. Denote $$$d(v)$$$ as the distance between vertex $$$1$$$ and vertex $$$v$$$. Let $$$f(x)$$$ be the minimum possible value of $$$\\max\\limits_{1 \\leq v \\leq n} \\ {d(v)}$$$ if you can temporarily add an edge with weight $$$x$$$ between any two vertices $$$a$$$ and $$$b$$$ $$$(1 \\le a, b \\le n)$$$. Note that after this operation, the graph is no longer a tree. For each integer $$$x$$$ from $$$1$$$ to $$$n$$$, find $$$f(x)$$$.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 3 \\cdot 10^5$$$). Each of the next $$$n−1$$$ lines contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\le u,v \\le n$$$) indicating that there is an edge between vertices $$$u$$$ and $$$v$$$. It is guaranteed that the given edges form a tree. It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$3 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print $$$n$$$ integers in a single line, $$$x$$$-th of which is equal to $$$f(x)$$$ for all $$$x$$$ from $$$1$$$ to $$$n$$$.",
  "sampleTests": [
    {
      "input": "3\n4\n1 2\n2 3\n1 4\n2\n1 2\n7\n1 2\n1 3\n3 4\n3 5\n3 6\n5 7",
      "output": "1 2 2 2 \n1 1 \n2 2 3 3 3 3 3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1632/E2",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}