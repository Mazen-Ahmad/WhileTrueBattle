{
  "contestId": 1830,
  "index": "D",
  "name": "Mex Tree",
  "rating": 2800,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a tree with $$$n$$$ nodes. For each node, you either color it in $$$0$$$ or $$$1$$$. The value of a path $$$(u,v)$$$ is equal to the MEX$$$^\\dagger$$$ of the colors of the nodes from the shortest path between $$$u$$$ and $$$v$$$. The value of a coloring is equal to the sum of values of all paths $$$(u,v)$$$ such that $$$1 \\leq u \\leq v \\leq n$$$. What is the maximum possible value of any coloring of the tree? $$$^{\\dagger}$$$ The MEX (minimum excluded) of an array is the smallest non-negative integer that does not belong to the array. For instance: The MEX of $$$[2,2,1]$$$ is $$$0$$$, because $$$0$$$ does not belong to the array. The MEX of $$$[3,1,0,1]$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ belong to the array, but $$$2$$$ does not. The MEX of $$$[0,3,1,2]$$$ is $$$4$$$ because $$$0$$$, $$$1$$$, $$$2$$$, and $$$3$$$ belong to the array, but $$$4$$$ does not.",
  "inputFormat": "Each test contains multiple test cases. The first line of input contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The description of test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) — the number of nodes in the tree. The following $$$n-1$$$ lines of each test case contains $$$2$$$ integers $$$a_i$$$ and $$$b_i$$$ ($$$1 \\leq a_i, b_i \\leq n, a_i \\neq b_i$$$) — indicating an edge between vertices $$$a_i$$$ and $$$b_i$$$. It is guaranteed that the given edges form a tree. It is guaranteed that the sum of $$$n$$$ across all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print the maximum possible value of any coloring of the tree.",
  "sampleTests": [
    {
      "input": "4\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n10\n1 2\n1 3\n3 4\n3 5\n1 6\n5 7\n2 8\n6 9\n6 10\n1",
      "output": "8\n15\n96\n1"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1830/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}