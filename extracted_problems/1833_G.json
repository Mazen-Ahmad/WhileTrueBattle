{
  "contestId": 1833,
  "index": "G",
  "name": "Ksyusha and Chinchilla",
  "rating": 1800,
  "tags": [
    "implementation"
  ],
  "statement": "Ksyusha has a pet chinchilla, a tree on $$$n$$$ vertices and huge scissors. A tree is a connected graph without cycles. During a boring physics lesson Ksyusha thought about how to entertain her pet. Chinchillas like to play with branches . A branch is a tree of $$$3$$$ vertices. The branch looks like this. A cut is the removal of some (not yet cut ) edge in the tree. Ksyusha has plenty of free time, so she can afford to make enough cuts so that the tree splits into branches . In other words, after several (possibly zero) cuts , each vertex must belong to exactly one branch . Help Ksyusha choose the edges to be cut or tell that it is impossible.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — number of testcases. The first line of each testcase contains a single integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$) — the number of vertices in the tree. The next $$$n - 1$$$ rows of each testcase contain integers $$$v_i$$$ and $$$u_i$$$ ($$$1 \\le v_i, u_i \\le n$$$) — the numbers of vertices that the $$$i$$$-th edge connects. It is guaranteed that this set of edges forms a tree. It is also guaranteed that the sum of $$$n$$$ over all testcases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "Print the answer for each testcase. If the desired way to cut the tree does not exist, print $$$-1$$$. Otherwise, print an integer $$$k$$$ — the number of edges to be cut . In the next line, print $$$k$$$ different integers $$$e_i$$$ ($$$1 \\le e_i < n$$$) — numbers of the edges to be cut . If $$$k = 0$$$, print an empty string instead. If there are several solutions, you can print any.",
  "sampleTests": [
    {
      "input": "4\n9\n1 2\n4 3\n7 9\n5 4\n4 6\n3 2\n8 7\n1 7\n6\n1 2\n1 3\n4 3\n1 5\n6 1\n6\n1 2\n3 2\n3 4\n4 5\n6 5\n5\n1 3\n5 3\n5 2\n3 4",
      "output": "2\n2 8 \n-1\n1\n3 \n-1"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1833/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}