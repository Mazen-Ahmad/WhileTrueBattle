{
  "contestId": 1854,
  "index": "A1",
  "name": "Dual (Easy Version)",
  "rating": 1400,
  "tags": [
    "implementation"
  ],
  "statement": "Popskyy & tiasu - Dual ⠀ The only difference between the two versions of this problem is the constraint on the maximum number of operations. You can make hacks only if all versions of the problem are solved. You are given an array $$$a_1, a_2,\\dots, a_n$$$ of integers (positive, negative or $$$0$$$). You can perform multiple operations on the array (possibly $$$0$$$ operations). In one operation, you choose $$$i, j$$$ ($$$1 \\leq i, j \\leq n$$$, they can be equal) and set $$$a_i := a_i + a_j$$$ (i.e., add $$$a_j$$$ to $$$a_i$$$). Make the array non-decreasing (i.e., $$$a_i \\leq a_{i+1}$$$ for $$$1 \\leq i \\leq n-1$$$) in at most $$$50$$$ operations. You do not need to minimize the number of operations.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 500$$$). The description of the test cases follows. The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 20$$$) — the length of the array. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$-20 \\le a_i \\le 20$$$) — the array before performing the operations.",
  "outputFormat": "For each test case, output your operations in the following format. The first line should contain an integer $$$k$$$ ($$$0 \\le k \\le 50$$$) — the number of operations. The next $$$k$$$ lines represent the $$$k$$$ operations in order. Each of these $$$k$$$ lines should contain two integers $$$i$$$ and $$$j$$$ ($$$1 \\leq i, j \\leq n$$$) — the corresponding operation consists in adding $$$a_j$$$ to $$$a_i$$$. After all the operations, the array $$$a_1, a_2,\\dots, a_n$$$ must be non-decreasing.",
  "sampleTests": [
    {
      "input": "10\n2\n2 1\n4\n1 2 -10 3\n5\n2 1 1 1 1\n8\n0 0 0 0 0 0 0 0\n5\n1 2 -4 3 -10\n10\n11 12 13 14 15 -15 -16 -17 -18 -19\n7\n1 9 3 -4 -3 -2 -1\n3\n10 9 8\n20\n1 -14 2 -10 6 -5 10 -13 10 7 -14 19 -5 19 1 18 -16 -7 12 8\n20\n-15 -17 -13 8 14 -13 10 -4 11 -4 -16 -6 15 -4 -2 7 -9 5 -5 17",
      "output": "1\n2 1\n3\n4 4\n4 4\n3 4\n4\n2 1\n3 1\n4 1\n5 1\n0\n7\n3 4\n3 4\n5 4\n5 4\n5 4\n5 4\n5 4\n15\n6 1\n6 1\n6 1\n7 2\n7 2\n7 2\n8 3\n8 3\n8 3\n9 4\n9 4\n9 4\n10 5\n10 5\n10 5\n8\n3 4\n3 4\n2 4\n2 4\n2 4\n2 4\n1 4\n1 4\n3\n2 1\n3 1\n3 1\n31\n14 1\n18 7\n13 11\n15 11\n6 4\n5 17\n19 6\n19 12\n10 5\n11 12\n1 17\n15 19\n16 10\n14 2\n16 11\n20 7\n7 6\n9 5\n3 6\n6 14\n17 18\n18 14\n12 3\n17 16\n8 18\n13 16\n9 8\n14 8\n16 2\n11 8\n12 7\n31\n5 12\n19 13\n9 1\n5 17\n18 19\n6 16\n15 8\n6 9\n15 14\n7 10\n19 7\n17 20\n14 4\n15 20\n4 3\n1 8\n16 12\n16 15\n5 6\n12 10\n11 15\n20 3\n20 19\n13 14\n11 14\n18 10\n7 3\n12 17\n4 7\n13 2\n11 13"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1854/A1",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}