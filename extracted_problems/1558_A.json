{
  "contestId": 1558,
  "index": "A",
  "name": "Charmed by the Game",
  "rating": 1300,
  "tags": [
    "implementation"
  ],
  "statement": "Alice and Borys are playing tennis. A tennis match consists of games . In each game, one of the players is serving and the other one is receiving . Players serve in turns: after a game where Alice is serving follows a game where Borys is serving, and vice versa. Each game ends with a victory of one of the players. If a game is won by the serving player, it's said that this player holds serve . If a game is won by the receiving player, it's said that this player breaks serve . It is known that Alice won $$$a$$$ games and Borys won $$$b$$$ games during the match. It is unknown who served first and who won which games. Find all values of $$$k$$$ such that exactly $$$k$$$ breaks could happen during the match between Alice and Borys in total.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^3$$$). Description of the test cases follows. Each of the next $$$t$$$ lines describes one test case and contains two integers $$$a$$$ and $$$b$$$ ($$$0 \\le a, b \\le 10^5$$$; $$$a + b > 0$$$) — the number of games won by Alice and Borys, respectively. It is guaranteed that the sum of $$$a + b$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case print two lines. In the first line, print a single integer $$$m$$$ ($$$1 \\le m \\le a + b + 1$$$) — the number of values of $$$k$$$ such that exactly $$$k$$$ breaks could happen during the match. In the second line, print $$$m$$$ distinct integers $$$k_1, k_2, \\ldots, k_m$$$ ($$$0 \\le k_1 < k_2 < \\ldots < k_m \\le a + b$$$) — the sought values of $$$k$$$ in increasing order .",
  "sampleTests": [
    {
      "input": "3\n2 1\n1 1\n0 5",
      "output": "4\n0 1 2 3\n2\n0 2\n2\n2 3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1558/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}