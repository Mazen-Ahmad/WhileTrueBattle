{
  "contestId": 1902,
  "index": "A",
  "name": "Binary Imbalance",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a string $$$s$$$, consisting only of characters ' 0 ' and/or ' 1 '. In one operation, you choose a position $$$i$$$ from $$$1$$$ to $$$|s| - 1$$$, where $$$|s|$$$ is the current length of string $$$s$$$. Then you insert a character between the $$$i$$$-th and the $$$(i+1)$$$-st characters of $$$s$$$. If $$$s_i = s_{i+1}$$$, you insert ' 1 '. If $$$s_i \\neq s_{i+1}$$$, you insert ' 0 '. Is it possible to make the number of zeroes in the string strictly greater than the number of ones, using any number of operations (possibly, none)?",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 100$$$) â€” the number of testcases. The first line of each testcase contains an integer $$$n$$$ ($$$1 \\le n \\le 100$$$). The second line contains a string $$$s$$$ of length exactly $$$n$$$, consisting only of characters ' 0 ' and/or ' 1 '.",
  "outputFormat": "For each testcase, print \" YES \" if it's possible to make the number of zeroes in $$$s$$$ strictly greater than the number of ones, using any number of operations (possibly, none). Otherwise, print \" NO \".",
  "sampleTests": [
    {
      "input": "3\n2\n00\n2\n11\n2\n10",
      "output": "YES\nNO\nYES"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1902/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}