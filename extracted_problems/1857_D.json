{
  "contestId": 1857,
  "index": "D",
  "name": "Strong Vertices",
  "rating": 1300,
  "tags": [
    "implementation"
  ],
  "statement": "Given two arrays $$$a$$$ and $$$b$$$, both of length $$$n$$$. Elements of both arrays indexed from $$$1$$$ to $$$n$$$. You are constructing a directed graph, where edge from $$$u$$$ to $$$v$$$ ($$$u\\neq v$$$) exists if $$$a_u-a_v \\ge b_u-b_v$$$. A vertex $$$V$$$ is called strong if there exists a path from $$$V$$$ to all other vertices. A path in a directed graph is a chain of several vertices, connected by edges, such that moving from the vertex $$$u$$$, along the directions of the edges, the vertex $$$v$$$ can be reached. Your task is to find all strong vertices. For example, if $$$a=[3,1,2,4]$$$ and $$$b=[4,3,2,1]$$$, the graph will look like this: The graph has only one strong vertex with number $$$4$$$",
  "inputFormat": "The first line contains an integer $$$t$$$ ($$$1\\le t\\le 10^4$$$) — the number of test cases. The first line of each test case contains an integer $$$n$$$ ($$$2 \\le n \\le 2\\cdot 10^5$$$) — the length of $$$a$$$ and $$$b$$$. The second line of each test case contains $$$n$$$ integers $$$a_1,a_2 \\dots a_n$$$ ($$$-10^9 \\le a_i \\le 10^9$$$) — the array $$$a$$$. The third line of each test case contains $$$n$$$ integers $$$b_1,b_2 \\dots b_n$$$ ($$$-10^9 \\le b_i \\le 10^9$$$) — the array $$$b$$$. It is guaranteed that the sum of $$$n$$$ for all test cases does not exceed $$$2\\cdot 10^5$$$.",
  "outputFormat": "For each test case, output two lines: in the first line, output the number of strong vertices, and in the second line, output all strong vertices in ascending order .",
  "sampleTests": [
    {
      "input": "5\n4\n3 1 2 4\n4 3 2 1\n5\n1 2 4 1 2\n5 2 3 3 1\n2\n1 2\n2 1\n3\n0 2 1\n1 3 2\n3\n5 7 4\n-2 -3 -6",
      "output": "1\n4 \n2\n3 5 \n1\n2 \n3\n1 2 3 \n2\n2 3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1857/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}