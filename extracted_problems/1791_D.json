{
  "contestId": 1791,
  "index": "D",
  "name": "Distinct Split",
  "rating": 1000,
  "tags": [
    "implementation"
  ],
  "statement": "Let's denote the $$$f(x)$$$ function for a string $$$x$$$ as the number of distinct characters that the string contains. For example $$$f(\\texttt{abc}) = 3$$$, $$$f(\\texttt{bbbbb}) = 1$$$, and $$$f(\\texttt{babacaba}) = 3$$$. Given a string $$$s$$$, split it into two non-empty strings $$$a$$$ and $$$b$$$ such that $$$f(a) + f(b)$$$ is the maximum possible. In other words, find the maximum possible value of $$$f(a) + f(b)$$$ such that $$$a + b = s$$$ (the concatenation of string $$$a$$$ and string $$$b$$$ is equal to string $$$s$$$).",
  "inputFormat": "The input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains an integer $$$n$$$ ($$$2 \\leq n \\leq 2\\cdot10^5$$$) — the length of the string $$$s$$$. The second line contains the string $$$s$$$, consisting of lowercase English letters. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\cdot10^5$$$.",
  "outputFormat": "For each test case, output a single integer — the maximum possible value of $$$f(a) + f(b)$$$ such that $$$a + b = s$$$.",
  "sampleTests": [
    {
      "input": "5\n2\naa\n7\nabcabcd\n5\naaaaa\n10\npaiumoment\n4\naazz",
      "output": "2\n7\n2\n10\n3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1791/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}