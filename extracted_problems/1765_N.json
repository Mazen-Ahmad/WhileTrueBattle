{
  "contestId": 1765,
  "index": "N",
  "name": "Number Reduction",
  "rating": 1500,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a positive integer $$$x$$$. You can apply the following operation to the number: remove one occurrence of any digit in such a way that the resulting number does not contain any leading zeroes and is still a positive integer . For example, $$$10142$$$ can be converted to $$$1142$$$, $$$1042$$$, $$$1012$$$ or $$$1014$$$ (note that $$$0142$$$ is not a valid outcome); $$$10$$$ can be converted to $$$1$$$ (but not to $$$0$$$ since it is not positive). Your task is to find the minimum positive integer that you can obtain from $$$x$$$ if you can apply the aforementioned operation exactly $$$k$$$ times.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^5$$$) — the number of test cases. The first line of each test case contains a single integer $$$x$$$ ($$$1 \\le x < 10^{500000}$$$). The second line contains a single integer $$$k$$$ ($$$0 \\le k < |x|$$$), where $$$|x|$$$ is the length of the number $$$x$$$. The sum of $$$|x|$$$ over all test cases does not exceed $$$5 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print one integer — the minimum positive number that you can obtain from $$$x$$$ if you can apply the operation exactly $$$k$$$ times.",
  "sampleTests": [
    {
      "input": "5\n10000\n4\n1337\n0\n987654321\n6\n66837494128\n5\n7808652\n3",
      "output": "1\n1337\n321\n344128\n7052"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1765/N",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}