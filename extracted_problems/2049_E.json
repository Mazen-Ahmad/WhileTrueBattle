{
  "contestId": 2049,
  "index": "E",
  "name": "Broken Queries",
  "rating": 2400,
  "tags": [
    "implementation"
  ],
  "statement": "You, a wizard whose creation was destroyed by a dragon, are determined to hunt it down with a magical AOE tracker. But it seems to be toyed with... This is an interactive problem. There is a hidden binary array $$$a$$$ of length $$$n$$$ ($$$\\mathbf{n}$$$ is a power of 2 ) and a hidden integer $$$k\\ (2 \\le k \\le n - 1)$$$. The array $$$a$$$ contains exactly one 1 (and all other elements are 0). For two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$), define the range sum $$$s(l, r) = a_l + a_{l+1} + \\cdots + a_r$$$. You have a magical device that takes ranges and returns range sums, but it returns the opposite result when the range has length at least $$$k$$$. Formally, in one query, you can give it a pair of integers $$$[l, r]$$$ where $$$1 \\le l \\le r \\le n$$$, and it will return either $$$0$$$ or $$$1$$$ according to the following rules: If $$$r - l + 1 < k$$$, it will return $$$s(l, r)$$$. If $$$r - l + 1 \\ge k$$$, it will return $$$1 - s(l, r)$$$. Find $$$k$$$ using at most $$$33$$$ queries. The device is not adaptive. It means that the hidden $$$a$$$ and $$$k$$$ are fixed before the interaction and will not change during the interaction.",
  "inputFormat": "Input specification not found",
  "outputFormat": "Output specification not found",
  "sampleTests": [
    {
      "input": "2\n8\n\n0\n\n0\n\n1\n\n0\n\n4\n\n1\n\n0",
      "output": "? 3 5\n\n? 1 8\n\n? 4 8\n\n? 3 8\n\n! 6\n\n? 3 3\n\n? 3 4\n\n! 2"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2049/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}