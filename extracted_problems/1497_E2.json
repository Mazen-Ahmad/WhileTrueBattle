{
  "contestId": 1497,
  "index": "E2",
  "name": "Square-Free Division (hard version)",
  "rating": 2500,
  "tags": [
    "implementation"
  ],
  "statement": "This is the hard version of the problem. The only difference is that in this version $$$0 \\leq k \\leq 20$$$. There is an array $$$a_1, a_2, \\ldots, a_n$$$ of $$$n$$$ positive integers. You should divide it into a minimal number of continuous segments, such that in each segment there are no two numbers (on different positions), whose product is a perfect square. Moreover, it is allowed to do at most $$$k$$$ such operations before the division: choose a number in the array and change its value to any positive integer. What is the minimum number of continuous segments you should use if you will make changes optimally?",
  "inputFormat": "The first line contains a single integer $$$t$$$ $$$(1 \\le t \\le 1000)$$$ — the number of test cases. The first line of each test case contains two integers $$$n$$$, $$$k$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$, $$$0 \\leq k \\leq 20$$$). The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^7$$$). It's guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case print a single integer — the answer to the problem.",
  "sampleTests": [
    {
      "input": "3\n5 2\n18 6 2 4 1\n11 4\n6 2 2 8 9 1 3 6 3 9 7\n1 0\n1",
      "output": "1\n2\n1"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1497/E2",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}