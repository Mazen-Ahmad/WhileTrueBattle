{
  "contestId": 2071,
  "index": "F",
  "name": "Towering Arrays",
  "rating": 2700,
  "tags": [
    "implementation"
  ],
  "statement": "An array $$$b = [b_1, b_2, \\ldots, b_m]$$$ of length $$$m$$$ is called $$$p$$$- towering if there exists an index $$$i$$$ ($$$1\\le i\\le m$$$) such that for every index $$$j$$$ ($$$1 \\le j \\le m$$$), the following condition holds: $$$$$$b_j \\ge p - |i - j|.$$$$$$ Given an array $$$a = [a_1, a_2, \\ldots, a_n]$$$ of length $$$n$$$, you can remove at most $$$k$$$ elements from it. Determine the maximum value of $$$p$$$ for which the remaining array can be made $$$p$$$- towering .",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$0 \\le k < n \\le 2 \\cdot 10^5$$$). The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output a single integer â€” the maximum value of $$$p$$$ for which the remaining array can be made $$$p$$$- towering .",
  "sampleTests": [
    {
      "input": "6\n5 0\n2 1 4 5 2\n5 3\n2 1 4 5 2\n6 1\n1 2 3 4 5 1\n11 6\n6 3 8 5 8 3 2 1 2 7 1\n14 3\n3 2 3 5 5 2 6 7 4 8 10 1 8 9\n2 0\n1 1",
      "output": "3\n5\n5\n7\n9\n1"
    }
  ],
  "timeLimit": 6000,
  "memoryLimit": 1024,
  "sourceUrl": "https://codeforces.com/problemset/problem/2071/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}