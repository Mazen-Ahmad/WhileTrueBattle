{
  "contestId": 1575,
  "index": "L",
  "name": "Longest Array Deconstruction",
  "rating": 2100,
  "tags": [
    "implementation"
  ],
  "statement": "Mr. Chanek gives you a sequence $$$a$$$ indexed from $$$1$$$ to $$$n$$$. Define $$$f(a)$$$ as the number of indices where $$$a_i = i$$$. You can pick an element from the current sequence and remove it, then concatenate the remaining elements together. For example, if you remove the $$$3$$$-rd element from the sequence $$$[4, 2, 3, 1]$$$, the resulting sequence will be $$$[4, 2, 1]$$$. You want to remove some elements from $$$a$$$ in order to maximize $$$f(a)$$$, using zero or more operations. Find the largest possible $$$f(a)$$$.",
  "inputFormat": "The first line contains one integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$) — the initial length of the sequence. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 2 \\cdot 10^5$$$) — the initial sequence $$$a$$$.",
  "outputFormat": "Output an integer denoting the largest $$$f(a)$$$ that can be obtained by doing zero or more operations.",
  "sampleTests": [
    {
      "input": "7\n2 1 4 2 5 3 7",
      "output": "3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1575/L",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}