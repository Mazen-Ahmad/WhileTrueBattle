{
  "contestId": 1777,
  "index": "F",
  "name": "Comfortably Numb",
  "rating": 2400,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an array $$$a$$$ consisting of $$$n$$$ non-negative integers. The numbness of a subarray $$$a_l, a_{l+1}, \\ldots, a_r$$$ (for arbitrary $$$l \\leq r$$$) is defined as $$$$$$\\max(a_l, a_{l+1}, \\ldots, a_r) \\oplus (a_l \\oplus a_{l+1} \\oplus \\ldots \\oplus a_r),$$$$$$ where $$$\\oplus$$$ denotes the bitwise XOR operation . Find the maximum numbness over all subarrays.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 1000$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$). The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\leq a_i \\leq 10^9$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print one integer â€” the maximum numbness over all subarrays of the given array.",
  "sampleTests": [
    {
      "input": "2\n5\n1 2 3 4 5\n3\n10 47 52",
      "output": "7\n47"
    }
  ],
  "timeLimit": 8000,
  "memoryLimit": 1024,
  "sourceUrl": "https://codeforces.com/problemset/problem/1777/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}