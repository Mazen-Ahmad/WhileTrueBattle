{
  "contestId": 1791,
  "index": "E",
  "name": "Negatives and Positives",
  "rating": 1100,
  "tags": [
    "implementation"
  ],
  "statement": "Given an array $$$a$$$ consisting of $$$n$$$ elements, find the maximum possible sum the array can have after performing the following operation any number of times : Choose $$$2$$$ adjacent elements and flip both of their signs. In other words choose an index $$$i$$$ such that $$$1 \\leq i \\leq n - 1$$$ and assign $$$a_i = -a_i$$$ and $$$a_{i+1} = -a_{i+1}$$$.",
  "inputFormat": "The input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. The descriptions of the test cases follow. The first line of each test case contains an integer $$$n$$$ ($$$2 \\leq n \\leq 2\\cdot10^5$$$) — the length of the array. The following line contains $$$n$$$ space-separated integers $$$a_1,a_2,\\dots,a_n$$$ ($$$-10^9 \\leq a_i \\leq 10^9$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\cdot10^5$$$.",
  "outputFormat": "For each test case, output the maximum possible sum the array can have after performing the described operation any number of times.",
  "sampleTests": [
    {
      "input": "5\n3\n-1 -1 -1\n5\n1 5 -5 0 2\n3\n1 2 3\n6\n-1 10 9 8 7 6\n2\n-1 -1",
      "output": "1\n13\n6\n39\n2"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1791/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}