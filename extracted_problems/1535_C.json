{
  "contestId": 1535,
  "index": "C",
  "name": "Unstable String",
  "rating": 1400,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a string $$$s$$$ consisting of the characters 0 , 1 , and ? . Let's call a string unstable if it consists of the characters 0 and 1 and any two adjacent characters are different (i. e. it has the form 010101... or 101010... ). Let's call a string beautiful if it consists of the characters 0 , 1 , and ? , and you can replace the characters ? to 0 or 1 (for each character, the choice is independent), so that the string becomes unstable . For example, the strings 0??10 , 0 , and ??? are beautiful, and the strings 00 and ?1??1 are not. Calculate the number of beautiful contiguous substrings of the string $$$s$$$.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — number of test cases. The first and only line of each test case contains the string $$$s$$$ ($$$1 \\le |s| \\le 2 \\cdot 10^5$$$) consisting of characters 0 , 1 , and ? . It is guaranteed that the sum of the string lengths over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output a single integer — the number of beautiful substrings of the string $$$s$$$.",
  "sampleTests": [
    {
      "input": "3\n0?10\n???\n?10??1100",
      "output": "8\n6\n25"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1535/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}