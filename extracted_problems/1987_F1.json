{
  "contestId": 1987,
  "index": "F1",
  "name": "Interesting Problem (Easy Version)",
  "rating": 2500,
  "tags": [
    "implementation"
  ],
  "statement": "This is the easy version of the problem. The only difference between the two versions is the constraint on $$$n$$$. You can make hacks only if both versions of the problem are solved. You are given an array of integers $$$a$$$ of length $$$n$$$. In one operation, you will perform the following two-step process: Choose an index $$$i$$$ such that $$$1 \\le i < |a|$$$ and $$$a_i = i$$$. Remove $$$a_i$$$ and $$$a_{i+1}$$$ from the array and concatenate the remaining parts. Find the maximum number of times that you can perform the operation above.",
  "inputFormat": "Each test contains multiple test cases. The first line of input contains a single integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 100$$$) — the length of the array $$$a$$$. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le n$$$) — the elements of the array $$$a$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$100$$$.",
  "outputFormat": "For each test case, output a single integer — the maximum number of times that you can perform the operation.",
  "sampleTests": [
    {
      "input": "6\n5\n1 5 3 2 4\n8\n2 1 3 4 5 6 7 8\n3\n1 2 3\n4\n1 2 4 4\n5\n4 4 1 3 5\n1\n1",
      "output": "2\n3\n1\n2\n0\n0"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1987/F1",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}