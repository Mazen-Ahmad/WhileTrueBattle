{
  "contestId": 1928,
  "index": "C",
  "name": "Physical Education Lesson",
  "rating": 1600,
  "tags": [
    "implementation"
  ],
  "statement": "In a well-known school, a physical education lesson took place. As usual, everyone was lined up and asked to settle in \"the first–$$$k$$$-th\" position. As is known, settling in \"the first–$$$k$$$-th\" position occurs as follows: the first $$$k$$$ people have numbers $$$1, 2, 3, \\ldots, k$$$, the next $$$k - 2$$$ people have numbers $$$k - 1, k - 2, \\ldots, 2$$$, the next $$$k$$$ people have numbers $$$1, 2, 3, \\ldots, k$$$, and so on. Thus, the settling repeats every $$$2k - 2$$$ positions. Examples of settling are given in the \"Note\" section. The boy Vasya constantly forgets everything. For example, he forgot the number $$$k$$$ described above. But he remembers the position he occupied in the line, as well as the number he received during the settling. Help Vasya understand how many natural numbers $$$k$$$ fit under the given constraints. Note that the settling exists if and only if $$$k > 1$$$. In particular, this means that the settling does not exist for $$$k = 1$$$.",
  "inputFormat": "Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 100$$$) — the number of test cases. This is followed by the description of the test cases. The only line of each test case contains two integers $$$n$$$ and $$$x$$$ ($$$1 \\le x < n \\le 10^9$$$) — Vasya's position in the line and the number Vasya received during the settling.",
  "outputFormat": "For each test case, output a single integer — the number of different $$$k$$$ that fit under the given constraints. It can be proven that under the given constraints, the answer is finite.",
  "sampleTests": [
    {
      "input": "5\n10 2\n3 1\n76 4\n100 99\n1000000000 500000000",
      "output": "4\n1\n9\n0\n1"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1928/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}