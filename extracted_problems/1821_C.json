{
  "contestId": 1821,
  "index": "C",
  "name": "Tear It Apart",
  "rating": 1300,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a string $$$s$$$, consisting of lowercase Latin letters. In one operation, you can select several (one or more) positions in it such that no two selected positions are adjacent to each other. Then you remove the letters on the selected positions from the string. The resulting parts are concatenated without changing their order. What is the smallest number of operations required to make all the letters in $$$s$$$ the same?",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of testcases. The only line of each testcase contains a string $$$s$$$, consisting of lowercase Latin letters. Its length is from $$$1$$$ to $$$2 \\cdot 10^5$$$. The total length of the strings over all testcases doesn't exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each testcase, print a single integer — the smallest number of operations required to make all the letters in the given string $$$s$$$ the same.",
  "sampleTests": [
    {
      "input": "5\nabacaba\ncodeforces\noooooooo\nabcdef\nmewheniseearulhiiarul",
      "output": "1\n3\n0\n2\n4"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1821/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}