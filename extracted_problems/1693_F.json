{
  "contestId": 1693,
  "index": "F",
  "name": "I Might Be Wrong",
  "rating": 3400,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a binary string $$$S$$$ of length $$$n$$$ indexed from $$$1$$$ to $$$n$$$. You can perform the following operation any number of times (possibly zero): Choose two integers $$$l$$$ and $$$r$$$ ($$$1 \\le l \\le r \\le n$$$). Let $$$cnt_0$$$ be the number of times 0 occurs in $$$S[l \\ldots r]$$$ and $$$cnt_1$$$ be the number of times 1 occurs in $$$S[l \\ldots r]$$$. You can pay $$$|cnt_0 - cnt_1| + 1$$$ coins and sort the $$$S[l \\ldots r]$$$. (by $$$S[l \\ldots r]$$$ we mean the substring of $$$S$$$ starting at position $$$l$$$ and ending at position $$$r$$$) For example if $$$S = $$$ 11001 , we can perform the operation on $$$S[2 \\ldots 4]$$$, paying $$$|2 - 1| + 1 = 2$$$ coins, and obtain $$$S = $$$ 10011 as a new string. Find the minimum total number of coins required to sort $$$S$$$ in increasing order.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. The description of test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) — the size of $$$S$$$. The second line of each test case contains a binary string $$$S$$$ of $$$n$$$ characters $$$S_1S_2 \\ldots S_n$$$. ($$$S_i = $$$ 0 or $$$S_i = $$$ 1 for each $$$1 \\le i \\le n$$$) It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output the minimum total number of coins required to sort $$$S$$$ in increasing order.",
  "sampleTests": [
    {
      "input": "7\n1\n1\n2\n10\n3\n101\n4\n1000\n5\n11010\n6\n110000\n20\n01000010001010011000",
      "output": "0\n1\n1\n3\n2\n2\n5"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1693/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}