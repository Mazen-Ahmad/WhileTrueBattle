{
  "contestId": 1535,
  "index": "B",
  "name": "Array Reodering",
  "rating": 900,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an array $$$a$$$ consisting of $$$n$$$ integers. Let's call a pair of indices $$$i$$$, $$$j$$$ good if $$$1 \\le i < j \\le n$$$ and $$$\\gcd(a_i, 2a_j) > 1$$$ (where $$$\\gcd(x, y)$$$ is the greatest common divisor of $$$x$$$ and $$$y$$$). Find the maximum number of good index pairs if you can reorder the array $$$a$$$ in an arbitrary way.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. The first line of the test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 2000$$$) — the number of elements in the array. The second line of the test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^5$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2000$$$.",
  "outputFormat": "For each test case, output a single integer — the maximum number of good index pairs if you can reorder the array $$$a$$$ in an arbitrary way.",
  "sampleTests": [
    {
      "input": "3\n4\n3 6 5 3\n2\n1 7\n5\n1 4 2 4 1",
      "output": "4\n0\n9"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1535/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}