{
  "contestId": 1856,
  "index": "C",
  "name": "To Become Max",
  "rating": 1600,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an array of integers $$$a$$$ of length $$$n$$$. In one operation you: Choose an index $$$i$$$ such that $$$1 \\le i \\le n - 1$$$ and $$$a_i \\le a_{i + 1}$$$. Increase $$$a_i$$$ by $$$1$$$. Find the maximum possible value of $$$\\max(a_1, a_2, \\ldots a_n)$$$ that you can get after performing this operation at most $$$k$$$ times.",
  "inputFormat": "Each test contains multiple test cases. The first line of input contains a single integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\le n \\le 1000$$$, $$$1 \\le k \\le 10^{8}$$$) — the length of the array $$$a$$$ and the maximum number of operations that can be performed. The second line of each test case contains $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$1 \\le a_i \\le 10^{8}$$$) — the elements of the array $$$a$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$1000$$$.",
  "outputFormat": "For each test case output a single integer — the maximum possible maximum of the array after performing at most $$$k$$$ operations.",
  "sampleTests": [
    {
      "input": "6\n3 4\n1 3 3\n5 6\n1 3 4 5 1\n4 13\n1 1 3 179\n5 3\n4 3 2 2 2\n5 6\n6 5 4 1 5\n2 17\n3 5",
      "output": "4\n7\n179\n5\n7\n6"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1856/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}