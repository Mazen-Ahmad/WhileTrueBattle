{
  "contestId": 2066,
  "index": "B",
  "name": "White Magic",
  "rating": 1900,
  "tags": [
    "implementation"
  ],
  "statement": "We call a sequence $$$a_1, a_2, \\ldots, a_n$$$ magical if for all $$$1 \\leq i \\leq n-1$$$ it holds that: $$$\\operatorname{min}(a_1, \\ldots, a_i) \\geq \\operatorname{mex}(a_{i+1}, \\ldots, a_n)$$$. In particular, any sequence of length $$$1$$$ is considered magical . The minimum excluded (MEX) of a collection of integers $$$a_1, a_2, \\ldots, a_k$$$ is defined as the smallest non-negative integer $$$t$$$ which does not occur in the collection $$$a$$$. You are given a sequence $$$a$$$ of $$$n$$$ non-negative integers. Find the maximum possible length of a magical subsequence$$$^{\\text{∗}}$$$ of the sequence $$$a$$$. $$$^{\\text{∗}}$$$A sequence $$$a$$$ is a subsequence of a sequence $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly, zero or all) element from arbitrary positions.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. The first line of each test case contains an integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$) — the length of the sequence $$$a$$$. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\leq a_i \\leq 10^9$$$) — the elements of the sequence $$$a$$$. It is guaranteed that the sum of $$$n$$$ across all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output a single number — the maximum possible length of a magical subsequence of the sequence $$$a$$$.",
  "sampleTests": [
    {
      "input": "8\n5\n4 3 2 1 0\n6\n4 3 3 2 1 0\n4\n2 0 1 2\n1\n777\n4\n1000000000 1 7 9\n2\n0 1\n2\n1 2\n4\n0 1 0 1",
      "output": "5\n5\n3\n1\n4\n2\n2\n3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2066/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}