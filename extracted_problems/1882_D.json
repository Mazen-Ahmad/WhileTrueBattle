{
  "contestId": 1882,
  "index": "D",
  "name": "Tree XOR",
  "rating": 1900,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a tree with $$$n$$$ vertices labeled from $$$1$$$ to $$$n$$$. An integer $$$a_{i}$$$ is written on vertex $$$i$$$ for $$$i = 1, 2, \\ldots, n$$$. You want to make all $$$a_{i}$$$ equal by performing some (possibly, zero) spells. Suppose you root the tree at some vertex. On each spell, you can select any vertex $$$v$$$ and any non-negative integer $$$c$$$. Then for all vertices $$$i$$$ in the subtree$$$^{\\dagger}$$$ of $$$v$$$, replace $$$a_{i}$$$ with $$$a_{i} \\oplus c$$$. The cost of this spell is $$$s \\cdot c$$$, where $$$s$$$ is the number of vertices in the subtree. Here $$$\\oplus$$$ denotes the bitwise XOR operation . Let $$$m_r$$$ be the minimum possible total cost required to make all $$$a_i$$$ equal, if vertex $$$r$$$ is chosen as the root of the tree. Find $$$m_{1}, m_{2}, \\ldots, m_{n}$$$. $$$^{\\dagger}$$$ Suppose vertex $$$r$$$ is chosen as the root of the tree. Then vertex $$$i$$$ belongs to the subtree of $$$v$$$ if the simple path from $$$i$$$ to $$$r$$$ contains $$$v$$$.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^{4}$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^{5}$$$). The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\le a_i < 2^{20}$$$). Each of the next $$$n-1$$$ lines contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\le u, v \\le n$$$), denoting that there is an edge connecting two vertices $$$u$$$ and $$$v$$$. It is guaranteed that the given edges form a tree. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^{5}$$$.",
  "outputFormat": "For each test case, print $$$m_1, m_2, \\ldots, m_n$$$ on a new line.",
  "sampleTests": [
    {
      "input": "2\n4\n3 2 1 0\n1 2\n2 3\n2 4\n1\n100",
      "output": "8 6 12 10 \n0"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1882/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}