{
  "contestId": 1494,
  "index": "E",
  "name": "A-Z Graph",
  "rating": 2400,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a directed graph consisting of $$$n$$$ vertices. Each directed edge (or arc) labeled with a single character. Initially, the graph is empty. You should process $$$m$$$ queries with it. Each query is one of three types: \" $$$+$$$ $$$u$$$ $$$v$$$ $$$c$$$ \" — add arc from $$$u$$$ to $$$v$$$ with label $$$c$$$. It's guaranteed that there is no arc $$$(u, v)$$$ in the graph at this moment; \" $$$-$$$ $$$u$$$ $$$v$$$ \" — erase arc from $$$u$$$ to $$$v$$$. It's guaranteed that the graph contains arc $$$(u, v)$$$ at this moment; \" $$$?$$$ $$$k$$$ \" — find the sequence of $$$k$$$ vertices $$$v_1, v_2, \\dots, v_k$$$ such that there exist both routes $$$v_1 \\to v_2 \\to \\dots \\to v_k$$$ and $$$v_k \\to v_{k - 1} \\to \\dots \\to v_1$$$ and if you write down characters along both routes you'll get the same string. You can visit the same vertices any number of times.",
  "inputFormat": "The first line contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$; $$$1 \\le m \\le 2 \\cdot 10^5$$$) — the number of vertices in the graph and the number of queries. The next $$$m$$$ lines contain queries — one per line. Each query is one of three types: \" $$$+$$$ $$$u$$$ $$$v$$$ $$$c$$$ \" ($$$1 \\le u, v \\le n$$$; $$$u \\neq v$$$; $$$c$$$ is a lowercase Latin letter); \" $$$-$$$ $$$u$$$ $$$v$$$ \" ($$$1 \\le u, v \\le n$$$; $$$u \\neq v$$$); \" $$$?$$$ $$$k$$$ \" ($$$2 \\le k \\le 10^5$$$). It's guaranteed that you don't add multiple edges and erase only existing edges. Also, there is at least one query of the third type.",
  "outputFormat": "For each query of the third type, print YES if there exist the sequence $$$v_1, v_2, \\dots, v_k$$$ described above, or NO otherwise.",
  "sampleTests": [
    {
      "input": "3 11\n+ 1 2 a\n+ 2 3 b\n+ 3 2 a\n+ 2 1 b\n? 3\n? 2\n- 2 1\n- 3 2\n+ 2 1 c\n+ 3 2 d\n? 5",
      "output": "YES\nNO\nYES"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1494/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}