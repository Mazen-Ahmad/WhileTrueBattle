{
  "contestId": 2050,
  "index": "G",
  "name": "Tree Destruction",
  "rating": 1900,
  "tags": [
    "implementation"
  ],
  "statement": "Given a tree$$$^{\\text{∗}}$$$ with $$$n$$$ vertices. You can choose two vertices $$$a$$$ and $$$b$$$ once and remove all vertices on the path from $$$a$$$ to $$$b$$$, including the vertices themselves. If you choose $$$a=b$$$, only one vertex will be removed. Your task is to find the maximum number of connected components$$$^{\\text{†}}$$$ that can be formed after removing the path from the tree. $$$^{\\text{∗}}$$$A tree is a connected graph without cycles. $$$^{\\text{†}}$$$A connected component is a set of vertices such that there is a path along the edges from any vertex to any other vertex in the set (and it is not possible to reach vertices not belonging to this set)",
  "inputFormat": "The first line of the input contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The first line of each test case contains one integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$) — the size of the tree. The next $$$n-1$$$ lines contain two integers $$$u$$$ and $$$v$$$ ($$$1 \\le u, v \\le n$$$, $$$u \\ne v$$$) — the vertices connected by an edge. It is guaranteed that the edges form a tree. It is guaranteed that the sum of $$$n$$$ across all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output one integer — the maximum number of connected components that can be achieved using the described operation.",
  "sampleTests": [
    {
      "input": "6\n2\n1 2\n5\n1 2\n2 3\n3 4\n3 5\n4\n1 2\n2 3\n3 4\n5\n2 1\n3 1\n4 1\n5 4\n6\n2 1\n3 1\n4 1\n5 3\n6 3\n6\n2 1\n3 2\n4 2\n5 3\n6 4",
      "output": "1\n3\n2\n3\n4\n3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2050/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}