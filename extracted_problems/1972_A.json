{
  "contestId": 1972,
  "index": "A",
  "name": "Contest Proposal",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "A contest contains $$$n$$$ problems and the difficulty of the $$$i$$$-th problem is expected to be at most $$$b_i$$$. There are already $$$n$$$ problem proposals and the difficulty of the $$$i$$$-th problem is $$$a_i$$$. Initially, both $$$a_1, a_2, \\ldots, a_n$$$ and $$$b_1, b_2, \\ldots, b_n$$$ are sorted in non-decreasing order. Some of the problems may be more difficult than expected, so the writers must propose more problems. When a new problem with difficulty $$$w$$$ is proposed, the most difficult problem will be deleted from the contest, and the problems will be sorted in a way that the difficulties are non-decreasing. In other words, in each operation, you choose an integer $$$w$$$, insert it into the array $$$a$$$, sort array $$$a$$$ in non-decreasing order, and remove the last element from it. Find the minimum number of new problems to make $$$a_i\\le b_i$$$ for all $$$i$$$.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1\\le t\\le 100$$$). The description of the test cases follows. The first line of each test case contains only one positive integer $$$n$$$ ($$$1 \\leq n \\leq 100$$$), representing the number of problems. The second line of each test case contains an array $$$a$$$ of length $$$n$$$ ($$$1\\le a_1\\le a_2\\le\\cdots\\le a_n\\le 10^9$$$). The third line of each test case contains an array $$$b$$$ of length $$$n$$$ ($$$1\\le b_1\\le b_2\\le\\cdots\\le b_n\\le 10^9$$$).",
  "outputFormat": "For each test case, print an integer as your answer in a new line.",
  "sampleTests": [
    {
      "input": "2\n6\n1000 1400 2000 2000 2200 2700\n800 1200 1500 1800 2200 3000\n6\n4 5 6 7 8 9\n1 2 3 4 5 6",
      "output": "2\n3"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1972/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}