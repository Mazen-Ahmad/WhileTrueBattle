{
  "contestId": 2043,
  "index": "D",
  "name": "Problem about GCD",
  "rating": 1800,
  "tags": [
    "implementation"
  ],
  "statement": "Given three integers $$$l$$$, $$$r$$$, and $$$G$$$, find two integers $$$A$$$ and $$$B$$$ ($$$l \\le A \\le B \\le r$$$) such that their greatest common divisor (GCD) equals $$$G$$$ and the distance $$$|A - B|$$$ is maximized. If there are multiple such pairs, choose the one where $$$A$$$ is minimized. If no such pairs exist, output \" -1 -1 \".",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^3$$$) — the number of test cases. Then, $$$t$$$ test cases follow. Each test case consists of a single line containing three integers $$$l, r, G$$$ ($$$1 \\le l \\le r \\le 10^{18}$$$; $$$1 \\le G \\le 10^{18}$$$) — the range boundaries and the required GCD.",
  "outputFormat": "For each test case, output two integers $$$A$$$ and $$$B$$$ — the solution to the problem, or \" -1 -1 \" if no such pair exists.",
  "sampleTests": [
    {
      "input": "4\n4 8 2\n4 8 3\n4 8 4\n5 7 6",
      "output": "4 6\n-1 -1\n4 8\n6 6"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2043/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}