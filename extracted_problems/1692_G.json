{
  "contestId": 1692,
  "index": "G",
  "name": "2^Sort",
  "rating": 1400,
  "tags": [
    "implementation"
  ],
  "statement": "Given an array $$$a$$$ of length $$$n$$$ and an integer $$$k$$$, find the number of indices $$$1 \\leq i \\leq n - k$$$ such that the subarray $$$[a_i, \\dots, a_{i+k}]$$$ with length $$$k+1$$$ ( not with length $$$k$$$) has the following property: If you multiply the first element by $$$2^0$$$, the second element by $$$2^1$$$, ..., and the ($$$k+1$$$)-st element by $$$2^k$$$, then this subarray is sorted in strictly increasing order. More formally, count the number of indices $$$1 \\leq i \\leq n - k$$$ such that $$$$$$2^0 \\cdot a_i < 2^1 \\cdot a_{i+1} < 2^2 \\cdot a_{i+2} < \\dots < 2^k \\cdot a_{i+k}.$$$$$$",
  "inputFormat": "The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. The first line of each test case contains two integers $$$n$$$, $$$k$$$ ($$$3 \\leq n \\leq 2 \\cdot 10^5$$$, $$$1 \\leq k < n$$$) — the length of the array and the number of inequalities. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) — the elements of the array. The sum of $$$n$$$ across all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output a single integer — the number of indices satisfying the condition in the statement.",
  "sampleTests": [
    {
      "input": "6\n4 2\n20 22 19 84\n5 1\n9 5 3 2 1\n5 2\n9 5 3 2 1\n7 2\n22 12 16 4 3 22 12\n7 3\n22 12 16 4 3 22 12\n9 3\n3 9 12 3 9 12 3 9 12",
      "output": "2\n3\n2\n3\n1\n0"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1692/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}