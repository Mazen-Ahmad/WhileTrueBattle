{
  "contestId": 1946,
  "index": "C",
  "name": "Tree Cutting",
  "rating": 1600,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a tree with $$$n$$$ vertices. Your task is to find the maximum number $$$x$$$ such that it is possible to remove exactly $$$k$$$ edges from this tree in such a way that the size of each remaining connected component$$$^{\\dagger}$$$ is at least $$$x$$$. $$$^{\\dagger}$$$ Two vertices $$$v$$$ and $$$u$$$ are in the same connected component if there exists a sequence of numbers $$$t_1, t_2, \\ldots, t_k$$$ of arbitrary length $$$k$$$, such that $$$t_1 = v$$$, $$$t_k = u$$$, and for each $$$i$$$ from $$$1$$$ to $$$k - 1$$$, vertices $$$t_i$$$ and $$$t_{i+1}$$$ are connected by an edge.",
  "inputFormat": "Each test consists of several sets of input data. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of sets of input data. This is followed by a description of the sets of input data. The first line of each set of input data contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k < n \\le 10^5$$$) — the number of vertices in the tree and the number of edges to be removed. Each of the next $$$n - 1$$$ lines of each set of input data contains two integers $$$v$$$ and $$$u$$$ ($$$1 \\le v, u \\le n$$$) — the next edge of the tree. It is guaranteed that the sum of the values of $$$n$$$ for all sets of input data does not exceed $$$10^5$$$.",
  "outputFormat": "For each set of input data, output a single line containing the maximum number $$$x$$$ such that it is possible to remove exactly $$$k$$$ edges from the tree in such a way that the size of each remaining connected component is at least $$$x$$$.",
  "sampleTests": [
    {
      "input": "6\n5 1\n1 2\n1 3\n3 4\n3 5\n2 1\n1 2\n6 1\n1 2\n2 3\n3 4\n4 5\n5 6\n3 1\n1 2\n1 3\n8 2\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n3 8\n6 2\n1 2\n2 3\n1 4\n4 5\n5 6",
      "output": "2\n1\n3\n1\n1\n2"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1946/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}