{
  "contestId": 1738,
  "index": "F",
  "name": "Connectivity Addicts",
  "rating": 2400,
  "tags": [
    "implementation"
  ],
  "statement": "This is an interactive problem . Given a simple undirected graph with $$$n$$$ vertices numbered from $$$1$$$ to $$$n$$$, your task is to color all the vertices such that for every color $$$c$$$, the following conditions hold: The set of vertices with color $$$c$$$ is connected ; $$$s_c \\leq n_c^2$$$, where $$$n_c$$$ is the number of vertices with color $$$c$$$, and $$$s_c$$$ is the sum of degrees of vertices with color $$$c$$$. It can be shown that there always exists a way to color all the vertices such that the above conditions hold. Initially, you are only given the number $$$n$$$ of vertices and the degree of each vertex. In each query, you can choose a vertex $$$u$$$. As a response, you will be given the $$$k$$$-th edge incident to $$$u$$$, if this is the $$$k$$$-th query on vertex $$$u$$$. You are allowed to make at most $$$n$$$ queries . An undirected graph is simple if it does not contain multiple edges or self-loops. The degree of a vertex is the number of edges incident to it. A set $$$S$$$ of vertices is connected if for every two different vertices $$$u, v \\in S$$$, there is a path, which only passes through vertices in $$$S$$$, that connects $$$u$$$ and $$$v$$$. That is, there is a sequence of edges $$$(u_1, v_1), (u_2, v_2), \\dots, (u_k, v_k)$$$ with $$$k \\geq 1$$$ such that $$$u_1 = u$$$, $$$v_k = v$$$, and $$$v_i = u_{i+1}$$$ for every $$$1 \\leq i < k$$$; and $$$u_k \\in S$$$ and $$$v_k \\in S$$$ for every $$$1 \\leq i \\leq k$$$. Especially, a set containing only one vertex is connected.",
  "inputFormat": "Input specification not found",
  "outputFormat": "Output specification not found",
  "sampleTests": [
    {
      "input": "1\n5\n2 2 2 2 0\n\n2\n\n4\n\n2\n\n4",
      "output": "? 1\n\n? 1\n\n? 3\n\n? 3\n\n! 1 1 2 2 3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1738/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}