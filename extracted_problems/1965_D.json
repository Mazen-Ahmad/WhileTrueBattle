{
  "contestId": 1965,
  "index": "D",
  "name": "Missing Subarray Sum",
  "rating": 2900,
  "tags": [
    "implementation"
  ],
  "statement": "There is a hidden array $$$a$$$ of $$$n$$$ positive integers. You know that $$$a$$$ is a palindrome , or in other words, for all $$$1 \\le i \\le n$$$, $$$a_i = a_{n + 1 - i}$$$. You are given the sums of all but one of its distinct subarrays, in arbitrary order. The subarray whose sum is not given can be any of the $$$\\frac{n(n+1)}{2}$$$ distinct subarrays of $$$a$$$. Recover any possible palindrome $$$a$$$. The input is chosen such that there is always at least one array $$$a$$$ that satisfies the conditions. An array $$$b$$$ is a subarray of $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.",
  "inputFormat": "The first line of the input contains a single integer $$$t$$$ ($$$1 \\le t \\le 200$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$3 \\le n \\le 1000$$$) — the size of the array $$$a$$$. The next line of each test case contains $$$\\frac{n(n+1)}{2} - 1$$$ integers $$$s_i$$$ ($$$1\\leq s_i \\leq 10^9$$$) — all but one of the subarray sums of $$$a$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$1000$$$. Additional constraint on the input: There is always at least one valid solution. Hacks are disabled for this problem.",
  "outputFormat": "For each test case, print one line containing $$$n$$$ positive integers $$$a_1, a_2, \\cdots a_n$$$ — any valid array $$$a$$$. Note that $$$a$$$ must be a palindrome. If there are multiple solutions, print any.",
  "sampleTests": [
    {
      "input": "7\n3\n1 2 3 4 1\n4\n18 2 11 9 7 11 7 2 9\n4\n5 10 5 16 3 3 13 8 8\n4\n8 10 4 6 4 20 14 14 6\n5\n1 2 3 4 5 4 3 2 1 1 2 3 2 1\n5\n1 1 2 2 2 3 3 3 3 4 5 5 6 8\n3\n500000000 1000000000 500000000 500000000 1000000000",
      "output": "1 2 1 \n7 2 2 7 \n3 5 5 3 \n6 4 4 6 \n1 1 1 1 1 \n2 1 2 1 2 \n500000000 500000000 500000000"
    }
  ],
  "timeLimit": 5000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1965/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}