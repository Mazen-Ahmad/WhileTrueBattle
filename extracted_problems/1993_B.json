{
  "contestId": 1993,
  "index": "B",
  "name": "Parity and Sum",
  "rating": 1100,
  "tags": [
    "implementation"
  ],
  "statement": "Given an array $$$a$$$ of $$$n$$$ positive integers. In one operation, you can pick any pair of indexes $$$(i, j)$$$ such that $$$a_i$$$ and $$$a_j$$$ have distinct parity, then replace the smaller one with the sum of them. More formally: If $$$a_i < a_j$$$, replace $$$a_i$$$ with $$$a_i + a_j$$$; Otherwise, replace $$$a_j$$$ with $$$a_i + a_j$$$. Find the minimum number of operations needed to make all elements of the array have the same parity.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$). The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$) — the elements of array $$$a$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output a single integer — the minimum number of operations required.",
  "sampleTests": [
    {
      "input": "7\n5\n1 3 5 7 9\n4\n4 4 4 4\n3\n2 3 4\n4\n3 2 2 8\n6\n4 3 6 1 2 1\n6\n3 6 1 2 1 2\n5\n999999996 999999997 999999998 999999999 1000000000",
      "output": "0\n0\n2\n4\n3\n3\n3"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1993/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}