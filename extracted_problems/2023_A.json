{
  "contestId": 2023,
  "index": "A",
  "name": "Concatenation of Arrays",
  "rating": 1300,
  "tags": [
    "implementation"
  ],
  "statement": "You are given $$$n$$$ arrays $$$a_1$$$, $$$\\ldots$$$, $$$a_n$$$. The length of each array is two. Thus, $$$a_i = [a_{i, 1}, a_{i, 2}]$$$. You need to concatenate the arrays into a single array of length $$$2n$$$ such that the number of inversions$$$^{\\dagger}$$$ in the resulting array is minimized. Note that you do not need to count the actual number of inversions. More formally, you need to choose a permutation$$$^{\\ddagger}$$$ $$$p$$$ of length $$$n$$$, so that the array $$$b = [a_{p_1,1}, a_{p_1,2}, a_{p_2, 1}, a_{p_2, 2}, \\ldots, a_{p_n,1}, a_{p_n,2}]$$$ contains as few inversions as possible. $$$^{\\dagger}$$$The number of inversions in an array $$$c$$$ is the number of pairs of indices $$$i$$$ and $$$j$$$ such that $$$i < j$$$ and $$$c_i > c_j$$$. $$$^{\\ddagger}$$$A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array).",
  "inputFormat": "Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$) — the number of arrays. Each of the following $$$n$$$ lines contains two integers $$$a_{i,1}$$$ and $$$a_{i,2}$$$ ($$$1 \\le a_{i,j} \\le 10^9$$$) — the elements of the $$$i$$$-th array. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.",
  "outputFormat": "For each test case, output $$$2n$$$ integers — the elements of the array you obtained. If there are multiple solutions, output any of them.",
  "sampleTests": [
    {
      "input": "4\n2\n1 4\n2 3\n3\n3 2\n4 3\n2 1\n5\n5 10\n2 3\n9 6\n4 1\n8 7\n1\n10 20",
      "output": "2 3 1 4\n2 1 3 2 4 3\n4 1 2 3 5 10 8 7 9 6\n10 20"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2023/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}