{
  "contestId": 1674,
  "index": "G",
  "name": "Remove Directed Edges",
  "rating": 2000,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a directed acyclic graph, consisting of $$$n$$$ vertices and $$$m$$$ edges. The vertices are numbered from $$$1$$$ to $$$n$$$. There are no multiple edges and self-loops. Let $$$\\mathit{in}_v$$$ be the number of incoming edges (indegree) and $$$\\mathit{out}_v$$$ be the number of outgoing edges (outdegree) of vertex $$$v$$$. You are asked to remove some edges from the graph. Let the new degrees be $$$\\mathit{in'}_v$$$ and $$$\\mathit{out'}_v$$$. You are only allowed to remove the edges if the following conditions hold for every vertex $$$v$$$: $$$\\mathit{in'}_v < \\mathit{in}_v$$$ or $$$\\mathit{in'}_v = \\mathit{in}_v = 0$$$; $$$\\mathit{out'}_v < \\mathit{out}_v$$$ or $$$\\mathit{out'}_v = \\mathit{out}_v = 0$$$. Let's call a set of vertices $$$S$$$ cute if for each pair of vertices $$$v$$$ and $$$u$$$ ($$$v \\neq u$$$) such that $$$v \\in S$$$ and $$$u \\in S$$$, there exists a path either from $$$v$$$ to $$$u$$$ or from $$$u$$$ to $$$v$$$ over the non-removed edges. What is the maximum possible size of a cute set $$$S$$$ after you remove some edges from the graph and both indegrees and outdegrees of all vertices either decrease or remain equal to $$$0$$$?",
  "inputFormat": "The first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$; $$$0 \\le m \\le 2 \\cdot 10^5$$$) — the number of vertices and the number of edges of the graph. Each of the next $$$m$$$ lines contains two integers $$$v$$$ and $$$u$$$ ($$$1 \\le v, u \\le n$$$; $$$v \\neq u$$$) — the description of an edge. The given edges form a valid directed acyclic graph. There are no multiple edges.",
  "outputFormat": "Print a single integer — the maximum possible size of a cute set $$$S$$$ after you remove some edges from the graph and both indegrees and outdegrees of all vertices either decrease or remain equal to $$$0$$$.",
  "sampleTests": [
    {
      "input": "3 3\n1 2\n2 3\n1 3",
      "output": "2"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1674/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}