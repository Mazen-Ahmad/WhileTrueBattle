{
  "contestId": 1462,
  "index": "A",
  "name": "Favorite Sequence",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "Polycarp has a favorite sequence $$$a[1 \\dots n]$$$ consisting of $$$n$$$ integers. He wrote it out on the whiteboard as follows: he wrote the number $$$a_1$$$ to the left side (at the beginning of the whiteboard); he wrote the number $$$a_2$$$ to the right side (at the end of the whiteboard); then as far to the left as possible (but to the right from $$$a_1$$$), he wrote the number $$$a_3$$$; then as far to the right as possible (but to the left from $$$a_2$$$), he wrote the number $$$a_4$$$; Polycarp continued to act as well, until he wrote out the entire sequence on the whiteboard. The beginning of the result looks like this (of course, if $$$n \\ge 4$$$). For example, if $$$n=7$$$ and $$$a=[3, 1, 4, 1, 5, 9, 2]$$$, then Polycarp will write a sequence on the whiteboard $$$[3, 4, 5, 2, 9, 1, 1]$$$. You saw the sequence written on the whiteboard and now you want to restore Polycarp's favorite sequence.",
  "inputFormat": "The first line contains a single positive integer $$$t$$$ ($$$1 \\le t \\le 300$$$) — the number of test cases in the test. Then $$$t$$$ test cases follow. The first line of each test case contains an integer $$$n$$$ ($$$1 \\le n \\le 300$$$) — the length of the sequence written on the whiteboard. The next line contains $$$n$$$ integers $$$b_1, b_2,\\ldots, b_n$$$ ($$$1 \\le b_i \\le 10^9$$$) — the sequence written on the whiteboard.",
  "outputFormat": "Output $$$t$$$ answers to the test cases. Each answer — is a sequence $$$a$$$ that Polycarp wrote out on the whiteboard.",
  "sampleTests": [
    {
      "input": "6\n7\n3 4 5 2 9 1 1\n4\n9 2 7 1\n11\n8 4 3 1 2 7 8 7 9 4 2\n1\n42\n2\n11 7\n8\n1 1 1 1 1 1 1 1",
      "output": "3 1 4 1 5 9 2 \n9 1 2 7 \n8 2 4 4 3 9 1 7 2 8 7 \n42 \n11 7 \n1 1 1 1 1 1 1 1"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1462/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}