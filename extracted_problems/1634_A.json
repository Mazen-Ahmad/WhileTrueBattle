{
  "contestId": 1634,
  "index": "A",
  "name": "Reverse and Concatenate",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "Real stupidity beats artificial intelligence every time. — Terry Pratchett, Hogfather, Discworld You are given a string $$$s$$$ of length $$$n$$$ and a number $$$k$$$. Let's denote by $$$rev(s)$$$ the reversed string $$$s$$$ (i.e. $$$rev(s) = s_n s_{n-1} ... s_1$$$). You can apply one of the two kinds of operations to the string: replace the string $$$s$$$ with $$$s + rev(s)$$$ replace the string $$$s$$$ with $$$rev(s) + s$$$ How many different strings can you get as a result of performing exactly $$$k$$$ operations (possibly of different kinds) on the original string $$$s$$$? In this statement we denoted the concatenation of strings $$$s$$$ and $$$t$$$ as $$$s + t$$$. In other words, $$$s + t = s_1 s_2 ... s_n t_1 t_2 ... t_m$$$, where $$$n$$$ and $$$m$$$ are the lengths of strings $$$s$$$ and $$$t$$$ respectively.",
  "inputFormat": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — number of test cases. Next $$$2 \\cdot t$$$ lines contain $$$t$$$ test cases: The first line of a test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 100$$$, $$$0 \\le k \\le 1000$$$) — the length of the string and the number of operations respectively. The second string of a test case contains one string $$$s$$$ of length $$$n$$$ consisting of lowercase Latin letters.",
  "outputFormat": "For each test case, print the answer (that is, the number of different strings that you can get after exactly $$$k$$$ operations) on a separate line. It can be shown that the answer does not exceed $$$10^9$$$ under the given constraints.",
  "sampleTests": [
    {
      "input": "4\n3 2\naab\n3 3\naab\n7 1\nabacaba\n2 0\nab",
      "output": "2\n2\n1\n1"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1634/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}