{
  "contestId": 1977,
  "index": "E",
  "name": "Tensor",
  "rating": 2600,
  "tags": [
    "implementation"
  ],
  "statement": "This is an interactive problem. You are given an integer $$$n$$$. The jury has hidden from you a directed graph with $$$n$$$ vertices (numbered from $$$1$$$ to $$$n$$$) and some number of edges. You additionally know that: The graph only contains edges of the form $$$i \\leftarrow j$$$, where $$$1 \\le i < j \\le n$$$. For any three vertices $$$1 \\le i < j < k \\le n$$$, at least one of the following holds$$$^\\dagger$$$: Vertex $$$i$$$ is reachable from vertex $$$j$$$, or Vertex $$$i$$$ is reachable from vertex $$$k$$$, or Vertex $$$j$$$ is reachable from vertex $$$k$$$. You want to color each vertex in either black or white such that for any two vertices $$$i$$$ and $$$j$$$ ($$$1 \\le i < j \\le n$$$) of the same color, vertex $$$i$$$ is reachable from vertex $$$j$$$. To do that, you can ask queries of the following type: ? i j — is vertex $$$i$$$ reachable from vertex $$$j$$$ ($$$1 \\le i < j \\le n$$$)? Find any valid vertex coloring of the hidden graph in at most $$$2 \\cdot n$$$ queries. It can be proven that such a coloring always exists. Note that the grader is not adaptive: the graph is fixed before any queries are made. $$$^\\dagger$$$ Vertex $$$a$$$ is reachable from vertex $$$b$$$ if there exists a path from vertex $$$b$$$ to vertex $$$a$$$ in the graph.",
  "inputFormat": "Each test contains multiple test cases. The first line of input contains a single integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. The description of the test cases follows. The only line of each test case contains a single integer $$$n$$$ ($$$3 \\le n \\le 100$$$) — the number of vertices in the hidden graph. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$1000$$$.",
  "outputFormat": "Output specification not found",
  "sampleTests": [
    {
      "input": "2\n4\n\nYES\n\nYES\n\nYES\n\nNO\n\nNO\n\nNO\n\n5",
      "output": "? 1 2\n\n? 2 3\n\n? 1 3\n\n? 1 4\n\n? 2 4\n\n? 3 4\n\n! 0 0 0 1\n\n! 1 1 0 1 0"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1977/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}