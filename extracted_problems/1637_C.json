{
  "contestId": 1637,
  "index": "C",
  "name": "Andrew and Stones",
  "rating": 1200,
  "tags": [
    "implementation"
  ],
  "statement": "Andrew has $$$n$$$ piles with stones. The $$$i$$$-th pile contains $$$a_i$$$ stones. He wants to make his table clean so he decided to put every stone either to the $$$1$$$-st or the $$$n$$$-th pile. Andrew can perform the following operation any number of times: choose $$$3$$$ indices $$$1 \\le i < j < k \\le n$$$, such that the $$$j$$$-th pile contains at least $$$2$$$ stones, then he takes $$$2$$$ stones from the pile $$$j$$$ and puts one stone into pile $$$i$$$ and one stone into pile $$$k$$$. Tell Andrew what is the minimum number of operations needed to move all the stones to piles $$$1$$$ and $$$n$$$, or determine if it's impossible.",
  "inputFormat": "The input contains several test cases. The first line contains one integer $$$t$$$ ($$$1 \\leq t \\leq 10\\,000$$$) — the number of test cases. The first line for each test case contains one integer $$$n$$$ ($$$3 \\leq n \\leq 10^5$$$) — the length of the array. The second line contains a sequence of integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) — the array elements. It is guaranteed that the sum of the values $$$n$$$ over all test cases does not exceed $$$10^5$$$.",
  "outputFormat": "For each test case print the minimum number of operations needed to move stones to piles $$$1$$$ and $$$n$$$, or print $$$-1$$$ if it's impossible.",
  "sampleTests": [
    {
      "input": "4\n5\n1 2 2 3 6\n3\n1 3 1\n3\n1 2 1\n4\n3 1 1 2",
      "output": "4\n-1\n1\n-1"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1637/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}