{
  "contestId": 1654,
  "index": "G",
  "name": "Snowy Mountain",
  "rating": 2900,
  "tags": [
    "implementation"
  ],
  "statement": "There are $$$n$$$ locations on a snowy mountain range (numbered from $$$1$$$ to $$$n$$$), connected by $$$n-1$$$ trails in the shape of a tree. Each trail has length $$$1$$$. Some of the locations are base lodges. The height $$$h_i$$$ of each location is equal to the distance to the nearest base lodge (a base lodge has height $$$0$$$). There is a skier at each location, each skier has initial kinetic energy $$$0$$$. Each skier wants to ski along as many trails as possible. Suppose that the skier is skiing along a trail from location $$$i$$$ to $$$j$$$. Skiers are not allowed to ski uphill (i.e., if $$$h_i < h_j$$$). It costs one unit of kinetic energy to ski along flat ground (i.e., if $$$h_i = h_j$$$), and a skier gains one unit of kinetic energy by skiing downhill (i.e., if $$$h_i > h_j$$$). For each location, compute the length of the longest sequence of trails that the skier starting at that location can ski along without their kinetic energy ever becoming negative. Skiers are allowed to visit the same location or trail multiple times.",
  "inputFormat": "The first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$). The second line contains $$$n$$$ integers $$$l_1, l_2, \\ldots, l_n$$$ ($$$0 \\le l_i \\le 1$$$). If $$$l_i = 1$$$, location $$$i$$$ is a base lodge; if $$$l_i = 0$$$, location $$$i$$$ is not a base lodge. It is guaranteed that there is at least $$$1$$$ base lodge. Each of the next $$$n-1$$$ lines contains two integers $$$u, v$$$ ($$$1 \\leq u, v \\leq n$$$, $$$u \\neq v$$$), meaning that there is a trail that connects the locations $$$u$$$ and $$$v$$$. It is guaranteed that the given trails form a tree.",
  "outputFormat": "Print $$$n$$$ integers: the $$$i$$$-th integer is equal to the length of the longest sequence of trails that the skier starting at location $$$i$$$ can ski along without their kinetic energy ever becoming negative.",
  "sampleTests": [
    {
      "input": "6\n1 1 0 0 0 0\n1 3\n2 4\n3 4\n4 5\n5 6",
      "output": "0 0 1 1 3 5"
    }
  ],
  "timeLimit": 5000,
  "memoryLimit": 1024,
  "sourceUrl": "https://codeforces.com/problemset/problem/1654/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}