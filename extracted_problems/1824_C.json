{
  "contestId": 1824,
  "index": "C",
  "name": "LuoTianyi and XOR-Tree",
  "rating": 2500,
  "tags": [
    "implementation"
  ],
  "statement": "LuoTianyi gives you a tree with values in its vertices, and the root of the tree is vertex $$$1$$$. In one operation, you can change the value in one vertex to any non-negative integer. Now you need to find the minimum number of operations you need to perform to make each path from the root to leaf$$$^{\\dagger}$$$ has a bitwise XOR value of zero. $$$^{\\dagger}$$$A leaf in a rooted tree is a vertex that has exactly one neighbor and is not a root.",
  "inputFormat": "The first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 10^5$$$) — the number of vertices in the tree. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$), the $$$i$$$-th number represents the value in the $$$i$$$-th vertex. Next $$$n−1$$$ lines describe the edges of the tree. The $$$i$$$-th line contains two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\le u_i,v_i \\le n, u_i \\neq v_i$$$) — the vertices connected by an edge of the tree. It's guaranteed that the given edges form a tree.",
  "outputFormat": "Print a single integer — the minimum number of operations.",
  "sampleTests": [
    {
      "input": "6\n3 5 7 5 8 4\n1 2\n1 3\n1 4\n3 5\n4 6",
      "output": "3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1824/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}