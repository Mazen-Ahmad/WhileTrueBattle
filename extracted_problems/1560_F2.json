{
  "contestId": 1560,
  "index": "F2",
  "name": "Nearest Beautiful Number (hard version)",
  "rating": 2100,
  "tags": [
    "implementation"
  ],
  "statement": "It is a complicated version of problem F1. The difference between them is the constraints (F1: $$$k \\le 2$$$, F2: $$$k \\le 10$$$). You are given an integer $$$n$$$. Find the minimum integer $$$x$$$ such that $$$x \\ge n$$$ and the number $$$x$$$ is $$$k$$$- beautiful . A number is called $$$k$$$- beautiful if its decimal representation having no leading zeroes contains no more than $$$k$$$ different digits. E.g. if $$$k = 2$$$, the numbers $$$3434443$$$, $$$55550$$$, $$$777$$$ and $$$21$$$ are $$$k$$$- beautiful whereas the numbers $$$120$$$, $$$445435$$$ and $$$998244353$$$ are not.",
  "inputFormat": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Then $$$t$$$ test cases follow. Each test case consists of one line containing two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 10^9$$$, $$$1 \\le k \\le 10$$$).",
  "outputFormat": "For each test case output on a separate line $$$x$$$ — the minimum $$$k$$$- beautiful integer such that $$$x \\ge n$$$.",
  "sampleTests": [
    {
      "input": "6\n2021 3\n177890 2\n34512 3\n724533 4\n998244353 1\n12345678 10",
      "output": "2021\n181111\n34533\n724542\n999999999\n12345678"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1560/F2",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}