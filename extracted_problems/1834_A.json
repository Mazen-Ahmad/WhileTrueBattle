{
  "contestId": 1834,
  "index": "A",
  "name": "Unit Array",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "Given an array $$$a$$$ of length $$$n$$$, which elements are equal to $$$-1$$$ and $$$1$$$. Let's call the array $$$a$$$ good if the following conditions are held at the same time: $$$a_1 + a_2 + \\ldots + a_n \\ge 0$$$; $$$a_1 \\cdot a_2 \\cdot \\ldots \\cdot a_n = 1$$$. In one operation, you can select an arbitrary element of the array $$$a_i$$$ and change its value to the opposite. In other words, if $$$a_i = -1$$$, you can assign the value to $$$a_i := 1$$$, and if $$$a_i = 1$$$, then assign the value to $$$a_i := -1$$$. Determine the minimum number of operations you need to perform to make the array $$$a$$$ good. It can be shown that this is always possible.",
  "inputFormat": "Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 500$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 100$$$) — the length of the array $$$a$$$. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$a_i = \\pm 1$$$) — the elements of the array $$$a$$$.",
  "outputFormat": "For each test case, output a single integer — the minimum number of operations that need to be done to make the $$$a$$$ array good.",
  "sampleTests": [
    {
      "input": "7\n4\n-1 -1 1 -1\n5\n-1 -1 -1 1 1\n4\n-1 1 -1 1\n3\n-1 -1 -1\n5\n1 1 1 1 1\n1\n-1\n2\n-1 -1",
      "output": "1\n1\n0\n3\n0\n1\n2"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1834/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}