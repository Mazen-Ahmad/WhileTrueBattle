{
  "contestId": 1690,
  "index": "A",
  "name": "Print a Pedestal (Codeforces logo?)",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "Given the integer $$$n$$$ — the number of available blocks. You must use all blocks to build a pedestal . The pedestal consists of $$$3$$$ platforms for $$$2$$$-nd, $$$1$$$-st and $$$3$$$-rd places respectively. The platform for the $$$1$$$-st place must be strictly higher than for the $$$2$$$-nd place, and the platform for the $$$2$$$-nd place must be strictly higher than for the $$$3$$$-rd place. Also, the height of each platform must be greater than zero (that is, each platform must contain at least one block). Example pedestal of $$$n=11$$$ blocks: second place height equals $$$4$$$ blocks, first place height equals $$$5$$$ blocks, third place height equals $$$2$$$ blocks. Among all possible pedestals of $$$n$$$ blocks, deduce one such that the platform height for the $$$1$$$-st place minimum as possible. If there are several of them, output any of them.",
  "inputFormat": "The first line of input data contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Each test case contains a single integer $$$n$$$ ($$$6 \\le n \\le 10^5$$$) — the total number of blocks for the pedestal. All $$$n$$$ blocks must be used. It is guaranteed that the sum of $$$n$$$ values over all test cases does not exceed $$$10^6$$$.",
  "outputFormat": "For each test case, output $$$3$$$ numbers $$$h_2, h_1, h_3$$$ — the platform heights for $$$2$$$-nd, $$$1$$$-st and $$$3$$$-rd places on a pedestal consisting of $$$n$$$ blocks ($$$h_1+h_2+h_3=n$$$, $$$0 < h_3 < h_2 < h_1$$$). Among all possible pedestals, output the one for which the value of $$$h_1$$$ minimal . If there are several of them, output any of them.",
  "sampleTests": [
    {
      "input": "6\n11\n6\n10\n100000\n7\n8",
      "output": "4 5 2\n2 3 1\n4 5 1\n33334 33335 33331\n2 4 1\n3 4 1"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1690/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}