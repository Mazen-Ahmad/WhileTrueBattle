{
  "contestId": 1593,
  "index": "D1",
  "name": "All are Same",
  "rating": 1100,
  "tags": [
    "implementation"
  ],
  "statement": "This problem is a simplified version of D2, but it has significant differences, so read the whole statement. Polycarp has an array of $$$n$$$ ($$$n$$$ is even) integers $$$a_1, a_2, \\dots, a_n$$$. Polycarp conceived of a positive integer $$$k$$$. After that, Polycarp began performing the following operations on the array: take an index $$$i$$$ ($$$1 \\le i \\le n$$$) and reduce the number $$$a_i$$$ by $$$k$$$. After Polycarp performed some (possibly zero) number of such operations, it turned out that all numbers in the array became the same. Find the maximum $$$k$$$ at which such a situation is possible, or print $$$-1$$$ if such a number can be arbitrarily large.",
  "inputFormat": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 10$$$) — the number of test cases. Then $$$t$$$ test cases follow. Each test case consists of two lines. The first line contains an even integer $$$n$$$ ($$$4 \\le n \\le 40$$$) ($$$n$$$ is even). The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots a_n$$$ ($$$-10^6 \\le a_i \\le 10^6$$$). It is guaranteed that the sum of all $$$n$$$ specified in the given test cases does not exceed $$$100$$$.",
  "outputFormat": "For each test case output on a separate line an integer $$$k$$$ ($$$k \\ge 1$$$) — the maximum possible number that Polycarp used in operations on the array, or $$$-1$$$, if such a number can be arbitrarily large.",
  "sampleTests": [
    {
      "input": "3\n6\n1 5 3 1 1 5\n8\n-1 0 1 -1 0 1 -1 0\n4\n100 -1000 -1000 -1000",
      "output": "2\n1\n1100"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1593/D1",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}