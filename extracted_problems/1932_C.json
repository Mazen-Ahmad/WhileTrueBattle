{
  "contestId": 1932,
  "index": "C",
  "name": "LR-remainders",
  "rating": 1400,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an array $$$a$$$ of length $$$n$$$, a positive integer $$$m$$$, and a string of commands of length $$$n$$$. Each command is either the character ' L ' or the character ' R '. Process all $$$n$$$ commands in the order they are written in the string $$$s$$$. Processing a command is done as follows: First, output the remainder of the product of all elements of the array $$$a$$$ when divided by $$$m$$$. Then, if the command is ' L ', remove the leftmost element from the array $$$a$$$, if the command is ' R ', remove the rightmost element from the array $$$a$$$. Note that after each move, the length of the array $$$a$$$ decreases by $$$1$$$, and after processing all commands, it will be empty. Write a program that will process all commands in the order they are written in the string $$$s$$$ (from left to right).",
  "inputFormat": "The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases in the input. Then descriptions of $$$t$$$ test cases follow. Each test case of the input is given by three lines. The first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n \\le 2\\cdot10^5, 1 \\le m \\le 10^4$$$) — the initial length of the array $$$a$$$ and the value to take the remainder by. The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^4$$$) — the elements of the array $$$a$$$. The third line contains a string $$$s$$$ consisting of $$$n$$$ characters ' L ' and ' R '. It is guaranteed that the sum of the values of $$$n$$$ for all test cases in a test does not exceed $$$2\\cdot10^5$$$.",
  "outputFormat": "For each test case, output $$$n$$$ integers $$$b_1, b_2, \\dots, b_n$$$, where $$$b_i$$$ is the remainder when dividing the product of all elements of the current state of the array $$$a$$$ by $$$m$$$ at the beginning of the execution of the $$$i$$$-th command.",
  "sampleTests": [
    {
      "input": "4\n4 6\n3 1 4 2\nLRRL\n5 1\n1 1 1 1 1\nLLLLL\n6 8\n1 2 3 4 5 6\nRLLLRR\n1 10000\n10000\nR",
      "output": "0 2 4 1 \n0 0 0 0 0 \n0 0 0 4 4 4 \n0"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1932/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}