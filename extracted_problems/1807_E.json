{
  "contestId": 1807,
  "index": "E",
  "name": "Interview",
  "rating": 1300,
  "tags": [
    "implementation"
  ],
  "statement": "This is an interactive problem. If you are unsure how interactive problems work, then it is recommended to read the guide for participants . Before the last stage of the exam, the director conducted an interview. He gave Gon $$$n$$$ piles of stones, the $$$i$$$-th pile having $$$a_i$$$ stones. Each stone is identical and weighs $$$1$$$ grams, except for one special stone that is part of an unknown pile and weighs $$$2$$$ grams. A picture of the first test case. Pile $$$2$$$ has the special stone. The piles have weights of $$$1,3,3,4,5$$$, respectively. Gon can only ask the director questions of one kind: he can choose $$$k$$$ piles, and the director will tell him the total weight of the piles chosen. More formally, Gon can choose an integer $$$k$$$ ($$$1 \\leq k \\leq n$$$) and $$$k$$$ unique piles $$$p_1, p_2, \\dots, p_k$$$ ($$$1 \\leq p_i \\leq n$$$), and the director will return the total weight $$$m_{p_1} + m_{p_2} + \\dots + m_{p_k}$$$, where $$$m_i$$$ denotes the weight of pile $$$i$$$. Gon is tasked with finding the pile that contains the special stone. However, the director is busy. Help Gon find this pile in at most $$$\\mathbf{30}$$$ queries.",
  "inputFormat": "The input data contains several test cases. The first line contains one integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$) — the number of piles. The second line of each test case contains $$$n$$$ integers $$$a_i$$$ ($$$1 \\leq a_i \\leq 10^4$$$) — the number of stones in each pile. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$. After reading the input for each test case, proceed with the interaction as follows.",
  "outputFormat": "Output specification not found",
  "sampleTests": [
    {
      "input": "2\n5\n1 2 3 4 5\n\n11\n\n6\n\n3\n\n7\n1 2 3 5 3 4 2\n\n12\n\n6",
      "output": "? 4 1 2 3 4\n\n? 2 2 3\n\n? 1 2\n\n! 2\n\n? 4 2 3 5 6\n\n? 2 1 4\n\n! 7"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1807/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}