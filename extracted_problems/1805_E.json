{
  "contestId": 1805,
  "index": "E",
  "name": "There Should Be a Lot of Maximums",
  "rating": 2300,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a tree (a connected graph without cycles). Each vertex of the tree contains an integer. Let's define the $$$\\mathrm{MAD}$$$ (maximum double) parameter of the tree as the maximum integer that occurs in the vertices of the tree at least $$$2$$$ times. If no number occurs in the tree more than once, then we assume $$$\\mathrm{MAD}=0$$$. Note that if you remove an edge from the tree, it splits into two trees. Let's compute the $$$\\mathrm{MAD}$$$ parameters of the two trees and take the maximum of the two values. Let the result be the value of the deleted edge. For each edge, find its value. Note that we don't actually delete any edges from the tree, the values are to be found independently.",
  "inputFormat": "The first line contains one integer $$$n$$$ ($$$2 \\le n \\le 10^5$$$) — the number of vertices in the tree. Each of the next $$$n - 1$$$ lines contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\le u, v \\le n$$$) — the ends of an edge of the tree. It's guaranteed that the given edges form a valid tree. The last line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$) — the numbers in the vertices.",
  "outputFormat": "For each edge in the input order, print one number — the maximum of the $$$\\mathrm{MAD}$$$ parameters of the two trees obtained after removing the given edge from the initial tree.",
  "sampleTests": [
    {
      "input": "5\n1 2\n2 3\n2 4\n1 5\n2 1 3 2 1",
      "output": "0\n2\n1\n2"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1805/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}