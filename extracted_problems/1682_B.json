{
  "contestId": 1682,
  "index": "B",
  "name": "AND Sorting",
  "rating": 1100,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a permutation $$$p$$$ of integers from $$$0$$$ to $$$n-1$$$ (each of them occurs exactly once). Initially, the permutation is not sorted (that is, $$$p_i>p_{i+1}$$$ for at least one $$$1 \\le i \\le n - 1$$$). The permutation is called $$$X$$$-sortable for some non-negative integer $$$X$$$ if it is possible to sort the permutation by performing the operation below some finite number of times: Choose two indices $$$i$$$ and $$$j$$$ $$$(1 \\le i \\lt j \\le n)$$$ such that $$$p_i \\& p_j = X$$$. Swap $$$p_i$$$ and $$$p_j$$$. Here $$$\\&$$$ denotes the bitwise AND operation . Find the maximum value of $$$X$$$ such that $$$p$$$ is $$$X$$$-sortable. It can be shown that there always exists some value of $$$X$$$ such that $$$p$$$ is $$$X$$$-sortable.",
  "inputFormat": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ $$$(1 \\le t \\le 10^4)$$$ — the number of test cases. Description of test cases follows. The first line of each test case contains a single integer $$$n$$$ $$$(2 \\le n \\le 2 \\cdot 10^5)$$$ — the length of the permutation. The second line of each test case contains $$$n$$$ integers $$$p_1, p_2, ..., p_n$$$ ($$$0 \\le p_i \\le n-1$$$, all $$$p_i$$$ are distinct) — the elements of $$$p$$$. It is guaranteed that $$$p$$$ is not sorted. It is guaranteed that the sum of $$$n$$$ over all cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case output a single integer — the maximum value of $$$X$$$ such that $$$p$$$ is $$$X$$$-sortable.",
  "sampleTests": [
    {
      "input": "4\n4\n0 1 3 2\n2\n1 0\n7\n0 1 2 3 5 6 4\n5\n0 3 2 1 4",
      "output": "2\n0\n4\n1"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1682/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}