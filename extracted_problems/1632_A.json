{
  "contestId": 1632,
  "index": "A",
  "name": "ABC",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "Recently, the students of School 179 have developed a unique algorithm, which takes in a binary string $$$s$$$ as input. However, they soon found out that if some substring $$$t$$$ of $$$s$$$ is a palindrome of length greater than 1 , the algorithm will work incorrectly. Can the students somehow reorder the characters of $$$s$$$ so that the algorithm will work correctly on the string? A binary string is a string where each character is either 0 or 1 . A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end. A palindrome is a string that reads the same backwards as forwards.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 100$$$). Description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 100$$$) â€” the length of the string $$$s$$$. The second line of each test case contains the string $$$s$$$ of length $$$n$$$ consisting only of the characters 0 and 1 .",
  "outputFormat": "For each test case, print YES (case-insensitive) if it is possible to reorder the characters of $$$s$$$ so that there are no substrings that are a palindrome of length greater than 1 , or NO (case-insensitive) otherwise.",
  "sampleTests": [
    {
      "input": "4\n1\n1\n2\n10\n2\n01\n4\n1010",
      "output": "YES\nYES\nYES\nNO"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1632/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}