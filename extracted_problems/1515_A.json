{
  "contestId": 1515,
  "index": "A",
  "name": "Phoenix and Gold",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "Phoenix has collected $$$n$$$ pieces of gold, and he wants to weigh them together so he can feel rich. The $$$i$$$-th piece of gold has weight $$$w_i$$$. All weights are distinct . He will put his $$$n$$$ pieces of gold on a weight scale, one piece at a time. The scale has an unusual defect: if the total weight on it is exactly $$$x$$$, it will explode. Can he put all $$$n$$$ gold pieces onto the scale in some order, without the scale exploding during the process? If so, help him find some possible order. Formally, rearrange the array $$$w$$$ so that for each $$$i$$$ $$$(1 \\le i \\le n)$$$, $$$\\sum\\limits_{j = 1}^{i}w_j \\ne x$$$.",
  "inputFormat": "The input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. The first line of each test case contains two integers $$$n$$$ and $$$x$$$ ($$$1 \\le n \\le 100$$$; $$$1 \\le x \\le 10^4$$$) — the number of gold pieces that Phoenix has and the weight to avoid, respectively. The second line of each test case contains $$$n$$$ space-separated integers $$$(1 \\le w_i \\le 100)$$$ — the weights of the gold pieces. It is guaranteed that the weights are pairwise distinct .",
  "outputFormat": "For each test case, if Phoenix cannot place all $$$n$$$ pieces without the scale exploding, print NO . Otherwise, print YES followed by the rearranged array $$$w$$$. If there are multiple solutions, print any.",
  "sampleTests": [
    {
      "input": "3\n3 2\n3 2 1\n5 3\n1 2 3 4 8\n1 5\n5",
      "output": "YES\n3 2 1\nYES\n8 1 2 3 4\nNO"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1515/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}