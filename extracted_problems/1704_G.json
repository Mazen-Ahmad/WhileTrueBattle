{
  "contestId": 1704,
  "index": "G",
  "name": "Mio and Lucky Array",
  "rating": 3500,
  "tags": [
    "implementation"
  ],
  "statement": "Mio has an array $$$a$$$ consisting of $$$n$$$ integers, and an array $$$b$$$ consisting of $$$m$$$ integers. Mio can do the following operation to $$$a$$$: Choose an integer $$$i$$$ ($$$1 \\leq i \\leq n$$$) that has not been chosen before, then add $$$1$$$ to $$$a_i$$$, subtract $$$2$$$ from $$$a_{i+1}$$$, add $$$3$$$ to $$$a_{i+2}$$$ an so on. Formally, the operation is to add $$$(-1)^{j-i} \\cdot (j-i+1) $$$ to $$$a_j$$$ for $$$i \\leq j \\leq n$$$. Mio wants to transform $$$a$$$ so that it will contain $$$b$$$ as a subarray . Could you answer her question, and provide a sequence of operations to do so, if it is possible? An array $$$b$$$ is a subarray of an array $$$a$$$ if $$$b$$$ can be obtained from $$$a$$$ by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.",
  "inputFormat": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$) — the number of test cases. The description of test cases follows. The first line of each test case contains one integer $$$n$$$ ($$$2 \\leq n \\leq 2 \\cdot 10^5$$$) — the number of elements in $$$a$$$. The second line of the test case contains $$$n$$$ integers $$$a_1, a_2, \\cdots, a_n$$$ ($$$-10^5 \\leq a_i \\leq 10^5$$$), where $$$a_i$$$ is the $$$i$$$-th element of $$$a$$$. The third line of the test case contains one integer $$$m$$$ ($$$2 \\leq m \\leq n$$$) — the number of elements in $$$b$$$. The fourth line of the test case contains $$$m$$$ integers $$$b_1, b_2, \\cdots, b_m$$$ ($$$-10^{12} \\leq b_i \\leq 10^{12}$$$), where $$$b_i$$$ is the $$$i$$$-th element of $$$b$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "If it is impossible to transform $$$a$$$ so that it contains $$$b$$$ as a subarray, output $$$-1$$$. Otherwise, the first line of output should contain an integer $$$k$$$ ($$$0 \\leq k \\leq n$$$), the number of operations to be done. The second line should contain $$$k$$$ distinct integers, representing the operations done in order. If there are multiple solutions, you can output any. Notice that you do not need to minimize the number of operations.",
  "sampleTests": [
    {
      "input": "5\n5\n1 2 3 4 5\n5\n2 0 6 0 10\n5\n1 2 3 4 5\n3\n3 5 3\n8\n-3 2 -3 -4 4 0 1 -2\n4\n10 -6 7 -7\n5\n1 2 3 4 5\n4\n1 10 1 1\n5\n0 0 0 0 0\n2\n10 12",
      "output": "1\n1 \n1\n4 \n5\n1 3 4 6 8 \n-1\n-1"
    }
  ],
  "timeLimit": 5000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1704/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}