{
  "contestId": 1791,
  "index": "G2",
  "name": "Teleporters (Hard Version)",
  "rating": 1900,
  "tags": [
    "implementation"
  ],
  "statement": "The only difference between the easy and hard versions are the locations you can teleport to. Consider the points $$$0,1,\\dots,n+1$$$ on the number line. There is a teleporter located on each of the points $$$1,2,\\dots,n$$$. At point $$$i$$$, you can do the following: Move left one unit: it costs $$$1$$$ coin. Move right one unit: it costs $$$1$$$ coin. Use a teleporter at point $$$i$$$, if it exists: it costs $$$a_i$$$ coins. As a result, you can choose whether to teleport to point $$$0$$$ or point $$$n+1$$$. Once you use a teleporter, you can't use it again. You have $$$c$$$ coins, and you start at point $$$0$$$. What's the most number of teleporters you can use?",
  "inputFormat": "The input consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. The descriptions of the test cases follow. The first line of each test case contains two integers $$$n$$$ and $$$c$$$ ($$$1 \\leq n \\leq 2\\cdot10^5$$$; $$$1 \\leq c \\leq 10^9$$$) — the length of the array and the number of coins you have respectively. The following line contains $$$n$$$ space-separated positive integers $$$a_1,a_2,\\dots,a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) — the costs to use the teleporters. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2\\cdot10^5$$$.",
  "outputFormat": "For each test case, output the maximum number of teleporters you can use.",
  "sampleTests": [
    {
      "input": "10\n5 6\n1 1 1 1 1\n8 32\n100 52 13 6 9 4 100 35\n1 1\n5\n4 5\n4 3 2 1\n5 9\n2 3 1 4 1\n5 8\n2 3 1 4 1\n4 3\n2 3 4 1\n4 9\n5 4 3 3\n2 14\n7 5\n5 600000000\n500000000 400000000 300000000 200000000 100000000",
      "output": "2\n3\n0\n1\n3\n2\n1\n1\n2\n2"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1791/G2",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}