{
  "contestId": 1991,
  "index": "D",
  "name": "Prime XOR Coloring",
  "rating": 1900,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an undirected graph with $$$n$$$ vertices, numbered from $$$1$$$ to $$$n$$$. There is an edge between vertices $$$u$$$ and $$$v$$$ if and only if $$$u \\oplus v$$$ is a prime number , where $$$\\oplus$$$ denotes the bitwise XOR operator . Color all vertices of the graph using the minimum number of colors, such that no two vertices directly connected by an edge have the same color.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 500$$$). The description of test cases follows. The only line contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) — the number of vertices in the graph. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output two lines. The first line should contain a single integer $$$k$$$ ($$$1 \\le k \\le n$$$) — the minimum number of colors required. The second line should contain $$$n$$$ integers $$$c_1, c_2, \\ldots, c_n$$$ ($$$1 \\le c_i \\le k$$$) — the color of each vertex. If there are multiple solutions, output any of them.",
  "sampleTests": [
    {
      "input": "6\n1\n2\n3\n4\n5\n6",
      "output": "1\n1\n2\n1 2\n2\n1 2 2\n3\n1 2 2 3\n3\n1 2 2 3 3\n4\n1 2 2 3 3 4"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1991/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}