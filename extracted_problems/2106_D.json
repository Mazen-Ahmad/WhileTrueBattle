{
  "contestId": 2106,
  "index": "D",
  "name": "Flower Boy",
  "rating": 1500,
  "tags": [
    "implementation"
  ],
  "statement": "Flower boy has a garden of $$$n$$$ flowers that can be represented as an integer sequence $$$a_1, a_2, \\dots, a_n$$$, where $$$a_i$$$ is the beauty of the $$$i$$$-th flower from the left. Igor wants to collect exactly $$$m$$$ flowers. To do so, he will walk the garden from left to right and choose whether to collect the flower at his current position. The $$$i$$$-th flower among ones he collects must have a beauty of at least $$$b_i$$$. Igor noticed that it might be impossible to collect $$$m$$$ flowers that satisfy his beauty requirements, so before he starts collecting flowers, he can pick any integer $$$k$$$ and use his magic wand to grow a new flower with beauty $$$k$$$ and place it anywhere in the garden (between two flowers, before the first flower, or after the last flower). Because his magic abilities are limited, he may do this at most once . Output the minimum integer $$$k$$$ Igor must pick when he performs the aforementioned operation to ensure that he can collect $$$m$$$ flowers. If he can collect $$$m$$$ flowers without using the operation, output $$$0$$$. If it is impossible to collect $$$m$$$ flowers despite using the operation, output $$$-1$$$.",
  "inputFormat": "The first line of the input contains a single integer $$$t$$$ $$$(1 \\le t \\le 10^4)$$$ — the number of test cases. The first line of each test case contains exactly two integers $$$n$$$ and $$$m$$$ $$$(1 \\le m \\le n \\le 2 \\cdot 10^5)$$$ — the number of flowers in the garden and the number of flowers Igor wants to collect, respectively. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, ..., a_n$$$ $$$(1 \\le a_i \\le 10^9)$$$ — where $$$a_i$$$ is the beauty of the $$$i$$$-th flower from the left in the garden. The third line of each test case contains $$$m$$$ integers $$$b_1, b_2, ..., b_m$$$ $$$(1 \\le b_i \\le 10^9)$$$ — where $$$b_i$$$ is the minimum beauty the $$$i$$$-th flower must have that Igor will collect. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, on a separate line, output the minimum integer $$$k$$$ Igor must pick when he performs the aforementioned operation to ensure that he can collect $$$m$$$ flowers. If he can collect $$$m$$$ flowers without using the operation, output $$$0$$$. If it is impossible to collect $$$m$$$ flowers despite using the operation, output $$$-1$$$.",
  "sampleTests": [
    {
      "input": "7\n9 5\n3 5 2 3 3 5 8 1 2\n4 6 2 4 6\n6 3\n1 2 6 8 2 1\n5 4 3\n5 3\n4 3 5 4 3\n7 4 5\n6 3\n8 4 2 1 2 5\n6 1 4\n5 5\n1 2 3 4 5\n5 4 3 2 1\n6 3\n1 2 3 4 5 6\n9 8 7\n5 5\n7 7 6 7 7\n7 7 7 7 7",
      "output": "6\n3\n7\n0\n-1\n-1\n7"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2106/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}