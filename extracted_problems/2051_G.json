{
  "contestId": 2051,
  "index": "G",
  "name": "Snakes",
  "rating": 2100,
  "tags": [
    "implementation"
  ],
  "statement": "Suppose you play a game where the game field looks like a strip of $$$1 \\times 10^9$$$ square cells, numbered from $$$1$$$ to $$$10^9$$$. You have $$$n$$$ snakes (numbered from $$$1$$$ to $$$n$$$) you need to place into some cells. Initially, each snake occupies exactly one cell, and you can't place more than one snake into one cell. After that, the game starts. The game lasts for $$$q$$$ seconds. There are two types of events that may happen each second: snake $$$s_i$$$ enlarges : if snake $$$s_i$$$ occupied cells $$$[l, r]$$$, it enlarges to a segment $$$[l, r + 1]$$$; snake $$$s_i$$$ shrinks : if snake $$$s_i$$$ occupied cells $$$[l, r]$$$, it shrinks to a segment $$$[l + 1, r]$$$. Each second, exactly one of the events happens. If at any moment of time, any snake runs into some obstacle (either another snake or the end of the strip), you lose. Otherwise, you win with the score equal to the maximum cell occupied by any snake so far. What is the minimum possible score you can achieve?",
  "inputFormat": "The first line contains two integers $$$n$$$ and $$$q$$$ ($$$1 \\le n \\le 20$$$; $$$1 \\le q \\le 2 \\cdot 10^5$$$) — the number of snakes and the number of events. Next $$$q$$$ lines contain the description of events — one per line. The $$$i$$$-th line contains either \"$$$s_i$$$ + \" ($$$1 \\le s_i \\le n$$$) meaning that the $$$s_i$$$-th snake enlarges or \"$$$s_i$$$ - \" ($$$1 \\le s_i \\le n$$$) meaning that the $$$s_i$$$-th snake shrinks. Additional constraint on the input: the given sequence of events is valid, i. e. a snake of length $$$1$$$ never shrinks.",
  "outputFormat": "Print one integer — the minimum possible score.",
  "sampleTests": [
    {
      "input": "3 6\n1 +\n1 -\n3 +\n3 -\n2 +\n2 -",
      "output": "4"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/2051/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}