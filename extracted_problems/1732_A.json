{
  "contestId": 1732,
  "index": "A",
  "name": "Bestie",
  "rating": 1000,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an array $$$a$$$ consisting of $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$. Friends asked you to make the greatest common divisor (GCD) of all numbers in the array equal to $$$1$$$. In one operation, you can do the following: Select an arbitrary index in the array $$$1 \\leq i \\leq n$$$; Make $$$a_i = \\gcd(a_i, i)$$$, where $$$\\gcd(x, y)$$$ denotes the GCD of integers $$$x$$$ and $$$y$$$. The cost of such an operation is $$$n - i + 1$$$. You need to find the minimum total cost of operations we need to perform so that the GCD of the all array numbers becomes equal to $$$1$$$.",
  "inputFormat": "Each test consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 5\\,000$$$) — the number of test cases. The description of test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 20$$$) — the length of the array. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) — the elements of the array.",
  "outputFormat": "For each test case, output a single integer — the minimum total cost of operations that will need to be performed so that the GCD of all numbers in the array becomes equal to $$$1$$$. We can show that it's always possible to do so.",
  "sampleTests": [
    {
      "input": "9\n1\n1\n1\n2\n2\n2 4\n3\n3 6 9\n4\n5 10 15 20\n5\n120 60 80 40 80\n6\n150 90 180 120 60 30\n6\n2 4 6 9 12 18\n6\n30 60 90 120 125 125",
      "output": "0\n1\n2\n2\n1\n3\n3\n0\n1"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1732/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}