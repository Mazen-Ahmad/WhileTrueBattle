{
  "contestId": 1970,
  "index": "D2",
  "name": "Arithmancy (Medium)",
  "rating": 2600,
  "tags": [
    "implementation"
  ],
  "statement": "The only difference between the versions of this problem is the maximum value of $$$n$$$. Professor Vector is preparing to teach her Arithmancy class. She needs to prepare $$$n$$$ distinct magic words for the class. Each magic word is a string consisting of characters X and O . A spell is a string created by concatenating two magic words together. The power of a spell is equal to the number of its different non-empty substrings. For example, the power of the spell XOXO is equal to 7, because it has 7 different substrings: X , O , XO , OX , XOX , OXO and XOXO . Each student will create their own spell by concatenating two magic words. Since the students are not very good at magic yet, they will choose each of the two words independently and uniformly at random from the $$$n$$$ words provided by Professor Vector. It is therefore also possible that the two words a student chooses are the same. Each student will then compute the power of their spell, and tell it to Professor Vector. In order to check their work, and of course to impress the students, Professor Vector needs to find out which two magic words and in which order were concatenated by each student. Your program needs to perform the role of Professor Vector: first, create $$$n$$$ distinct magic words, and then handle multiple requests where it is given the spell power and needs to determine the indices of the two magic words, in the correct order, that were used to create the corresponding spell.",
  "inputFormat": "Input specification not found",
  "outputFormat": "Output specification not found",
  "sampleTests": [
    {
      "input": "2\n\n\n2\n15\n\n11",
      "output": "XOXO\nX\n\n\n1 1\n\n2 1"
    }
  ],
  "timeLimit": 5000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1970/D2",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}