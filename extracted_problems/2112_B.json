{
  "contestId": 2112,
  "index": "B",
  "name": "Shrinking Array",
  "rating": 1100,
  "tags": [
    "implementation"
  ],
  "statement": "Let's call an array $$$b$$$ beautiful if it consists of at least two elements and there exists a position $$$i$$$ such that $$$|b_i - b_{i + 1}| \\le 1$$$ (where $$$|x|$$$ is the absolute value of $$$x$$$). You are given an array $$$a$$$, and as long as it consists of at least two elements, you can perform the following operation: Choose two adjacent positions $$$i$$$ and $$$i + 1$$$ in the array $$$a$$$. Choose an integer $$$x$$$ such that $$$\\min(a_i, a_{i + 1}) \\le x \\le \\max(a_i, a_{i + 1})$$$. Remove the numbers $$$a_i$$$ and $$$a_{i + 1}$$$ from the array, and insert the number $$$x$$$ in their place. Obviously, the size of the array will decrease by $$$1$$$. Calculate the minimum number of operations required to make the array beautiful, or report that it is impossible.",
  "inputFormat": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 200$$$) — the number of test cases. The first line of each test case contains one integer $$$n$$$ ($$$2 \\le n \\le 1000$$$) — the size of the array $$$a$$$. The second line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le 10^6$$$) — the array $$$a$$$ itself.",
  "outputFormat": "For each test case, output one integer — the minimum number of operations needed to make the array $$$a$$$ beautiful, or $$$-1$$$ if it is impossible to make it beautiful.",
  "sampleTests": [
    {
      "input": "4\n4\n1 3 3 7\n2\n6 9\n4\n3 1 3 7\n4\n1 3 5 2",
      "output": "0\n-1\n1\n1"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2112/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}