{
  "contestId": 2020,
  "index": "C",
  "name": "Bitwise Balancing",
  "rating": 1400,
  "tags": [
    "implementation"
  ],
  "statement": "You are given three non-negative integers $$$b$$$, $$$c$$$, and $$$d$$$. Please find a non-negative integer $$$a \\in [0, 2^{61}]$$$ such that $$$(a\\, |\\, b)-(a\\, \\&\\, c)=d$$$, where $$$|$$$ and $$$\\&$$$ denote the bitwise OR operation and the bitwise AND operation , respectively. If such an $$$a$$$ exists, print its value. If there is no solution, print a single integer $$$-1$$$. If there are multiple solutions, print any of them.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^5$$$). The description of the test cases follows. The only line of each test case contains three positive integers $$$b$$$, $$$c$$$, and $$$d$$$ ($$$0 \\le b, c, d \\le 10^{18}$$$).",
  "outputFormat": "For each test case, output the value of $$$a$$$, or $$$-1$$$ if there is no solution. Please note that $$$a$$$ must be non-negative and cannot exceed $$$2^{61}$$$.",
  "sampleTests": [
    {
      "input": "3\n2 2 2\n4 2 6\n10 2 14",
      "output": "0\n-1\n12"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2020/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}