{
  "contestId": 1882,
  "index": "B",
  "name": "Sets and Union",
  "rating": 1300,
  "tags": [
    "implementation"
  ],
  "statement": "You have $$$n$$$ sets of integers $$$S_{1}, S_{2}, \\ldots, S_{n}$$$. We call a set $$$S$$$ attainable , if it is possible to choose some (possibly, none) of the sets $$$S_{1}, S_{2}, \\ldots, S_{n}$$$ so that $$$S$$$ is equal to their union$$$^{\\dagger}$$$. If you choose none of $$$S_{1}, S_{2}, \\ldots, S_{n}$$$, their union is an empty set. Find the maximum number of elements in an attainable $$$S$$$ such that $$$S \\neq S_{1} \\cup S_{2} \\cup \\ldots \\cup S_{n}$$$. $$$^{\\dagger}$$$ The union of sets $$$A_1, A_2, \\ldots, A_k$$$ is defined as the set of elements present in at least one of these sets. It is denoted by $$$A_1 \\cup A_2 \\cup \\ldots \\cup A_k$$$. For example, $$$\\{2, 4, 6\\} \\cup \\{2, 3\\} \\cup \\{3, 6, 7\\} = \\{2, 3, 4, 6, 7\\}$$$.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 100$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 50$$$). The following $$$n$$$ lines describe the sets $$$S_1, S_2, \\ldots, S_n$$$. The $$$i$$$-th of these lines contains an integer $$$k_{i}$$$ ($$$1 \\le k_{i} \\le 50$$$) — the number of elements in $$$S_{i}$$$, followed by $$$k_{i}$$$ integers $$$s_{i, 1}, s_{i, 2}, \\ldots, s_{i, k_{i}}$$$ ($$$1 \\le s_{i, 1} < s_{i, 2} < \\ldots < s_{i, k_{i}} \\le 50$$$) — the elements of $$$S_{i}$$$.",
  "outputFormat": "For each test case, print a single integer — the maximum number of elements in an attainable $$$S$$$ such that $$$S \\neq S_{1} \\cup S_{2} \\cup \\ldots \\cup S_{n}$$$.",
  "sampleTests": [
    {
      "input": "4\n3\n3 1 2 3\n2 4 5\n2 3 4\n4\n4 1 2 3 4\n3 2 5 6\n3 3 5 6\n3 4 5 6\n5\n1 1\n3 3 6 10\n1 9\n2 1 3\n3 5 8 9\n1\n2 4 28",
      "output": "4\n5\n6\n0"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1882/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}