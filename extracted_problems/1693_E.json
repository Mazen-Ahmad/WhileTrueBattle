{
  "contestId": 1693,
  "index": "E",
  "name": "Outermost Maximums",
  "rating": 3400,
  "tags": [
    "implementation"
  ],
  "statement": "Yeri has an array of $$$n + 2$$$ non-negative integers : $$$a_0, a_1, ..., a_n, a_{n + 1}$$$. We know that $$$a_0 = a_{n + 1} = 0$$$. She wants to make all the elements of $$$a$$$ equal to zero in the minimum number of operations. In one operation she can do one of the following: Choose the leftmost maximum element and change it to the maximum of the elements on its left. Choose the rightmost maximum element and change it to the maximum of the elements on its right. Help her find the minimum number of operations needed to make all elements of $$$a$$$ equal to zero.",
  "inputFormat": "The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$). The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\le a_i \\le n$$$).",
  "outputFormat": "Print a single integer â€” the minimum number of operations needed to make all elements of $$$a$$$ equal to zero.",
  "sampleTests": [
    {
      "input": "6\n1 4 2 4 0 2",
      "output": "7"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1693/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}