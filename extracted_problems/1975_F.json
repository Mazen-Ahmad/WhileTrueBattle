{
  "contestId": 1975,
  "index": "F",
  "name": "Set",
  "rating": 2600,
  "tags": [
    "implementation"
  ],
  "statement": "Define the binary encoding of a finite set of natural numbers $$$T \\subseteq \\{0,1,2,\\ldots\\}$$$ as $$$f(T) = \\sum\\limits_{i \\in T} 2^i$$$. For example, $$$f(\\{0,2\\}) = 2^0 + 2^2 = 5$$$ and $$$f(\\{\\}) = 0$$$. Notice that $$$f$$$ is a bijection from all such sets to all non-negative integers. As such, $$$f^{-1}$$$ is also defined. You are given an integer $$$n$$$ along with $$$2^n-1$$$ sets $$$V_1,V_2,\\ldots,V_{2^n-1}$$$. Find all sets $$$S$$$ that satisfy the following constraint: $$$S \\subseteq \\{0,1,\\ldots,n-1\\}$$$. Note that $$$S$$$ can be empty . For all non-empty subsets $$$T \\subseteq \\{0,1,\\ldots,n-1\\}$$$, $$$|S \\cap T| \\in V_{f(T)}$$$. Due to the large input and output, both input and output will be given in terms of binary encodings of the sets.",
  "inputFormat": "The first line of input contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 20$$$). The second line of input contains $$$2^n-1$$$ integers $$$v_1,v_2,\\ldots,v_{2^n-1}$$$ ($$$0 \\leq v_i < 2^{n+1}$$$) â€” the sets $$$V_i$$$ given in their binary encoding where $$$V_i = f^{-1}(v_i)$$$.",
  "outputFormat": "The first line of output should contain an integer $$$k$$$ indicating the number of possible $$$S$$$. In the following $$$k$$$ lines, you should output $$$f(S)$$$ for all possible $$$S$$$ in increasing order .",
  "sampleTests": [
    {
      "input": "3\n15 15 15 15 15 15 12",
      "output": "4\n3\n5\n6\n7"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1975/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}