{
  "contestId": 1905,
  "index": "E",
  "name": "One-X",
  "rating": 2400,
  "tags": [
    "implementation"
  ],
  "statement": "In this sad world full of imperfections, ugly segment trees exist. A segment tree is a tree where each node represents a segment and has its number. A segment tree for an array of $$$n$$$ elements can be built in a recursive manner. Let's say function $$$\\operatorname{build}(v,l,r)$$$ builds the segment tree rooted in the node with number $$$v$$$ and it corresponds to the segment $$$[l,r]$$$. Now let's define $$$\\operatorname{build}(v,l,r)$$$: If $$$l=r$$$, this node $$$v$$$ is a leaf so we stop adding more edges Else, we add the edges $$$(v, 2v)$$$ and $$$(v, 2v+1)$$$. Let $$$m=\\lfloor \\frac{l+r}{2} \\rfloor$$$. Then we call $$$\\operatorname{build}(2v,l,m)$$$ and $$$\\operatorname{build}(2v+1,m+1,r)$$$. So, the whole tree is built by calling $$$\\operatorname{build}(1,1,n)$$$. Now Ibti will construct a segment tree for an array with $$$n$$$ elements. He wants to find the sum of $$$\\operatorname{lca}^\\dagger(S)$$$, where $$$S$$$ is a non-empty subset of leaves . Notice that there are exactly $$$2^n - 1$$$ possible subsets. Since this sum can be very large, output it modulo $$$998\\,244\\,353$$$. $$$^\\dagger\\operatorname{lca}(S)$$$ is the number of the least common ancestor for the nodes that are in $$$S$$$.",
  "inputFormat": "Each test consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^3$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 10^{18}$$$) — the length of the array for which the segment tree is built.",
  "outputFormat": "For each test case, output a single integer — the required sum modulo $$$998\\,244\\,353$$$.",
  "sampleTests": [
    {
      "input": "5\n2\n3\n4\n5\n53278",
      "output": "6\n17\n36\n69\n593324855"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1905/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}