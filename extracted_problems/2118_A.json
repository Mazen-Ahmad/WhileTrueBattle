{
  "contestId": 2118,
  "index": "A",
  "name": "Equal Subsequences",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "We call a bitstring$$$^{\\text{∗}}$$$ perfect if it has the same number of $$$\\mathtt{101}$$$ and $$$\\mathtt{010}$$$ subsequences$$$^{\\text{†}}$$$. Construct a perfect bitstring of length $$$n$$$ where the number of $$$\\mathtt{1}$$$ characters it contains is exactly $$$k$$$. It can be proven that the construction is always possible. If there are multiple solutions, output any of them. $$$^{\\text{∗}}$$$A bitstring is a string consisting only of the characters $$$\\mathtt{0}$$$ and $$$\\mathtt{1}$$$. $$$^{\\text{†}}$$$A sequence $$$a$$$ is a subsequence of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by the deletion of several (possibly zero or all) characters.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 500$$$). The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n \\le 100$$$, $$$0 \\le k \\le n$$$) — the size of the bitstring and the number of $$$\\mathtt{1}$$$ characters in the bitstring.",
  "outputFormat": "For each test case, output the constructed bitstring. If there are multiple solutions, output any of them.",
  "sampleTests": [
    {
      "input": "5\n4 2\n5 3\n5 5\n6 2\n1 1",
      "output": "1010\n10110\n11111\n100010\n1"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2118/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}