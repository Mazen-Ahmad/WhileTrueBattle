{
  "contestId": 1592,
  "index": "E",
  "name": "Bored Bakry",
  "rating": 2400,
  "tags": [
    "implementation"
  ],
  "statement": "Bakry got bored of solving problems related to xor, so he asked you to solve this problem for him. You are given an array $$$a$$$ of $$$n$$$ integers $$$[a_1, a_2, \\ldots, a_n]$$$. Let's call a subarray $$$a_{l}, a_{l+1}, a_{l+2}, \\ldots, a_r$$$ good if $$$a_l \\, \\& \\, a_{l+1} \\, \\& \\, a_{l+2} \\, \\ldots \\, \\& \\, a_r > a_l \\oplus a_{l+1} \\oplus a_{l+2} \\ldots \\oplus a_r$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation and $$$\\&$$$ denotes the bitwise AND operation . Find the length of the longest good subarray of $$$a$$$, or determine that no such subarray exists.",
  "inputFormat": "The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^6$$$) — the length of the array. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^6$$$) — elements of the array.",
  "outputFormat": "Print a single integer — the length of the longest good subarray. If there are no good subarrays, print $$$0$$$.",
  "sampleTests": [
    {
      "input": "2\n5 6",
      "output": "2"
    }
  ],
  "timeLimit": 4000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1592/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}