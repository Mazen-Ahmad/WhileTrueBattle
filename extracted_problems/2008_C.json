{
  "contestId": 2008,
  "index": "C",
  "name": "Longest Good Array",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "Today, Sakurako was studying arrays. An array $$$a$$$ of length $$$n$$$ is considered good if and only if: the array $$$a$$$ is increasing, meaning $$$a_{i - 1} < a_i$$$ for all $$$2 \\le i \\le n$$$; the differences between adjacent elements are increasing, meaning $$$a_i - a_{i-1} < a_{i+1} - a_i$$$ for all $$$2 \\le i < n$$$. Sakurako has come up with boundaries $$$l$$$ and $$$r$$$ and wants to construct a good array of maximum length, where $$$l \\le a_i \\le r$$$ for all $$$a_i$$$. Help Sakurako find the maximum length of a good array for the given $$$l$$$ and $$$r$$$.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1\\le t\\le 10^4$$$) — the number of test cases. The only line of each test case contains two integers $$$l$$$ and $$$r$$$ ($$$1\\le l\\le r\\le 10^9$$$).",
  "outputFormat": "For each test case, output a single integer — the length of the longest good array Sakurako can form given $$$l$$$ and $$$r$$$.",
  "sampleTests": [
    {
      "input": "5\n1 2\n1 5\n2 2\n10 20\n1 1000000000",
      "output": "2\n3\n1\n5\n44721"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2008/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}