{
  "contestId": 2125,
  "index": "C",
  "name": "Count Good Numbers",
  "rating": 1100,
  "tags": [
    "implementation"
  ],
  "statement": "A prime number is a positive integer that has exactly two divisors: $$$1$$$ and itself. The first several prime numbers are $$$2, 3, 5, 7, 11, \\dots$$$. Prime factorization of a positive integer is representing it as a product of prime numbers. For example: the prime factorization of $$$111$$$ is $$$3 \\cdot 37$$$; the prime factorization of $$$43$$$ is $$$43$$$; the prime factorization of $$$12$$$ is $$$2 \\cdot 2 \\cdot 3$$$. For every positive integer, its prime factorization is unique (if you don't consider the order of primes in the product). We call a positive integer good if all primes in its factorization consist of at least two digits. For example: $$$343 = 7 \\cdot 7 \\cdot 7$$$ is not good; $$$111 = 3 \\cdot 37$$$ is not good; $$$1111 = 11 \\cdot 101$$$ is good; $$$43 = 43$$$ is good. You have to calculate the number of good integers from $$$l$$$ to $$$r$$$ (endpoints included).",
  "inputFormat": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 10^3$$$) — the number of test cases. Each test case consists of one line containing two integers $$$l$$$ and $$$r$$$ ($$$2 \\le l \\le r \\le 10^{18}$$$).",
  "outputFormat": "For each test case, print one integer — the number of good integers from $$$l$$$ to $$$r$$$.",
  "sampleTests": [
    {
      "input": "4\n2 100\n2 1000\n13 37\n2 1000000000000000000",
      "output": "21\n227\n7\n228571428571428570"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/2125/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}