{
  "contestId": 1805,
  "index": "A",
  "name": "We Need the Zero",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "There is an array $$$a$$$ consisting of non-negative integers. You can choose an integer $$$x$$$ and denote $$$b_i=a_i \\oplus x$$$ for all $$$1 \\le i \\le n$$$, where $$$\\oplus$$$ denotes the bitwise XOR operation . Is it possible to choose such a number $$$x$$$ that the value of the expression $$$b_1 \\oplus b_2 \\oplus \\ldots \\oplus b_n$$$ equals $$$0$$$? It can be shown that if a valid number $$$x$$$ exists, then there also exists $$$x$$$ such that ($$$0 \\le x < 2^8$$$).",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 1000$$$). The description of the test cases follows. The first line of the test case contains one integer $$$n$$$ ($$$1 \\le n \\le 10^3$$$) — the length of the array $$$a$$$. The second line of the test case contains $$$n$$$ integers — array $$$a$$$ ($$$0 \\le a_i < 2^8$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^3$$$.",
  "outputFormat": "For each set test case, print the integer $$$x$$$ ($$$0 \\le x < 2^8$$$) if it exists, or $$$-1$$$ otherwise.",
  "sampleTests": [
    {
      "input": "5\n3\n1 2 5\n3\n1 2 3\n4\n0 1 2 3\n4\n1 2 2 3\n1\n1",
      "output": "6\n0\n3\n-1\n1"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1805/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}