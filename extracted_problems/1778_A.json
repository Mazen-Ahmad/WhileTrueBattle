{
  "contestId": 1778,
  "index": "A",
  "name": "Flip Flop Sum",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an array of $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$. The integers are either $$$1$$$ or $$$-1$$$. You have to perform the following operation exactly once on the array $$$a$$$: Choose an index $$$i$$$ ($$$1 \\leq i < n$$$) and flip the signs of $$$a_i$$$ and $$$a_{i+1}$$$. Here, flipping the sign means $$$-1$$$ will be $$$1$$$ and $$$1$$$ will be $$$-1$$$. What is the maximum possible value of $$$a_1 + a_2 + \\ldots + a_n$$$ after applying the above operation?",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 500$$$). Description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 10^5$$$), the length of the array $$$a$$$. The next line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$a_i = 1$$$ or $$$a_i = -1$$$). The sum of $$$n$$$ over all cases doesn't exceed $$$10^5$$$.",
  "outputFormat": "For each test case, print the maximum possible sum of the array $$$a$$$ you can get in a separate line.",
  "sampleTests": [
    {
      "input": "4\n5\n-1 1 1 -1 -1\n5\n1 1 -1 -1 -1\n2\n1 1\n4\n1 -1 -1 1",
      "output": "3\n3\n-2\n4"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1778/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}