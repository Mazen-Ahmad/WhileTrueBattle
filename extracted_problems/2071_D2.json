{
  "contestId": 2071,
  "index": "D2",
  "name": "Infinite Sequence (Hard Version)",
  "rating": 2500,
  "tags": [
    "implementation"
  ],
  "statement": "This is the hard version of the problem. The difference between the versions is that in this version, $$$l\\le r$$$. You can hack only if you solved all versions of this problem. You are given a positive integer $$$n$$$ and the first $$$n$$$ terms of an infinite binary sequence $$$a$$$, which is defined as follows: For $$$m>n$$$, $$$a_m = a_1 \\oplus a_2 \\oplus \\ldots \\oplus a_{\\lfloor \\frac{m}{2} \\rfloor}$$$$$$^{\\text{∗}}$$$. Your task is to compute the sum of elements in a given range $$$[l, r]$$$: $$$a_l + a_{l + 1} + \\ldots + a_r$$$. $$$^{\\text{∗}}$$$$$$\\oplus$$$ denotes the bitwise XOR operation .",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. The first line of each test case contains three integers $$$n$$$, $$$l$$$, and $$$r$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$, $$$1 \\le l \\leq r \\le 10^{18}$$$). The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$\\color{red}{a_i \\in \\{0, 1\\}}$$$) — the first $$$n$$$ terms of the sequence $$$a$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output a single integer — the sum of elements in the given range.",
  "sampleTests": [
    {
      "input": "9\n1 1 1\n1\n2 3 10\n1 0\n3 5 25\n1 1 1\n1 234 567\n0\n5 1111 10000000000\n1 0 1 0 1\n1 1000000000000000000 1000000000000000000\n1\n10 41 87\n0 1 1 1 1 1 1 1 0 0\n12 65 69\n1 0 0 0 0 1 0 1 0 1 1 0\n13 46 54\n0 1 0 1 1 1 1 1 1 0 1 1 1",
      "output": "1\n5\n14\n0\n6666665925\n0\n32\n3\n2"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2071/D2",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}