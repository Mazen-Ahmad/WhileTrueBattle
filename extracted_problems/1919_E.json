{
  "contestId": 1919,
  "index": "E",
  "name": "Counting Prefixes",
  "rating": 2600,
  "tags": [
    "implementation"
  ],
  "statement": "There is a hidden array $$$a$$$ of size $$$n$$$ consisting of only $$$1$$$ and $$$-1$$$. Let $$$p$$$ be the prefix sums of array $$$a$$$. More formally, $$$p$$$ is an array of length $$$n$$$ defined as $$$p_i = a_1 + a_2 + \\ldots + a_i$$$. Afterwards, array $$$p$$$ is sorted in non-decreasing order. For example, if $$$a = [1, -1, -1, 1, 1]$$$, then $$$p = [1, 0, -1, 0, 1]$$$ before sorting and $$$p = [-1, 0, 0, 1, 1]$$$ after sorting. You are given the prefix sum array $$$p$$$ after sorting, but you do not know what array $$$a$$$ is. Your task is to count the number of initial arrays $$$a$$$ such that the above process results in the given sorted prefix sum array $$$p$$$. As this number can be large, you are only required to find it modulo $$$998\\,244\\,353$$$.",
  "inputFormat": "Each test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 1000$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 5000$$$) — the size of the hidden array $$$a$$$. The second line of each test case contains $$$n$$$ integers $$$p_1, p_2, \\ldots, p_n$$$ ($$$|p_i| \\le n$$$) — the $$$n$$$ prefix sums of $$$a$$$ sorted in non-decreasing order. It is guaranteed that $$$p_1 \\le p_2 \\le \\ldots \\le p_n$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5000$$$.",
  "outputFormat": "For each test case, output the answer modulo $$$998\\,244\\,353$$$.",
  "sampleTests": [
    {
      "input": "5\n1\n0\n1\n1\n3\n-1 1 2\n5\n-1 0 0 1 1\n5\n-4 -3 -3 -2 -1",
      "output": "0\n1\n0\n3\n1"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1919/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}