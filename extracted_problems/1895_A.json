{
  "contestId": 1895,
  "index": "A",
  "name": "Treasure Chest",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "Monocarp has found a treasure map. The map represents the treasure location as an OX axis. Monocarp is at $$$0$$$, the treasure chest is at $$$x$$$, the key to the chest is at $$$y$$$. Obviously, Monocarp wants to open the chest. He can perform the following actions: go $$$1$$$ to the left or $$$1$$$ to the right (spending $$$1$$$ second); pick the key or the chest up if he is in the same point as that object (spending $$$0$$$ seconds); put the chest down in his current point (spending $$$0$$$ seconds); open the chest if he's in the same point as the chest and has picked the key up (spending $$$0$$$ seconds). Monocarp can carry the chest, but the chest is pretty heavy. He knows that he can carry it for at most $$$k$$$ seconds in total (putting it down and picking it back up doesn't reset his stamina). What's the smallest time required for Monocarp to open the chest?",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of testcases. The only line of each testcase contains three integers $$$x, y$$$ and $$$k$$$ ($$$1 \\le x, y \\le 100$$$; $$$x \\neq y$$$; $$$0 \\le k \\le 100$$$) — the initial point of the chest, the point where the key is located, and the maximum time Monocarp can carry the chest for.",
  "outputFormat": "For each testcase, print a single integer — the smallest time required for Monocarp to open the chest.",
  "sampleTests": [
    {
      "input": "3\n5 7 2\n10 5 0\n5 8 2",
      "output": "7\n10\n9"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1895/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}