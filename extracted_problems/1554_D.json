{
  "contestId": 1554,
  "index": "D",
  "name": "Diane",
  "rating": 1800,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an integer $$$n$$$. Find any string $$$s$$$ of length $$$n$$$ consisting only of English lowercase letters such that each non-empty substring of $$$s$$$ occurs in $$$s$$$ an odd number of times. If there are multiple such strings, output any. It can be shown that such string always exists under the given constraints. A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 500$$$) â€” the number of test cases. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$). It is guaranteed that the sum of $$$n$$$ over all test cases doesn't exceed $$$3 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print a single line containing the string $$$s$$$. If there are multiple such strings, output any. It can be shown that such string always exists under the given constraints.",
  "sampleTests": [
    {
      "input": "4\n3\n5\n9\n19",
      "output": "abc\ndiane\nbbcaabbba\nyouarethecutestuwuu"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1554/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}