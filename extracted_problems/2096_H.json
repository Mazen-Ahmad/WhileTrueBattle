{
  "contestId": 2096,
  "index": "H",
  "name": "Wonderful XOR Problem",
  "rating": 3200,
  "tags": [
    "implementation"
  ],
  "statement": "You are the proud... never mind, just solve this problem. There are $$$n$$$ intervals $$$[l_1, r_1], [l_2, r_2], \\ldots [l_n, r_n]$$$. For each $$$x$$$ from $$$0$$$ to $$$2^m - 1$$$, find the number, modulo $$$998\\,244\\,353$$$, of sequences $$$a_1, a_2, \\ldots a_n$$$ such that: $$$l_i \\leq a_i \\leq r_i$$$ for all $$$i$$$ from $$$1$$$ to $$$n$$$; $$$a_1 \\oplus a_2 \\oplus \\ldots \\oplus a_n = x$$$, where $$$\\oplus$$$ denotes the bitwise XOR operator .",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. The first line contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$, $$$1 \\leq m \\leq 18$$$). The $$$i$$$-th of the next $$$n$$$ lines contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$0 \\leq l_i \\leq r_i < 2^m$$$). It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$, and the sum of $$$2^m$$$ over all test cases does not exceed $$$2^{18}$$$.",
  "outputFormat": "For each $$$x$$$ from $$$0$$$ to $$$2^m - 1$$$, let: $$$f_x$$$ be the number of valid sequences, modulo $$$998\\,244\\,353$$$; $$$g_x = f_x \\cdot 2^x \\mod 998\\,244\\,353$$$. Here, $$$f_x$$$ and $$$g_x$$$ are both integers in the interval $$$[0, 998\\,244\\,352]$$$. Let $$$h = g_0 \\oplus g_1 \\oplus \\ldots \\oplus g_{2^m - 1}$$$. Output a single integer â€” the value of $$$h$$$ itself. Do not perform a modulo operation.",
  "sampleTests": [
    {
      "input": "4\n2 2\n0 2\n1 3\n5 3\n3 7\n1 3\n0 2\n1 5\n3 6\n10 14\n314 1592\n653 5897\n932 3846\n264 3383\n279 5028\n841 9716\n939 9375\n105 8209\n749 4459\n230 7816\n1 5\n0 29",
      "output": "22\n9812\n75032210\n1073741823"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2096/H",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}