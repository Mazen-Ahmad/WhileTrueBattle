{
  "contestId": 1744,
  "index": "D",
  "name": "Divisibility by 2^n",
  "rating": 1200,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an array of positive integers $$$a_1, a_2, \\ldots, a_n$$$. Make the product of all the numbers in the array (that is, $$$a_1 \\cdot a_2 \\cdot \\ldots \\cdot a_n$$$) divisible by $$$2^n$$$. You can perform the following operation as many times as you like: select an arbitrary index $$$i$$$ ($$$1 \\leq i \\leq n$$$) and replace the value $$$a_i$$$ with $$$a_i=a_i \\cdot i$$$. You cannot apply the operation repeatedly to a single index. In other words, all selected values of $$$i$$$ must be different. Find the smallest number of operations you need to perform to make the product of all the elements in the array divisible by $$$2^n$$$. Note that such a set of operations does not always exist.",
  "inputFormat": "The first line of the input contains a single integer $$$t$$$ $$$(1 \\leq t \\leq 10^4$$$) — the number test cases. Then the descriptions of the input data sets follow. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$) — the length of array $$$a$$$. The second line of each test case contains exactly $$$n$$$ integers: $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$). It is guaranteed that the sum of $$$n$$$ values over all test cases in a test does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print the least number of operations to make the product of all numbers in the array divisible by $$$2^n$$$. If the answer does not exist, print -1 .",
  "sampleTests": [
    {
      "input": "6\n1\n2\n2\n3 2\n3\n10 6 11\n4\n13 17 1 1\n5\n1 1 12 1 1\n6\n20 7 14 18 3 5",
      "output": "0\n1\n1\n-1\n2\n1"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1744/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}