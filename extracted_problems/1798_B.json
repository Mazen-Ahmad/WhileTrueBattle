{
  "contestId": 1798,
  "index": "B",
  "name": "Three Sevens",
  "rating": 1000,
  "tags": [
    "implementation"
  ],
  "statement": "Lottery \"Three Sevens\" was held for $$$m$$$ days. On day $$$i$$$, $$$n_i$$$ people with the numbers $$$a_{i, 1}, \\ldots, a_{i, n_i}$$$ participated in the lottery. It is known that in each of the $$$m$$$ days, only one winner was selected from the lottery participants. The lottery winner on day $$$i$$$ was not allowed to participate in the lottery in the days from $$$i+1$$$ to $$$m$$$. Unfortunately, the information about the lottery winners has been lost. You need to find any possible list of lottery winners on days from $$$1$$$ to $$$m$$$ or determine that no solution exists.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 50\\,000$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$m$$$ ($$$1 \\le m \\le 50\\,000$$$) — the number of days in which the lottery was held. Next, for each $$$i$$$ from $$$1$$$ to $$$m$$$, follows a two-line block of data. The first line of each block contains a single integer $$$n_i$$$ ($$$1 \\le n_i \\le 50\\,000$$$) — the number of lottery participants on day $$$i$$$. The second line of the block contains integers $$$a_{i, 1}, \\ldots, a_{i, n_i}$$$ ($$$1 \\le a_{i, j} \\le 50\\,000$$$) — lottery participants on day $$$i$$$. It is guaranteed that all the numbers $$$a_{i, 1}, \\ldots, a_{i, n_i}$$$ are pairwise distinct. It is guaranteed that the sum of $$$n_i$$$ over all blocks of all test cases does not exceed $$$50\\,000$$$.",
  "outputFormat": "For each test case, if there is no solution, print a single integer $$$-1$$$. Otherwise, print $$$m$$$ integers $$$p_1, p_2, \\ldots, p_m$$$ ($$$1 \\le p_i \\le 50\\,000$$$) — lottery winners on days from $$$1$$$ to $$$m$$$. If there are multiple solutions, print any of them.",
  "sampleTests": [
    {
      "input": "3\n3\n4\n1 2 4 8\n3\n2 9 1\n2\n1 4\n2\n2\n1 2\n2\n2 1\n4\n4\n1 2 3 4\n1\n1\n1\n4\n1\n3",
      "output": "8 2 1 \n-1\n2 1 4 3"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1798/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}