{
  "contestId": 1846,
  "index": "E2",
  "name": "Rudolf and Snowflakes (hard version)",
  "rating": 1800,
  "tags": [
    "implementation"
  ],
  "statement": "This is the hard version of the problem. The only difference is that in this version $$$n \\le 10^{18}$$$. One winter morning, Rudolf was looking thoughtfully out the window, watching the falling snowflakes. He quickly noticed a certain symmetry in the configuration of the snowflakes. And like a true mathematician, Rudolf came up with a mathematical model of a snowflake. He defined a snowflake as an undirected graph constructed according to the following rules: Initially, the graph has only one vertex. Then, more vertices are added to the graph. The initial vertex is connected by edges to $$$k$$$ new vertices ($$$k > 1$$$). Each vertex that is connected to only one other vertex is connected by edges to $$$k$$$ more new vertices. This step should be done at least once . The smallest possible snowflake for $$$k = 4$$$ is shown in the figure. After some mathematical research, Rudolf realized that such snowflakes may not have any number of vertices. Help Rudolf check whether a snowflake with $$$n$$$ vertices can exist.",
  "inputFormat": "The first line of the input contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Then follow the descriptions of the test cases. The first line of each test case contains an integer $$$n$$$ ($$$1 \\le n \\le 10^{18}$$$) — the number of vertices for which it is necessary to check the existence of a snowflake.",
  "outputFormat": "Output $$$t$$$ lines, each of which is the answer to the corresponding test case — \"YES\" if there exists such $$$k > 1$$$ that a snowflake with the given number of vertices can be constructed; \"NO\" otherwise.",
  "sampleTests": [
    {
      "input": "9\n1\n2\n3\n6\n13\n15\n255\n10101\n1000000000000000000",
      "output": "NO\nNO\nNO\nNO\nYES\nYES\nYES\nYES\nNO"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1846/E2",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}