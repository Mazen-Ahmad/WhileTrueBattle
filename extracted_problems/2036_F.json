{
  "contestId": 2036,
  "index": "F",
  "name": "XORificator 3000",
  "rating": 1900,
  "tags": [
    "implementation"
  ],
  "statement": "Alice has been giving gifts to Bob for many years, and she knows that what he enjoys the most is performing bitwise XOR of interesting integers. Bob considers a positive integer $$$x$$$ to be interesting if it satisfies $$$x \\not\\equiv k (\\bmod 2^i)$$$. Therefore, this year for his birthday, she gifted him a super-powerful \"XORificator 3000\", the latest model. Bob was very pleased with the gift, as it allowed him to instantly compute the XOR of all interesting integers in any range from $$$l$$$ to $$$r$$$, inclusive. After all, what else does a person need for happiness? Unfortunately, the device was so powerful that at one point it performed XOR with itself and disappeared. Bob was very upset, and to cheer him up, Alice asked you to write your version of the \"XORificator\".",
  "inputFormat": "The first line of input contains a single integer $$$t$$$ $$$(1 \\leq t \\leq 10^4)$$$ — the number of XOR queries on the segment. The following $$$t$$$ lines contain the queries, each consisting of the integers $$$l$$$, $$$r$$$, $$$i$$$, $$$k$$$ $$$(1 \\leq l \\leq r \\leq 10^{18}$$$, $$$0 \\leq i \\leq 30$$$, $$$0 \\leq k < 2^i)$$$.",
  "outputFormat": "For each query, output a single integer — the XOR of all integers $$$x$$$ in the range $$$[l, r]$$$ such that $$$x \\not\\equiv k \\mod 2^i$$$.",
  "sampleTests": [
    {
      "input": "6\n1 3 1 0\n2 28 3 7\n15 43 1 0\n57 2007 1 0\n1010 1993 2 2\n1 1000000000 30 1543",
      "output": "2\n2\n13\n0\n4\n1000000519"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2036/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}