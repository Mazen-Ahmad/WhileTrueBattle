{
  "contestId": 1749,
  "index": "F",
  "name": "Distance to the Path",
  "rating": 2800,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a tree consisting of $$$n$$$ vertices. Initially, each vertex has a value $$$0$$$. You need to perform $$$m$$$ queries of two types: You are given a vertex index $$$v$$$. Print the value of the vertex $$$v$$$. You are given two vertex indices $$$u$$$ and $$$v$$$ and values $$$k$$$ and $$$d$$$ ($$$d \\le 20$$$). You need to add $$$k$$$ to the value of each vertex such that the distance from that vertex to the path from $$$u$$$ to $$$v$$$ is less than or equal to $$$d$$$. The distance between two vertices $$$x$$$ and $$$y$$$ is equal to the number of edges on the path from $$$x$$$ to $$$y$$$. For example, the distance from $$$x$$$ to $$$x$$$ itself is equal to $$$0$$$. The distance from the vertex $$$v$$$ to some path from $$$x$$$ to $$$y$$$ is equal to the minimum among distances from $$$v$$$ to any vertex on the path from $$$x$$$ to $$$y$$$.",
  "inputFormat": "The first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$) — the number of vertices in the tree. Next $$$n - 1$$$ lines contain the edges of the tree — one per line. Each line contains two integers $$$u$$$ and $$$v$$$ ($$$1 \\le u, v \\le n$$$; $$$u \\neq v$$$) representing one edge of the tree. It's guaranteed that the given edges form a tree. The next line contains a single integer $$$m$$$ ($$$1 \\le m \\le 2 \\cdot 10^5$$$) — the number of queries. Next $$$m$$$ lines contain the queries — one per line. Each query has one of the following two types: $$$1$$$ $$$v$$$ ($$$1 \\le v \\le n$$$) — the query of the first type; $$$2$$$ $$$u$$$ $$$v$$$ $$$k$$$ $$$d$$$ ($$$1 \\le u, v \\le n$$$; $$$1 \\le k \\le 1000$$$; $$$0 \\le d \\le 20$$$) — the query of the second type. Additional constraint on the input: there is at least one query of the first type.",
  "outputFormat": "For each query of the first type, print the value of the corresponding vertex.",
  "sampleTests": [
    {
      "input": "6\n1 2\n1 3\n4 2\n5 2\n3 6\n14\n2 4 5 10 2\n1 3\n1 6\n2 1 1 10 20\n2 6 6 10 20\n1 3\n2 3 2 10 0\n2 5 2 10 1\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6",
      "output": "10\n0\n30\n50\n50\n40\n40\n40\n20"
    }
  ],
  "timeLimit": 4000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1749/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}