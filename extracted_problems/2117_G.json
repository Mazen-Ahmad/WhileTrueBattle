{
  "contestId": 2117,
  "index": "G",
  "name": "Omg Graph",
  "rating": 1900,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an undirected connected weighted graph. Define the cost of a path of length $$$k$$$ to be as follows: Let the weights of all the edges on the path be $$$w_1,...,w_k$$$. The cost of the path is $$$(\\min_{i = 1}^{k}{w_i}) + (\\max_{i=1}^{k}{w_i})$$$, or in other words, the maximum edge weight + the minimum edge weight. Across all paths from vertex $$$1$$$ to $$$n$$$, report the cost of the path with minimum cost. Note that the path is not necessarily simple.",
  "inputFormat": "The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) â€” the number of test cases. The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$2 \\le n \\le 2 \\cdot 10^5, n - 1 \\le m \\le \\min(2 \\cdot 10^5, \\frac{n(n - 1)}{2})$$$). The next $$$m$$$ lines each contain integers $$$u, v$$$ and $$$w$$$ ($$$1 \\le u, v \\le n, 1 \\le w \\le 10^9$$$) representing an edge from vertex $$$u$$$ to $$$v$$$ with weight $$$w$$$. It is guaranteed that the graph does not contain self-loops or multiple edges and the resulting graph is connected. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$ and that the sum of $$$m$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output a single integer, the minimum cost path from vertex $$$1$$$ to $$$n$$$.",
  "sampleTests": [
    {
      "input": "4\n3 2\n1 2 1\n2 3 1\n3 2\n1 3 13\n1 2 5\n8 9\n1 2 6\n2 3 5\n3 8 6\n1 4 7\n4 5 4\n5 8 7\n1 6 5\n6 7 5\n7 8 5\n3 3\n1 3 9\n1 2 8\n2 3 3",
      "output": "2\n18\n10\n11"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2117/G",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}