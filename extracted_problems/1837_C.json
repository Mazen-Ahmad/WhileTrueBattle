{
  "contestId": 1837,
  "index": "C",
  "name": "Best Binary String",
  "rating": 1000,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a string $$$s$$$ consisting of the characters 0 , 1 and/or ? . Let's call it a pattern . Let's say that the binary string (a string where each character is either 0 or 1 ) matches the pattern if you can replace each character ? with 0 or 1 (for each character, the choice is independent) so that the strings become equal. For example, 0010 matches ?01? , but 010 doesn't match 1?? , ?? , or ???? . Let's define the cost of the binary string as the minimum number of operations of the form \"reverse an arbitrary contiguous substring of the string\" required to sort the string in non-descending order. You have to find a binary string with the minimum possible cost among those that match the given pattern. If there are multiple answers, print any of them.",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 3 \\cdot 10^4$$$) â€” the number of test cases. The first and only line of each test case contains the string $$$s$$$ ($$$1 \\le |s| \\le 3 \\cdot 10^5$$$) consisting of characters 0 , 1 , and/or ? . The sum of the string lengths over all test cases does not exceed $$$3 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print a binary string with the minimum possible cost among those that match the given pattern. If there are multiple answers, print any of them.",
  "sampleTests": [
    {
      "input": "4\n??01?\n10100\n1??10?\n0?1?10?10",
      "output": "00011\n10100\n111101\n011110010"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1837/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}