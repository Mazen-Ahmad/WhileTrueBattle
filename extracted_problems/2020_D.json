{
  "contestId": 2020,
  "index": "D",
  "name": "Connect the Dots",
  "rating": 1800,
  "tags": [
    "implementation"
  ],
  "statement": "One fine evening, Alice sat down to play the classic game \"Connect the Dots\", but with a twist. To play the game, Alice draws a straight line and marks $$$n$$$ points on it, indexed from $$$1$$$ to $$$n$$$. Initially, there are no arcs between the points, so they are all disjoint. After that, Alice performs $$$m$$$ operations of the following type: She picks three integers $$$a_i$$$, $$$d_i$$$ ($$$1 \\le d_i \\le 10$$$), and $$$k_i$$$. She selects points $$$a_i, a_i+d_i, a_i+2d_i, a_i+3d_i, \\ldots, a_i+k_i\\cdot d_i$$$ and connects each pair of these points with arcs. After performing all $$$m$$$ operations, she wants to know the number of connected components$$$^\\dagger$$$ these points form. Please help her find this number. $$$^\\dagger$$$ Two points are said to be in one connected component if there is a path between them via several (possibly zero) arcs and other points.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^5$$$). The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$, $$$1 \\le m \\le 2 \\cdot 10^5$$$). The $$$i$$$-th of the following $$$m$$$ lines contains three integers $$$a_i$$$, $$$d_i$$$, and $$$k_i$$$ ($$$1 \\le a_i \\le a_i + k_i\\cdot d_i \\le n$$$, $$$1 \\le d_i \\le 10$$$, $$$0 \\le k_i \\le n$$$). It is guaranteed that both the sum of $$$n$$$ and the sum of $$$m$$$ over all test cases do not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output the number of connected components.",
  "sampleTests": [
    {
      "input": "3\n10 2\n1 2 4\n2 2 4\n100 1\n19 2 4\n100 3\n1 2 5\n7 2 6\n17 2 31",
      "output": "2\n96\n61"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/2020/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}