{
  "contestId": 1630,
  "index": "F",
  "name": "Making It Bipartite",
  "rating": 3400,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an undirected graph of $$$n$$$ vertices indexed from $$$1$$$ to $$$n$$$, where vertex $$$i$$$ has a value $$$a_i$$$ assigned to it and all values $$$a_i$$$ are different . There is an edge between two vertices $$$u$$$ and $$$v$$$ if either $$$a_u$$$ divides $$$a_v$$$ or $$$a_v$$$ divides $$$a_u$$$. Find the minimum number of vertices to remove such that the remaining graph is bipartite, when you remove a vertex you remove all the edges incident to it.",
  "inputFormat": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 5\\cdot10^4$$$) — the number of vertices in the graph. The second line of each test case contains $$$n$$$ integers, the $$$i$$$-th of them is the value $$$a_i$$$ ($$$1 \\le a_i \\le 5\\cdot10^4$$$) assigned to the $$$i$$$-th vertex, all values $$$a_i$$$ are different . It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5\\cdot10^4$$$.",
  "outputFormat": "For each test case print a single integer — the minimum number of vertices to remove such that the remaining graph is bipartite.",
  "sampleTests": [
    {
      "input": "4\n4\n8 4 2 1\n4\n30 2 3 5\n5\n12 4 6 2 3\n10\n85 195 5 39 3 13 266 154 14 2",
      "output": "2\n0\n1\n2"
    }
  ],
  "timeLimit": 4000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1630/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}