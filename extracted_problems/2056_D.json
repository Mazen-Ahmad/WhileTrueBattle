{
  "contestId": 2056,
  "index": "D",
  "name": "Unique Median",
  "rating": 2200,
  "tags": [
    "implementation"
  ],
  "statement": "An array $$$b$$$ of $$$m$$$ integers is called good if, when it is sorted , $$$b_{\\left\\lfloor \\frac{m + 1}{2} \\right\\rfloor} = b_{\\left\\lceil \\frac{m + 1}{2} \\right\\rceil}$$$. In other words, $$$b$$$ is good if both of its medians are equal. In particular, $$$\\left\\lfloor \\frac{m + 1}{2} \\right\\rfloor = \\left\\lceil \\frac{m + 1}{2} \\right\\rceil$$$ when $$$m$$$ is odd, so $$$b$$$ is guaranteed to be good if it has an odd length. You are given an array $$$a$$$ of $$$n$$$ integers. Calculate the number of good subarrays$$$^{\\text{∗}}$$$ in $$$a$$$. $$$^{\\text{∗}}$$$An array $$$x$$$ is a subarray of an array $$$y$$$ if $$$x$$$ can be obtained from $$$y$$$ by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$) — the length of the array. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le \\color{red}{\\textbf{10}}$$$) — the given array. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.",
  "outputFormat": "For each test case, output a single integer representing the number of good subarrays in $$$a$$$.",
  "sampleTests": [
    {
      "input": "3\n4\n1 1 1 1\n5\n1 10 2 3 3\n10\n6 3 2 3 5 3 4 2 3 5",
      "output": "10\n11\n42"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/2056/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}