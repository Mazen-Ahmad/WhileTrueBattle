{
  "contestId": 2042,
  "index": "E",
  "name": "Vertex Pairs",
  "rating": 2900,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a tree consisting of $$$2n$$$ vertices. Recall that a tree is a connected undirected graph with no cycles. Each vertex has an integer from $$$1$$$ to $$$n$$$ written on it. Each value from $$$1$$$ to $$$n$$$ is written on exactly two different vertices. Each vertex also has a cost —vertex $$$i$$$ costs $$$2^i$$$. You need to choose a subset of vertices of the tree such that: the subset is connected; that is, from each vertex in the subset, you can reach every other vertex in the subset by passing only through the vertices in the subset; each value from $$$1$$$ to $$$n$$$ is written on at least one vertex in the subset. Among all such subsets, you need to find the one with the smallest total cost of the vertices in it. Note that you are not required to minimize the number of vertices in the subset.",
  "inputFormat": "The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$). The second line contains $$$2n$$$ integers $$$a_1, a_2, \\dots, a_{2n}$$$ ($$$1 \\le a_i \\le n$$$). Each value from $$$1$$$ to $$$n$$$ appears exactly twice. Each of the next $$$2n-1$$$ lines contains two integers $$$v$$$ and $$$u$$$ ($$$1 \\le v, u \\le 2n$$$) — the edges of the tree. These edges form a valid tree.",
  "outputFormat": "In the first line, print a single integer $$$k$$$ — the number of vertices in the subset. In the second line, print $$$k$$$ distinct integers from $$$1$$$ to $$$2n$$$ — the indices of the vertices in the chosen subset. The vertices can be printed in an arbitrary order.",
  "sampleTests": [
    {
      "input": "3\n1 1 3 2 3 2\n4 2\n1 6\n6 2\n6 3\n2 5",
      "output": "3\n2 4 5"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/2042/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}