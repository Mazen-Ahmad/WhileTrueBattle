{
  "contestId": 2001,
  "index": "A",
  "name": "Make All Equal",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a cyclic array $$$a_1, a_2, \\ldots, a_n$$$. You can perform the following operation on $$$a$$$ at most $$$n - 1$$$ times: Let $$$m$$$ be the current size of $$$a$$$, you can choose any two adjacent elements where the previous one is no greater than the latter one (In particular, $$$a_m$$$ and $$$a_1$$$ are adjacent and $$$a_m$$$ is the previous one), and delete exactly one of them. In other words, choose an integer $$$i$$$ ($$$1 \\leq i \\leq m$$$) where $$$a_i \\leq a_{(i \\bmod m) + 1}$$$ holds, and delete exactly one of $$$a_i$$$ or $$$a_{(i \\bmod m) + 1}$$$ from $$$a$$$. Your goal is to find the minimum number of operations needed to make all elements in $$$a$$$ equal.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 500$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 100$$$) — the length of the array $$$a$$$. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le n$$$) — the elements of array $$$a$$$.",
  "outputFormat": "For each test case, output a single line containing an integer: the minimum number of operations needed to make all elements in $$$a$$$ equal.",
  "sampleTests": [
    {
      "input": "7\n1\n1\n3\n1 2 3\n3\n1 2 2\n5\n5 4 3 2 1\n6\n1 1 2 2 3 3\n8\n8 7 6 3 8 7 6 3\n6\n1 1 4 5 1 4",
      "output": "0\n2\n1\n4\n4\n6\n3"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2001/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}