{
  "contestId": 2127,
  "index": "E",
  "name": "Ancient Tree",
  "rating": null,
  "tags": [
    "implementation"
  ],
  "statement": "Bahamin came from the past to visit Ali — who came from the future. He also brought an ancient tree as a gift for Ali. He noticed some of its vertices have lost their color. Bahamin needs to repaint these vertices, but he is very busy with fixing his time machine. Fortunately (or unfortunately), dinosaurs now handle such tasks — for a fee, of course. He needs your help to find the coloring with minimum cost. So he gives you the problem as follows. You are given a rooted tree$$$^{\\text{∗}}$$$ of $$$n$$$ vertices, where vertex $$$1$$$ is the root. Each vertex has an integer weight $$$w_i$$$ and a color $$$c_i$$$, where the colors are integers between $$$1$$$ and $$$k$$$. However, some vertices have lost their colors, represented by $$$c_i = 0$$$. We call vertex $$$v$$$ cutie if there exists two vertices $$$x$$$ and $$$y$$$, such that $$$\\operatorname{lca}(x, y)$$$$$$^{\\text{†}}$$$ $$$= v$$$, $$$c_x = c_y$$$, and $$$c_x \\neq c_v$$$. The cost of the tree is the sum of weights of all cutie vertices. You have to assign colors between $$$1$$$ and $$$k$$$ to all the vertices which have lost their colors. Find the minimum possible cost among all valid colorings and provide a coloring with the minimum possible cost . $$$^{\\text{∗}}$$$A tree is a connected graph without cycles. A rooted tree is a tree where one vertex is special and called the root. $$$^{\\text{†}}$$$$$$\\operatorname{lca}(x, y)$$$ denotes the lowest common ancestor (LCA) of $$$x$$$ and $$$y$$$.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$3 \\leq n \\leq 2 \\cdot 10^5$$$, $$$2 \\leq k \\leq n$$$) — the number of vertices and the number of colors. The second line contains $$$n$$$ integers $$$w_1,w_2,\\ldots,w_n$$$ ($$$1 \\leq w_i \\leq 10^9$$$) — the weight of vertices. The third line contains $$$n$$$ integers $$$c_1,c_2,\\ldots,c_n$$$ ($$$0 \\leq c_i \\leq k$$$) — the color of vertices. $$$c_i=0$$$ means that vertex $$$i$$$ has lost its color. Then $$$n−1$$$ lines follow, the $$$i$$$-th line containing two integers $$$u$$$ and $$$v$$$ ($$$1 \\leq u, v \\leq n$$$) — the two vertices that the $$$i$$$-th edge connects. It is guaranteed that the given edges form a tree. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, in the first line output a single integer — the minimum possible cost among all valid colorings. In the second line output $$$n$$$ integers $$$c'_1, c'_2, \\ldots, c'_n$$$ — a coloring with the minimum possible cost . You need to guarantee that: $$$c'_i = c_i$$$ if $$$c_i \\neq 0$$$; $$$1 \\leq c'_i \\leq k$$$ if $$$c_i = 0$$$. If there are multiple colorings with the minimum possible cost , you can output any of them.",
  "sampleTests": [
    {
      "input": "4\n4 4\n5 5 5 5\n1 0 2 3\n1 2\n1 3\n1 4\n5 2\n3 1 4 1 5\n1 2 1 2 2\n1 4\n2 1\n3 4\n4 5\n11 3\n3 1 4 3 1 4 3 1 4 5 6\n0 0 0 2 1 2 1 2 2 1 1\n1 2\n2 3\n2 4\n2 5\n2 6\n1 7\n7 8\n7 9\n10 3\n3 11\n4 3\n2 3 2 3\n2 1 0 0\n3 1\n1 2\n2 4",
      "output": "0\n1 4 2 3\n3\n1 2 1 2 2\n7\n2 3 1 2 1 2 1 2 2 1 1\n0\n2 1 3 1"
    }
  ],
  "timeLimit": 4000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2127/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}