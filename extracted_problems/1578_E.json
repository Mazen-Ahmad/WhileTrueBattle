{
  "contestId": 1578,
  "index": "E",
  "name": "Easy Scheduling",
  "rating": 1200,
  "tags": [
    "implementation"
  ],
  "statement": "Eonathan Eostar decided to learn the magic of multiprocessor systems. He has a full binary tree of tasks with height $$$h$$$. In the beginning, there is only one ready task in the tree — the task in the root. At each moment of time, $$$p$$$ processes choose at most $$$p$$$ ready tasks and perform them. After that, tasks whose parents were performed become ready for the next moment of time. Once the task becomes ready , it stays ready until it is performed. You shall calculate the smallest number of time moments the system needs to perform all the tasks.",
  "inputFormat": "The first line of the input contains the number of tests $$$t$$$ ($$$1 \\leq t \\leq 5\\cdot 10^5$$$). Each of the next $$$t$$$ lines contains the description of a test. A test is described by two integers $$$h$$$ ($$$1 \\leq h \\leq 50$$$) and $$$p$$$ ($$$1 \\leq p \\leq 10^4$$$) — the height of the full binary tree and the number of processes. It is guaranteed that all the tests are different.",
  "outputFormat": "For each test output one integer on a separate line — the smallest number of time moments the system needs to perform all the tasks.",
  "sampleTests": [
    {
      "input": "3\n3 1\n3 2\n10 6",
      "output": "7\n4\n173"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 1024,
  "sourceUrl": "https://codeforces.com/problemset/problem/1578/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}