{
  "contestId": 1705,
  "index": "E",
  "name": "Mark and Professor Koro",
  "rating": 2300,
  "tags": [
    "implementation"
  ],
  "statement": "After watching a certain anime before going to sleep, Mark dreams of standing in an old classroom with a blackboard that has a sequence of $$$n$$$ positive integers $$$a_1, a_2,\\dots,a_n$$$ on it. Then, professor Koro comes in. He can perform the following operation: select an integer $$$x$$$ that appears at least $$$2$$$ times on the board, erase those $$$2$$$ appearances, and write $$$x+1$$$ on the board. Professor Koro then asks Mark the question, \"what is the maximum possible number that could appear on the board after some operations?\" Mark quickly solves this question, but he is still slower than professor Koro. Thus, professor Koro decides to give Mark additional challenges. He will update the initial sequence of integers $$$q$$$ times. Each time, he will choose positive integers $$$k$$$ and $$$l$$$, then change $$$a_k$$$ to $$$l$$$. After each update, he will ask Mark the same question again. Help Mark answer these questions faster than Professor Koro! Note that the updates are persistent. Changes made to the sequence $$$a$$$ will apply when processing future updates.",
  "inputFormat": "The first line of the input contains two integers $$$n$$$ and $$$q$$$ ($$$2\\leq n\\leq 2\\cdot 10^5$$$, $$$1\\leq q\\leq 2\\cdot 10^5$$$) — the length of the sequence $$$a$$$ and the number of updates, respectively. The second line contains $$$n$$$ integers $$$a_1,a_2,\\dots,a_n$$$ ($$$1\\leq a_i\\leq 2\\cdot 10^5$$$) Then, $$$q$$$ lines follow, each consisting of two integers $$$k$$$ and $$$l$$$ ($$$1\\leq k\\leq n$$$, $$$1\\leq l\\leq 2\\cdot 10^5$$$), telling to update $$$a_k$$$ to $$$l$$$.",
  "outputFormat": "Print $$$q$$$ lines. The $$$i$$$-th line should consist of a single integer — the answer after the $$$i$$$-th update.",
  "sampleTests": [
    {
      "input": "5 4\n2 2 2 4 5\n2 3\n5 3\n4 1\n1 4",
      "output": "6\n5\n4\n5"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1705/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}