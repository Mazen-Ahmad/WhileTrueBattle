{
  "contestId": 1521,
  "index": "C",
  "name": "Nastia and a Hidden Permutation",
  "rating": 2000,
  "tags": [
    "implementation"
  ],
  "statement": "This is an interactive problem! Nastia has a hidden permutation $$$p$$$ of length $$$n$$$ consisting of integers from $$$1$$$ to $$$n$$$. You, for some reason, want to figure out the permutation. To do that, you can give her an integer $$$t$$$ ($$$1 \\le t \\le 2$$$), two different indices $$$i$$$ and $$$j$$$ ($$$1 \\le i, j \\le n$$$, $$$i \\neq j$$$), and an integer $$$x$$$ ($$$1 \\le x \\le n - 1$$$). Depending on $$$t$$$, she will answer: $$$t = 1$$$: $$$\\max{(\\min{(x, p_i)}, \\min{(x + 1, p_j)})}$$$; $$$t = 2$$$: $$$\\min{(\\max{(x, p_i)}, \\max{(x + 1, p_j)})}$$$. You can ask Nastia at most $$$\\lfloor \\frac {3 \\cdot n} { 2} \\rfloor + 30$$$ times. It is guaranteed that she will not change her permutation depending on your queries. Can you guess the permutation?",
  "inputFormat": "The input consists of several test cases. In the beginning, you receive the integer $$$T$$$ ($$$1 \\le T \\le 10\\,000$$$) — the number of test cases. At the beginning of each test case, you receive an integer $$$n$$$ ($$$3 \\le n \\le 10^4$$$) — the length of the permutation $$$p$$$. It's guaranteed that the permutation is fixed beforehand and that the sum of $$$n$$$ in one test doesn't exceed $$$2 \\cdot 10^4$$$.",
  "outputFormat": "Output specification not found",
  "sampleTests": [
    {
      "input": "2\n4\n\n3\n\n2\n\n5\n\n3",
      "output": "? 2 4 1 3\n\n? 1 2 4 2\n\n! 3 1 4 2\n\n? 2 3 4 2\n\n! 2 5 3 4 1"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1521/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}