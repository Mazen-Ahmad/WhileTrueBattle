{
  "contestId": 1612,
  "index": "A",
  "name": "Distance",
  "rating": 800,
  "tags": [
    "implementation"
  ],
  "statement": "Let's denote the Manhattan distance between two points $$$p_1$$$ (with coordinates $$$(x_1, y_1)$$$) and $$$p_2$$$ (with coordinates $$$(x_2, y_2)$$$) as $$$d(p_1, p_2) = |x_1 - x_2| + |y_1 - y_2|$$$. For example, the distance between two points with coordinates $$$(1, 3)$$$ and $$$(4, 2)$$$ is $$$|1 - 4| + |3 - 2| = 4$$$. You are given two points, $$$A$$$ and $$$B$$$. The point $$$A$$$ has coordinates $$$(0, 0)$$$, the point $$$B$$$ has coordinates $$$(x, y)$$$. Your goal is to find a point $$$C$$$ such that: both coordinates of $$$C$$$ are non-negative integers; $$$d(A, C) = \\dfrac{d(A, B)}{2}$$$ (without any rounding); $$$d(B, C) = \\dfrac{d(A, B)}{2}$$$ (without any rounding). Find any point $$$C$$$ that meets these constraints, or report that no such point exists.",
  "inputFormat": "The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 3000$$$) — the number of test cases. Each test case consists of one line containing two integers $$$x$$$ and $$$y$$$ ($$$0 \\le x, y \\le 50$$$) — the coordinates of the point $$$B$$$.",
  "outputFormat": "For each test case, print the answer on a separate line as follows: if it is impossible to find a point $$$C$$$ meeting the constraints, print \" -1 -1 \" (without quotes); otherwise, print two non-negative integers not exceeding $$$10^6$$$ — the coordinates of point $$$C$$$ meeting the constraints. If there are multiple answers, print any of them. It can be shown that if any such point exists, it's possible to find a point with coordinates not exceeding $$$10^6$$$ that meets the constraints.",
  "sampleTests": [
    {
      "input": "10\n49 3\n2 50\n13 0\n0 41\n42 0\n0 36\n13 37\n42 16\n42 13\n0 0",
      "output": "23 3\n1 25\n-1 -1\n-1 -1\n21 0\n0 18\n13 12\n25 4\n-1 -1\n0 0"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1612/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}