{
  "contestId": 1982,
  "index": "E",
  "name": "Number of k-good subarrays",
  "rating": 2300,
  "tags": [
    "implementation"
  ],
  "statement": "Let $$$bit(x)$$$ denote the number of ones in the binary representation of a non-negative integer $$$x$$$. A subarray of an array is called $$$k$$$-good if it consists only of numbers with no more than $$$k$$$ ones in their binary representation, i.e., a subarray $$$(l, r)$$$ of array $$$a$$$ is good if for any $$$i$$$ such that $$$l \\le i \\le r$$$ condition $$$bit(a_{i}) \\le k$$$ is satisfied. You are given an array $$$a$$$ of length $$$n$$$, consisting of consecutive non-negative integers starting from $$$0$$$, i.e., $$$a_{i} = i$$$ for $$$0 \\le i \\le n - 1$$$ (in $$$0$$$-based indexing). You need to count the number of $$$k$$$-good subarrays in this array. As the answer can be very large, output it modulo $$$10^{9} + 7$$$.",
  "inputFormat": "Each test consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10^{4}$$$) — the number of test cases. The following lines describe the test cases. The single line of each test case contains two integers $$$n$$$, $$$k$$$ ($$$1 \\le n \\le 10^{18}, 1 \\le k \\le 60$$$).",
  "outputFormat": "For each test case, output a single integer — the number of $$$k$$$-good subarrays modulo $$$10^{9} + 7$$$.",
  "sampleTests": [
    {
      "input": "10\n6 1\n16 2\n1 1\n3 1\n31 3\n14 1\n1337 5\n100000 20\n795569939321040850 56\n576460752303423268 59",
      "output": "7\n35\n1\n6\n155\n8\n7323\n49965\n741136395\n66679884"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1982/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}