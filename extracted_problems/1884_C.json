{
  "contestId": 1884,
  "index": "C",
  "name": "Medium Design",
  "rating": 1700,
  "tags": [
    "implementation"
  ],
  "statement": "The array $$$a_1, a_2, \\ldots, a_m$$$ is initially filled with zeroes. You are given $$$n$$$ pairwise distinct segments $$$1 \\le l_i \\le r_i \\le m$$$. You have to select an arbitrary subset of these segments (in particular, you may select an empty set). Next, you do the following: For each $$$i = 1, 2, \\ldots, n$$$, if the segment $$$(l_i, r_i)$$$ has been selected to the subset, then for each index $$$l_i \\le j \\le r_i$$$ you increase $$$a_j$$$ by $$$1$$$ (i. e. $$$a_j$$$ is replaced by $$$a_j + 1$$$). If the segment $$$(l_i, r_i)$$$ has not been selected, the array does not change. Next (after processing all values of $$$i = 1, 2, \\ldots, n$$$), you compute $$$\\max(a)$$$ as the maximum value among all elements of $$$a$$$. Analogously, compute $$$\\min(a)$$$ as the minimum value. Finally, the cost of the selected subset of segments is declared as $$$\\max(a) - \\min(a)$$$. Please, find the maximum cost among all subsets of segments.",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n \\le 10^5$$$, $$$1 \\le m \\le 10^9$$$) â€” the number of segments and the length of the array. The following $$$n$$$ lines of each test case describe the segments. The $$$i$$$-th of these lines contains two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le m$$$). It is guaranteed that the segments are pairwise distinct. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output the maximum cost among all subsets of the given set of segments.",
  "sampleTests": [
    {
      "input": "6\n1 3\n2 2\n3 8\n2 4\n3 5\n4 6\n6 3\n1 1\n1 2\n1 3\n2 2\n2 3\n3 3\n7 6\n2 2\n1 6\n1 2\n5 6\n1 5\n4 4\n3 6\n6 27\n6 26\n5 17\n2 3\n20 21\n1 22\n12 24\n4 1000000000\n2 999999999\n3 1000000000\n123456789 987654321\n9274 123456789",
      "output": "1\n3\n2\n3\n4\n4"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1884/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}