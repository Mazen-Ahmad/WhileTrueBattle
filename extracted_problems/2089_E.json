{
  "contestId": 2089,
  "index": "E",
  "name": "Black Cat Collapse",
  "rating": 3500,
  "tags": [
    "implementation"
  ],
  "statement": "The world of the black cat is collapsing. In this world, which can be represented as a rooted tree with root at node $$$1$$$, Liki and Sasami need to uncover the truth about the world. Each day, they can explore a node $$$u$$$ that has not yet collapsed. After this exploration, the black cat causes $$$u$$$ and all nodes in its subtree to collapse. Additionally, at the end of the $$$i$$$ th day, if it exists, the number $$$n-i+1$$$ node will also collapse. For each $$$i$$$ from $$$1$$$ to $$$n$$$, determine the number of exploration schemes where Liki and Sasami explore exactly $$$i$$$ days (i.e., they perform exactly $$$i$$$ operations), with the last exploration being at node $$$1$$$. The result should be computed modulo $$$998\\,244\\,353$$$. Note: It is guaranteed that nodes $$$1$$$ to $$$n$$$ can form a \"DFS\" order of the tree, meaning there exists a depth-first search traversal where the $$$i$$$ th visited node is $$$i$$$.",
  "inputFormat": "The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 10$$$) â€” the number of test cases. The description of the test cases follows. The first line of each test case contains exactly one number $$$n$$$ ($$$3 \\le n \\le 80$$$). Each of the following $$$n - 1$$$ lines contains two integers $$$u_i$$$ and $$$v_i$$$, representing two vertices connected by an edge ($$$1 \\le u_i, v_i \\le n$$$). It is guaranteed that the given edges form a tree. It is also guaranteed that the vertices can form a \"DFS\" traversal order. It is guaranteed that the sum of $$$n$$$ for all test cases does not exceed $$$80$$$",
  "outputFormat": "For each test case, print $$$n$$$ integers, where the $$$i$$$ th integer represents the number of exploration schemes for exactly $$$i$$$ days, modulo $$$998\\,244\\,353$$$.",
  "sampleTests": [
    {
      "input": "2\n4\n1 2\n2 3\n2 4\n7\n4 2\n6 1\n5 1\n7 6\n2 3\n1 2",
      "output": "1 3 3 1\n1 6 23 48 43 17 1"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 1024,
  "sourceUrl": "https://codeforces.com/problemset/problem/2089/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}