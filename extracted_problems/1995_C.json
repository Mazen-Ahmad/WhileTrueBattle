{
  "contestId": 1995,
  "index": "C",
  "name": "Squaring",
  "rating": 1800,
  "tags": [
    "implementation"
  ],
  "statement": "ikrpprpp found an array $$$a$$$ consisting of integers. He likes justice, so he wants to make $$$a$$$ fair — that is, make it non-decreasing. To do that, he can perform an act of justice on an index $$$1 \\le i \\le n$$$ of the array, which will replace $$$a_i$$$ with $$$a_i ^ 2$$$ (the element at position $$$i$$$ with its square). For example, if $$$a = [2,4,3,3,5,3]$$$ and ikrpprpp chooses to perform an act of justice on $$$i = 4$$$, $$$a$$$ becomes $$$[2,4,3,9,5,3]$$$. What is the minimum number of acts of justice needed to make the array non-decreasing?",
  "inputFormat": "First line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. It is followed by the description of test cases. For each test case, the first line contains an integer $$$n$$$ — size of the array $$$a$$$. The second line contains $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10 ^5$$$) integers $$$a_1, a_2,\\ldots, a_n$$$ ($$$1 \\le a_i \\le 10 ^ 6$$$). The sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot {10}^5$$$.",
  "outputFormat": "For each testcase, print an integer — minimum number of acts of justice required to make the array $$$a$$$ non-decreasing. If it is impossible to do that, print $$$-1$$$.",
  "sampleTests": [
    {
      "input": "7\n3\n1 2 3\n2\n3 2\n3\n3 1 5\n4\n1 1 2 3\n3\n4 3 2\n9\n16 2 4 2 256 2 4 2 8\n11\n10010 10009 10008 10007 10006 10005 10004 10003 10002 10001 10000",
      "output": "0\n1\n-1\n0\n3\n15\n55"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1995/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}