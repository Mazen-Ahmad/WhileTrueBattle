{
  "contestId": 1949,
  "index": "B",
  "name": "Charming Meals",
  "rating": 1500,
  "tags": [
    "implementation"
  ],
  "statement": "The Czech cuisine features $$$n$$$ appetizers and $$$n$$$ main dishes. The $$$i$$$-th appetizer has spiciness $$$a_i$$$, and the $$$i$$$-th main dish has spiciness $$$b_i$$$. A typical Czech meal consists of exactly one appetizer and one main dish. You want to pair up the $$$n$$$ appetizers and $$$n$$$ main dishes into $$$n$$$ meals with each appetizer and each main dish being included in exactly one meal. Your meals shall surprise the diners, so you want the spiciness levels of the two parts of the same meal to be as different as possible. The charm of a meal is the difference (in absolute value) between the spiciness of the appetizer and the spiciness of the main dish. So, a meal consisting of an appetizer with spiciness $$$x$$$ and a main dish with spiciness $$$y$$$ has charm equal to $$$|x-y|$$$. You want to maximize the minimum charm of the resulting $$$n$$$ meals. What is the largest possible value of the minimum charm that you can achieve?",
  "inputFormat": "Each test contains multiple test cases. The first line contains an integer $$$t$$$ ($$$1\\le t\\le 1\\,000$$$) — the number of test cases. The descriptions of the $$$t$$$ test cases follow. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 5\\,000$$$) —the number of appetizers and main dishes. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\leq a_i \\leq 10^{9}$$$) — the spicinesses of the $$$n$$$ appetizers. The third line of each test case contains $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$ ($$$0 \\leq b_i \\leq 10^{9}$$$) — the spicinesses of the $$$n$$$ main dishes. It is guaranteed that the sum of $$$n^2$$$ over all test cases does not exceed $$$25\\cdot 10^6$$$.",
  "outputFormat": "For each test case, print the largest possible value of the minimum charm you can achieve.",
  "sampleTests": [
    {
      "input": "4\n3\n0 0 0\n1000000000 1000000000 1000000000\n5\n1 2 3 4 5\n1 2 3 4 5\n6\n0 0 0 100 100 100\n100 100 100 0 0 0\n7\n14 25 62 74 86 95 12\n51 62 71 72 92 20 84",
      "output": "1000000000\n2\n100\n30"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1949/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}