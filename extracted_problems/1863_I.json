{
  "contestId": 1863,
  "index": "I",
  "name": "Redundant Routes",
  "rating": 3500,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a tree with $$$n$$$ vertices labeled $$$1, 2, \\ldots, n$$$. The length of a simple path in the tree is the number of vertices in it. You are to select a set of simple paths of length at least $$$2$$$ each, but you cannot simultaneously select two distinct paths contained one in another. Find the largest possible size of such a set. Formally, a set $$$S$$$ of vertices is called a route if it contains at least two vertices and coincides with the set of vertices of a simple path in the tree. A collection of distinct routes is called a timetable . A route $$$S$$$ in a timetable $$$T$$$ is called redundant if there is a different route $$$S' \\in T$$$ such that $$$S \\subset S'$$$. A timetable is called efficient if it contains no redundant routes. Find the largest possible number of routes in an efficient timetable.",
  "inputFormat": "The first line contains a single integer $$$n$$$ ($$$2 \\le n \\le 3000$$$). The $$$i$$$-th of the following $$$n - 1$$$ lines contains two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\le u_i, v_i \\le n$$$, $$$u_i \\neq v_i$$$) — the numbers of vertices connected by the $$$i$$$-th edge. It is guaranteed that the given edges form a tree.",
  "outputFormat": "Print a single integer — the answer to the problem.",
  "sampleTests": [
    {
      "input": "4\n1 2\n1 3\n1 4",
      "output": "3"
    }
  ],
  "timeLimit": 5000,
  "memoryLimit": 1024,
  "sourceUrl": "https://codeforces.com/problemset/problem/1863/I",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}