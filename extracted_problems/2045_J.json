{
  "contestId": 2045,
  "index": "J",
  "name": "Xorderable Array",
  "rating": 2600,
  "tags": [
    "implementation"
  ],
  "statement": "You are given an array $$$A$$$ of $$$N$$$ integers: $$$[A_1, A_2, \\dots, A_N]$$$. The array $$$A$$$ is $$$(p, q)$$$-xorderable if it is possible to rearrange $$$A$$$ such that for each pair $$$(i, j)$$$ that satisfies $$$1 \\leq i < j \\leq N$$$, the following conditions must be satisfied after the rearrangement: $$$A_i \\oplus p \\leq A_j \\oplus q$$$ and $$$A_i \\oplus q \\leq A_j \\oplus p$$$. The operator $$$\\oplus$$$ represents the bitwise xor . You are given another array $$$X$$$ of length $$$M$$$: $$$[X_1, X_2, \\dots, X_M]$$$. Calculate the number of pairs $$$(u, v)$$$ where array $$$A$$$ is $$$(X_u, X_v)$$$-xorderable for $$$1 \\leq u < v \\leq M$$$.",
  "inputFormat": "The first line consists of two integers $$$N$$$ $$$M$$$ ($$$2 \\leq N, M \\leq 200\\,000)$$$. The second line consists of $$$N$$$ integers $$$A_i$$$ ($$$0 \\leq A_i < 2^{30})$$$. The third line consists of $$$M$$$ integers $$$X_u$$$ ($$$0 \\leq X_u < 2^{30})$$$.",
  "outputFormat": "Output a single integer representing the number of pairs $$$(u, v)$$$ where array $$$A$$$ is $$$(X_u, X_v)$$$-xorderable for $$$1 \\leq u < v \\leq M$$$.",
  "sampleTests": [
    {
      "input": "3 4\n0 3 0\n1 2 1 1",
      "output": "3"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 1024,
  "sourceUrl": "https://codeforces.com/problemset/problem/2045/J",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}