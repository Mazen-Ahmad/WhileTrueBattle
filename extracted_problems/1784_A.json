{
  "contestId": 1784,
  "index": "A",
  "name": "Monsters (easy version)",
  "rating": 1000,
  "tags": [
    "implementation"
  ],
  "statement": "This is the easy version of the problem. In this version, you only need to find the answer once. In this version, hacks are not allowed . In a computer game, you are fighting against $$$n$$$ monsters. Monster number $$$i$$$ has $$$a_i$$$ health points, all $$$a_i$$$ are integers. A monster is alive while it has at least $$$1$$$ health point. You can cast spells of two types: Deal $$$1$$$ damage to any single alive monster of your choice. Deal $$$1$$$ damage to all alive monsters. If at least one monster dies (ends up with $$$0$$$ health points) as a result of this action, then repeat it (and keep repeating while at least one monster dies every time). Dealing $$$1$$$ damage to a monster reduces its health by $$$1$$$. Spells of type 1 can be cast any number of times, while a spell of type 2 can be cast at most once during the game. What is the smallest number of times you need to cast spells of type 1 to kill all monsters?",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 10^4$$$). The description of the test cases follows. Each test case consists of two lines. The first line contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$) — the number of monsters. The second line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le n$$$) — monsters' health points. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, print a single integer — the smallest number of times you need to cast spells of type 1 to kill all monsters.",
  "sampleTests": [
    {
      "input": "2\n3\n3 1 2\n6\n4 1 5 4 1 1",
      "output": "0\n4"
    }
  ],
  "timeLimit": 4000,
  "memoryLimit": 512,
  "sourceUrl": "https://codeforces.com/problemset/problem/1784/A",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}