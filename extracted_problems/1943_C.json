{
  "contestId": 1943,
  "index": "C",
  "name": "Tree Compass",
  "rating": 2300,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a tree with $$$n$$$ vertices numbered $$$1, 2, \\ldots, n$$$. Initially, all vertices are colored white. You can perform the following two-step operation: Choose a vertex $$$v$$$ ($$$1 \\leq v \\leq n$$$) and a distance $$$d$$$ ($$$0 \\leq d \\leq n-1$$$). For all vertices $$$u$$$ ($$$1 \\leq u \\leq n$$$) such that $$$\\text{dist}^\\dagger(u,v)=d$$$, color $$$u$$$ black. Construct a sequence of operations to color all the nodes in the tree black using the minimum possible number of operations. It can be proven that it is always possible to do so using at most $$$n$$$ operations. $$$^\\dagger$$$ $$$\\text{dist}(x, y)$$$ denotes the number of edges on the (unique) simple path between vertices $$$x$$$ and $$$y$$$ on the tree.",
  "inputFormat": "Each test contains multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 200$$$) — the number of test cases. The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 2 \\cdot 10^3$$$) — the number of vertices of the tree. The following $$$n - 1$$$ lines of each test case describe the edges of the tree. The $$$i$$$-th of these lines contains two integers $$$u_i$$$ and $$$v_i$$$ ($$$1 \\le u_i, v_i \\le n$$$, $$$u_i \\neq v_i$$$), the indices of the vertices connected by the $$$i$$$-th edge. It is guaranteed that the given edges form a tree. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^3$$$.",
  "outputFormat": "For each test case, first output a single integer $$$op$$$ $$$(1 \\le op \\le n)$$$, the minimum number of operations needed to color all vertices of the tree black. Then, output $$$op$$$ lines, each containing $$$2$$$ integers. The $$$i$$$-th line should contain the values of $$$v$$$ and $$$d$$$ chosen for the $$$i$$$-th operation ($$$1 \\le v \\le n$$$, $$$0 \\le d \\le n - 1$$$) You must guarantee that at the end of $$$op$$$ operations, all vertices are colored black. If there are multiple solutions, you may output any one of them.",
  "sampleTests": [
    {
      "input": "4\n1\n2\n1 2\n4\n1 2\n1 3\n1 4\n7\n2 7\n3 2\n6 4\n5 7\n1 6\n6 7",
      "output": "1\n1 0\n2\n1 1\n2 1\n2\n1 1\n2 1\n3\n6 1\n7 1\n2 1"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1943/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}