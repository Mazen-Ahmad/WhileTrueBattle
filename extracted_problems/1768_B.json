{
  "contestId": 1768,
  "index": "B",
  "name": "Quick Sort",
  "rating": 900,
  "tags": [
    "implementation"
  ],
  "statement": "You are given a permutation$$$^\\dagger$$$ $$$p$$$ of length $$$n$$$ and a positive integer $$$k \\le n$$$. In one operation, you: Choose $$$k$$$ distinct elements $$$p_{i_1}, p_{i_2}, \\ldots, p_{i_k}$$$. Remove them and then add them sorted in increasing order to the end of the permutation. For example, if $$$p = [2,5,1,3,4]$$$ and $$$k = 2$$$ and you choose $$$5$$$ and $$$3$$$ as the elements for the operation, then $$$[2, \\color{red}{5}, 1, \\color{red}{3}, 4] \\rightarrow [2, 1, 4, \\color{red}{3},\\color{red}{5}]$$$. Find the minimum number of operations needed to sort the permutation in increasing order. It can be proven that it is always possible to do so. $$$^\\dagger$$$ A permutation of length $$$n$$$ is an array consisting of $$$n$$$ distinct integers from $$$1$$$ to $$$n$$$ in arbitrary order. For example, $$$[2,3,1,5,4]$$$ is a permutation, but $$$[1,2,2]$$$ is not a permutation ($$$2$$$ appears twice in the array), and $$$[1,3,4]$$$ is also not a permutation ($$$n=3$$$ but there is $$$4$$$ in the array).",
  "inputFormat": "The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. The description of test cases follows. The first line of each test case contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\le n \\le 10^5$$$, $$$1 \\le k \\le n$$$). The second line of each test case contains $$$n$$$ integers $$$p_1,p_2,\\ldots, p_n$$$ ($$$1 \\le p_i \\le n$$$). It is guaranteed that $$$p$$$ is a permutation. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.",
  "outputFormat": "For each test case output a single integer — the minimum number of operations needed to sort the permutation. It can be proven that it is always possible to do so.",
  "sampleTests": [
    {
      "input": "4\n3 2\n1 2 3\n3 1\n3 1 2\n4 2\n1 3 2 4\n4 2\n2 3 1 4",
      "output": "0\n1\n1\n2"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1768/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}