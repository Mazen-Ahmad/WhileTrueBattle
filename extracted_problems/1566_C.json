{
  "contestId": 1566,
  "index": "C",
  "name": "MAX-MEX Cut",
  "rating": 1000,
  "tags": [
    "implementation"
  ],
  "statement": "A binary string is a string that consists of characters $$$0$$$ and $$$1$$$. A bi-table is a table that has exactly two rows of equal length, each being a binary string. Let $$$\\operatorname{MEX}$$$ of a bi-table be the smallest digit among $$$0$$$, $$$1$$$, or $$$2$$$ that does not occur in the bi-table. For example, $$$\\operatorname{MEX}$$$ for $$$\\begin{bmatrix} 0011\\\\ 1010 \\end{bmatrix}$$$ is $$$2$$$, because $$$0$$$ and $$$1$$$ occur in the bi-table at least once. $$$\\operatorname{MEX}$$$ for $$$\\begin{bmatrix} 111\\\\ 111 \\end{bmatrix}$$$ is $$$0$$$, because $$$0$$$ and $$$2$$$ do not occur in the bi-table, and $$$0 < 2$$$. You are given a bi-table with $$$n$$$ columns. You should cut it into any number of bi-tables (each consisting of consecutive columns) so that each column is in exactly one bi-table. It is possible to cut the bi-table into a single bi-table — the whole bi-table. What is the maximal sum of $$$\\operatorname{MEX}$$$ of all resulting bi-tables can be?",
  "inputFormat": "The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — the number of test cases. Description of the test cases follows. The first line of the description of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$) — the number of columns in the bi-table. Each of the next two lines contains a binary string of length $$$n$$$ — the rows of the bi-table. It's guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$10^5$$$.",
  "outputFormat": "For each test case print a single integer — the maximal sum of $$$\\operatorname{MEX}$$$ of all bi-tables that it is possible to get by cutting the given bi-table optimally.",
  "sampleTests": [
    {
      "input": "4\n7\n0101000\n1101100\n5\n01100\n10101\n2\n01\n01\n6\n000000\n111111",
      "output": "8\n8\n2\n12"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1566/C",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}