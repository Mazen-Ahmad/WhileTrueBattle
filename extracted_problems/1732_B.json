{
  "contestId": 1732,
  "index": "B",
  "name": "Ugu",
  "rating": 900,
  "tags": [
    "implementation"
  ],
  "statement": "A binary string is a string consisting only of the characters 0 and 1 . You are given a binary string $$$s_1 s_2 \\ldots s_n$$$. It is necessary to make this string non-decreasing in the least number of operations. In other words, each character should be not less than the previous. In one operation, you can do the following: Select an arbitrary index $$$1 \\leq i \\leq n$$$ in the string; For all $$$j \\geq i$$$, change the value in the $$$j$$$-th position to the opposite, that is, if $$$s_j = 1$$$, then make $$$s_j = 0$$$, and vice versa. What is the minimum number of operations needed to make the string non-decreasing?",
  "inputFormat": "Each test consists of multiple test cases. The first line contains an integer $$$t$$$ ($$$1 \\leq t \\leq 10^4$$$) — the number of test cases. The description of test cases follows. The first line of each test cases a single integer $$$n$$$ ($$$1 \\leq n \\leq 10^5$$$) — the length of the string. The second line of each test case contains a binary string $$$s$$$ of length $$$n$$$. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output a single integer — the minimum number of operations that are needed to make the string non-decreasing.",
  "sampleTests": [
    {
      "input": "8\n1\n1\n2\n10\n3\n101\n4\n1100\n5\n11001\n6\n100010\n10\n0000110000\n7\n0101010",
      "output": "0\n1\n2\n1\n2\n3\n1\n5"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1732/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}