{
  "contestId": 2014,
  "index": "D",
  "name": "Robert Hood and Mrs Hood",
  "rating": 1400,
  "tags": [
    "implementation"
  ],
  "statement": "Impress thy brother, yet fret not thy mother. Robin's brother and mother are visiting, and Robin gets to choose the start day for each visitor. All days are numbered from $$$1$$$ to $$$n$$$. Visitors stay for $$$d$$$ continuous days, all of those $$$d$$$ days must be between day $$$1$$$ and $$$n$$$ inclusive. Robin has a total of $$$k$$$ risky 'jobs' planned. The $$$i$$$-th job takes place between days $$$l_i$$$ and $$$r_i$$$ inclusive, for $$$1 \\le i \\le k$$$. If a job takes place on any of the $$$d$$$ days, the visit overlaps with this job (the length of overlap is unimportant). Robin wants his brother's visit to overlap with the maximum number of distinct jobs , and his mother's the minimum. Find suitable start days for the visits of Robin's brother and mother. If there are multiple suitable days, choose the earliest one.",
  "inputFormat": "The first line of the input contains a single integer $$$t$$$ ($$$1\\leq t \\leq 10^4$$$) — the number of test cases. The first line of each test case consists of three integers $$$n$$$, $$$d$$$, $$$k$$$ ($$$1 \\le n \\le 10^5, 1 \\le d, k \\le n$$$) — the number of total days, duration of the visits, and the number of jobs. Then follow $$$k$$$ lines of each test case, each with two integers $$$l_i$$$ and $$$r_i$$$ ($$$1 \\le l_i \\le r_i \\le n$$$) — the start and end day of each job. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case, output two integers, the best starting days of Robin's brother and mother respectively. Both visits must fit between day $$$1$$$ and $$$n$$$ inclusive.",
  "sampleTests": [
    {
      "input": "6\n2 1 1\n1 2\n4 1 2\n1 2\n2 4\n7 2 3\n1 2\n1 3\n6 7\n5 1 2\n1 2\n3 5\n9 2 1\n2 8\n9 2 4\n7 9\n4 8\n1 3\n2 3",
      "output": "1 1\n2 1\n1 4\n1 1\n1 1\n3 4"
    }
  ],
  "timeLimit": 2000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2014/D",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}