{
  "contestId": 2072,
  "index": "E",
  "name": "Do You Love Your Hero and His Two-Hit Multi-Target Attacks?",
  "rating": 1500,
  "tags": [
    "implementation"
  ],
  "statement": "Akito decided to study a new powerful spell. Since it possesses immeasurable strength, it certainly requires a lot of space and careful preparation. For this, Akito went out into the field. Let's represent the field as a Cartesian coordinate system. For the spell, Akito needs to place $$$0 \\le n \\le 500$$$ staffs at distinct integer coordinates in the field such that there will be exactly $$$k$$$ pairs $$$(i, j)$$$ such that $$$1 \\le i < j \\le n$$$ and $$$\\rho(i, j) = d(i, j)$$$. Here, for two points with integer coordinates $$$a = (x_a, y_a)$$$ and $$$b = (x_b, y_b)$$$, $$$\\rho(a, b) = \\sqrt{(x_a - x_b)^2 + (y_a - y_b)^2}$$$ and $$$d(a, b) = |x_a - x_b| + |y_a - y_b|$$$.",
  "inputFormat": "The first line of input contains a single number $$$t$$$ ($$$1 \\le t \\le 1000$$$) — the number of test cases. In the only line of each test case, there is a single number $$$k$$$ ($$$0 \\le k \\le 10^5$$$) — the number of pairs of staffs for which the equality $$$\\rho(i, j) = d(i, j)$$$ must hold.",
  "outputFormat": "For each test case, the first line of output should print the number $$$n$$$ ($$$0 \\le n \\le 500$$$) — the number of placed staffs. In the following $$$n$$$ lines, pairs of integers $$$x_i, y_i$$$ $$$(-10^9 \\le x_i, y_i \\le 10^9)$$$ should be printed — the coordinates of the $$$i$$$-th staff. The points in which staffs stand must be distinct.",
  "sampleTests": [
    {
      "input": "3\n0\n2\n5",
      "output": "6\n69 52\n4 20\n789 9308706\n1337 1337\n-1234 -5678\n23456178 707\n10\n-236 -346262358\n273568 6435267\n2365437 31441367\n246574 -45642372\n-236 56\n4743623 -192892 \n10408080 -8173135\n-237415357 31441367\n-78125638 278\n56 143231\n5\n1 1\n2 1\n1 5\n3 5\n1 10"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/2072/E",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}