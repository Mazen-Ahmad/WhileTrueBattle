{
  "contestId": 1850,
  "index": "F",
  "name": "We Were Both Children",
  "rating": 1300,
  "tags": [
    "implementation"
  ],
  "statement": "Mihai and Slavic were looking at a group of $$$n$$$ frogs, numbered from $$$1$$$ to $$$n$$$, all initially located at point $$$0$$$. Frog $$$i$$$ has a hop length of $$$a_i$$$. Each second, frog $$$i$$$ hops $$$a_i$$$ units forward. Before any frogs start hopping, Slavic and Mihai can place exactly one trap in a coordinate in order to catch all frogs that will ever pass through the corresponding coordinate. However, the children can't go far away from their home so they can only place a trap in the first $$$n$$$ points (that is, in a point with a coordinate between $$$1$$$ and $$$n$$$) and the children can't place a trap in point $$$0$$$ since they are scared of frogs. Can you help Slavic and Mihai find out what is the maximum number of frogs they can catch using a trap?",
  "inputFormat": "The first line of the input contains a single integer $$$t$$$ ($$$1 \\le t \\le 100$$$) — the number of test cases. The description of test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 2 \\cdot 10^5$$$) — the number of frogs, which equals the distance Slavic and Mihai can travel to place a trap. The second line of each test case contains $$$n$$$ integers $$$a_1, \\ldots, a_n$$$ ($$$1 \\leq a_i \\leq 10^9$$$) — the lengths of the hops of the corresponding frogs. It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.",
  "outputFormat": "For each test case output a single integer — the maximum number of frogs Slavic and Mihai can catch using a trap.",
  "sampleTests": [
    {
      "input": "7\n5\n1 2 3 4 5\n3\n2 2 2\n6\n3 1 3 4 9 10\n9\n1 3 2 4 2 3 7 8 5\n1\n10\n8\n7 11 6 8 12 4 4 8\n10\n9 11 9 12 1 7 2 5 8 10",
      "output": "3\n3\n3\n5\n0\n4\n4"
    }
  ],
  "timeLimit": 3000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1850/F",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}