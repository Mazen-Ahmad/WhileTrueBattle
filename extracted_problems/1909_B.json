{
  "contestId": 1909,
  "index": "B",
  "name": "Make Almost Equal With Mod",
  "rating": 1200,
  "tags": [
    "implementation"
  ],
  "statement": "xi - Solar Storm ⠀ You are given an array $$$a_1, a_2, \\dots, a_n$$$ of distinct positive integers. You have to do the following operation exactly once : choose a positive integer $$$k$$$; for each $$$i$$$ from $$$1$$$ to $$$n$$$, replace $$$a_i$$$ with $$$a_i \\text{ mod } k^\\dagger$$$. Find a value of $$$k$$$ such that $$$1 \\leq k \\leq 10^{18}$$$ and the array $$$a_1, a_2, \\dots, a_n$$$ contains exactly $$$2$$$ distinct values at the end of the operation. It can be shown that, under the constraints of the problem, at least one such $$$k$$$ always exists. If there are multiple solutions, you can print any of them. $$$^\\dagger$$$ $$$a \\text{ mod } b$$$ denotes the remainder after dividing $$$a$$$ by $$$b$$$. For example: $$$7 \\text{ mod } 3=1$$$ since $$$7 = 3 \\cdot 2 + 1$$$ $$$15 \\text{ mod } 4=3$$$ since $$$15 = 4 \\cdot 3 + 3$$$ $$$21 \\text{ mod } 1=0$$$ since $$$21 = 21 \\cdot 1 + 0$$$",
  "inputFormat": "Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 500$$$). The description of the test cases follows. The first line of each test case contains a single integer $$$n$$$ ($$$2 \\le n \\le 100$$$) — the length of the array $$$a$$$. The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^{17}$$$) — the initial state of the array. It is guaranteed that all the $$$a_i$$$ are distinct. Note that there are no constraints on the sum of $$$n$$$ over all test cases.",
  "outputFormat": "For each test case, output a single integer: a value of $$$k$$$ ($$$1 \\leq k \\leq 10^{18}$$$) such that the array $$$a_1, a_2, \\dots, a_n$$$ contains exactly $$$2$$$ distinct values at the end of the operation.",
  "sampleTests": [
    {
      "input": "5\n4\n8 15 22 30\n5\n60 90 98 120 308\n6\n328 769 541 986 215 734\n5\n1000 2000 7000 11000 16000\n2\n2 1",
      "output": "7\n30\n3\n5000\n1000000000000000000"
    }
  ],
  "timeLimit": 1000,
  "memoryLimit": 256,
  "sourceUrl": "https://codeforces.com/problemset/problem/1909/B",
  "verified": true,
  "qualityScore": 4.0,
  "source": "codeforces-scraped"
}